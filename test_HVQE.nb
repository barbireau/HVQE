(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    459949,       9387]
NotebookOptionsPosition[    445542,       9122]
NotebookOutlinePosition[    445958,       9139]
CellTagsIndexPosition[    445915,       9136]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test HVQE", "Title",ExpressionUUID->"58e55096-6657-497b-9455-ec14abde8f10"],

Cell["\<\
Here I make a totally different implementation of some of the functionality \
of HVQE.py. This is used for cross checking the python implementation. I \
check whether the implementation here gives the same energy and infidelity, \
and gradients thereof, given an ansatz and a setting of the parameters for a \
periodic chain and for a periodic patch of the Kagome lattice. \
\>", "Text",
 CellChangeTimes->{{3.817659016236199*^9, 
  3.817659017355733*^9}},ExpressionUUID->"8bb99ae1-3151-4242-9362-\
a39a768271a7"],

Cell[CellGroupData[{

Cell["Preamble", "Section",ExpressionUUID->"d78061e7-5d77-4a9f-8446-aff52997570a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", "KroneckerProduct"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dagger", "=", "ConjugateTranspose"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ket0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ket1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "1", "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"singlet", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{"ket0", ",", "ket1"}], "]"}], "-", 
      RowBox[{"K", "[", 
       RowBox[{"ket1", ",", "ket0"}], "]"}]}], ")"}], "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"id", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"PauliMatrix", "[", "0", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"PauliMatrix", "[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Y", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"PauliMatrix", "[", "2", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"PauliMatrix", "[", "3", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MyId", "[", "m_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"K", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{"id", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"m", ">", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"id", ",", 
        RowBox[{"m", "==", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"m", "\[Equal]", "0"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyZeros", "[", "m_", "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"K", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{"ket0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"m", ">=", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"m", "\[Equal]", "0"}]}], "}"}]}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "[", "i", "]"}], "\[Element]", "Reals"}], " ", "&&",
       " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "\[Pi]"}], "<", 
       RowBox[{"\[Theta]", "[", "i", "]"}], "<", 
       RowBox[{"2", "\[Pi]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"termat", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"arg", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"K", "[", 
           RowBox[{
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "X", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "X", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{"n", "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "+", "\n", 
          RowBox[{"K", "[", 
           RowBox[{
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "Y", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "Y", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{"n", "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "+", "\n", 
          RowBox[{"K", "[", 
           RowBox[{
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "Z", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "Z", 
            ",", 
            RowBox[{"MyId", "[", 
             RowBox[{"n", "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ")"}], "/",
         "4"}]}], ")"}], "//", "N"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Hamiltonian", " ", "term", " ", "between", " ", "qubits", " ", "i", " ", 
    "and", " ", "j"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingletAt", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"arg", "=", 
        RowBox[{"Sort", "[", 
         RowBox[{"{", 
          RowBox[{"i", ",", "j"}], "}"}], "]"}]}], ";", " ", 
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"K", "[", 
           RowBox[{
            RowBox[{"MyZeros", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "ket0",
             ",", 
            RowBox[{"MyZeros", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "ket1",
             ",", 
            RowBox[{"MyZeros", "[", 
             RowBox[{"n", "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], "-", 
          RowBox[{"K", "[", 
           RowBox[{
            RowBox[{"MyZeros", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "ket1",
             ",", 
            RowBox[{"MyZeros", "[", 
             RowBox[{
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ",", "ket0",
             ",", 
            RowBox[{"MyZeros", "[", 
             RowBox[{"n", "-", 
              RowBox[{"arg", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", "2", "]"}]}]}], ")"}], "//", "N"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HeisenbergExp", "[", 
    RowBox[{"i_", ",", "j_", ",", "angle_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "angle", " ", 
       RowBox[{"termat", "[", 
        RowBox[{"i", ",", "j", ",", "n"}], "]"}]}], "]"}], "//", "N"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExpVal", "[", 
    RowBox[{"state_", ",", "operator_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Dagger", "[", "state", "]"}], ".", "operator", ".", "state"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Infidelity", "[", 
   RowBox[{"state1_", ",", "state2_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Dagger", "[", "state1", "]"}], ".", "state2"}], "]"}], 
    "2"]}]}], "\n", 
 RowBox[{
  RowBox[{"GroundState", "[", "Hamiltonian_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Eigensystem", "[", 
    RowBox[{"Hamiltonian", ",", "1"}], "]"}], "//", "N"}]}], "\n", 
 RowBox[{
  RowBox[{"RandPar", "[", "m_", "]"}], ":=", 
  RowBox[{"RandomReal", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "Pi"}], ",", 
      RowBox[{"2", "Pi"}]}], "}"}], ",", "m"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyND", "[", 
   RowBox[{"funcwitharg_", ",", "x_", ",", "x0_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<MyNd called\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[Delta]", "=", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{"a", "=", 
     RowBox[{"(", 
      RowBox[{"funcwitharg", "/.", 
       RowBox[{"{", 
        RowBox[{"x", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"x0", "+", "\[Delta]"}], ")"}]}], "}"}]}], ")"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "a", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"b", "=", 
     RowBox[{"funcwitharg", "/.", 
      RowBox[{"{", 
       RowBox[{"x", "\[Rule]", "x0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"Print", "[", "b", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}], "//", "N"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dif", "[", 
    RowBox[{"func_", ",", "i_", ",", "numpars_"}], "]"}], ":=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MyND", "[", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"numpars", "[", 
              RowBox[{"[", 
               RowBox[{"2", ";;", 
                RowBox[{"Length", "[", "numpars", "]"}]}], "]"}], "]"}]}], 
            "]"}], "]"}], ",", "x", ",", 
          RowBox[{"numpars", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"i", "\[Equal]", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", "\"\<dif called\>\"", "]"}], ";", 
         RowBox[{"MyND", "[", 
          RowBox[{
           RowBox[{"func", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"numpars", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", "x", "}"}], ",", 
              RowBox[{"numpars", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ";;", 
                 RowBox[{"Length", "[", "numpars", "]"}]}], "]"}], "]"}]}], 
             "]"}], "]"}], ",", "x", ",", 
           RowBox[{"numpars", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"1", "<", "i", "<", 
         RowBox[{"Length", "[", "numpars", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MyND", "[", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"numpars", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", 
                RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", "x", "}"}]}], "]"}], "]"}], ",", "x", ",", 
          RowBox[{"numpars", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"i", "\[Equal]", 
         RowBox[{"Length", "[", "numpars", "]"}]}]}], "}"}]}], "}"}], "]"}]}],
   " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grad", "[", 
   RowBox[{"func_", ",", "numpar_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Dif", "[", 
      RowBox[{"func", ",", "i", ",", "numpar"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "numpar", "]"}]}], "}"}]}], "]"}], "//", 
   "Chop"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"termat", "[", 
   RowBox[{"1", ",", "2", ",", "2"}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeltaAt", "[", 
   RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]", "=", 
     RowBox[{
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"list", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list", "[", 
      RowBox[{"[", "m", "]"}], "]"}], "=", "\[Delta]"}], ";", 
    "\[IndentingNewLine]", "list"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.817637357299633*^9, 3.817637432835342*^9}, 
   3.817637517049958*^9, {3.81763757106363*^9, 3.817637582641981*^9}, {
   3.817644920260687*^9, 3.817645034216312*^9}, {3.81764519150632*^9, 
   3.817645191930461*^9}, {3.81764758190836*^9, 3.81764768211399*^9}, {
   3.817652048073882*^9, 3.81765205267916*^9}, {3.81765209137549*^9, 
   3.817652148575493*^9}, {3.817652263404117*^9, 3.8176522644288893`*^9}, {
   3.817659093096993*^9, 3.817659113897306*^9}, {3.817659161268571*^9, 
   3.817659174480962*^9}, {3.817659214374414*^9, 3.817659239808085*^9}, {
   3.817659272085369*^9, 3.8176594269520693`*^9}, {3.817703961923059*^9, 
   3.817703972802615*^9}, 3.8177042705062523`*^9, 3.8177043200616283`*^9, 
   3.817704409025146*^9, {3.817704799384112*^9, 3.8177047994792147`*^9}, {
   3.817705199731432*^9, 3.817705200128846*^9}, {3.8177068787888327`*^9, 
   3.8177068828599243`*^9}, {3.817726810075996*^9, 3.817726810571109*^9}, {
   3.817726952646098*^9, 3.817726953540415*^9}, {3.817739354917378*^9, 
   3.817739358888421*^9}, {3.817739453557856*^9, 3.817739518724299*^9}, {
   3.8177395536618013`*^9, 3.817739567244255*^9}, {3.817741765729848*^9, 
   3.8177419503048983`*^9}, 3.817742073219283*^9, {3.817742534245843*^9, 
   3.817742554369687*^9}, {3.817750994009709*^9, 3.817750994266725*^9}, {
   3.817781219785919*^9, 3.817781227946368*^9}, 3.817781328400169*^9, {
   3.8177862872388163`*^9, 3.817786341445195*^9}, {3.817786383763261*^9, 
   3.817786635951746*^9}, {3.8177867488530483`*^9, 3.817786753331378*^9}, {
   3.817786801476956*^9, 3.81778681573143*^9}, {3.817789469595563*^9, 
   3.817789515246889*^9}, {3.817789962949306*^9, 3.817789976420561*^9}, {
   3.817790049751638*^9, 3.8177900590119667`*^9}, {3.817790515826807*^9, 
   3.817790528916847*^9}, {3.817790934327148*^9, 3.817791048921743*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"90edd53f-3a25-4678-b9ca-143f70faf01e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.25`", "0.`", "0.`", "0.`"},
     {"0.`", 
      RowBox[{"-", "0.25`"}], "0.5`", "0.`"},
     {"0.`", "0.5`", 
      RowBox[{"-", "0.25`"}], "0.`"},
     {"0.`", "0.`", "0.`", "0.25`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0., {
     1, {{0, 2, 4, 6, 8}, {{1}, {4}, {2}, {3}, {3}, {2}, {4}, {1}}}, {0.25, 
      0., -0.25, 0.5, -0.25, 0.5, 0.25, 0.}}]]]]], "Output",
 CellChangeTimes->{3.817791049586194*^9, 3.817791530714423*^9, 
  3.8177947783890457`*^9},
 CellLabel->
  "Out[225]//MatrixForm=",ExpressionUUID->"8df5a4f3-532a-4cbd-8ae1-\
4c3b5996054a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HamiltonianChain", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"termat", "[", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", "1"}], ",", "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "+", 
    RowBox[{"termat", "[", 
     RowBox[{"1", ",", "n", ",", "n"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EnergyChain", "[", 
    RowBox[{"state_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"ExpVal", "[", 
    RowBox[{"state", ",", 
     RowBox[{"HamiltonianChain", "[", "n", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InitStateChain", "[", "n_", "]"}], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"K", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{"singlet", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"n", "/", "2"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"e1be947e-081c-476d-9f22-9bf118e0d9e8"],

Cell[CellGroupData[{

Cell["Defs for Kagome 12", "Subsection",
 CellChangeTimes->{{3.817708198953924*^9, 
  3.8177082090819407`*^9}},ExpressionUUID->"155e0df4-4e3a-4b54-ad74-\
d3790e372023"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
OPYL4tgviJOrky7yvpzT3geyT1/SSfspqZu1Pae0aw+c9vq98zzXte15zkce
eWTr+dXWexfZjbYGnG5fF7MaqeeRxvDvHIijk0Ic5xfEsV8Qx35BHPsFcewX
xMnVSRdpa6kFtX3cPs9R1Un7KamTtr12buqfXaTnnQ7VAqc9v/WKK65oPb/a
ev+i92dbA+7SCabtbNfWSn/+nQNxdFKI4/yCOPYL4tgviGO/II79gjg5OukQ
vWXSeyb2fS6eTtpPSZ207T7v8/ff9hzQvt+fbb0zPed12vmV3k9145/p+h6r
07Q15C7PtZ7WSed9LWBm8+8ciKOTQhznF8SxXxDHfkEc+wVx7BfEydFJh3jt
zrY21acz6aT9jKGT9vn7b+uJXZ97uaatt6aP37Zfbc9Bnec9ezdqu2+6PNe2
7f5Ir+VLHP/OgTg6KcRxfkEc+wVx7BfEsV8Qx35BnByddIiutmfPnoXbpE7a
zxg6aZ/7vO29PPv0yrbX713rim371db50/f1ECZ97C7PtW27T9NzY4nj3zkQ
RyeFOM4viGO/II79gjj2C+LYL4gz1k46RCfTSftZVidN/TJ9zNQSU69MfS9N
2/M2F7nP297Ls+vzUtPtm/Tn15672bZfbX9uqMfy5/2a2u7TIZ4DTjv/zoE4
OinEcX5BHPsFcewXxLFfEMd+QRydVCftKvLvMz0vM7XDri10qE7a9nzQNF2e
2znpPUbTpI+btO1X2/vrRs8si9wXzM+/cyCOTgpxnF8Qx35BHPsFcewXxLFf
EEcn1Um7ivj7TO/h2dYal9FJk7Y2O+v9PNsaa/p4a9r2a+ivObqT5nht5VXi
3zkQRyeFOM4viGO/II79gjj2C+LYL4ijk+qkXQ3595kaY1Qr7Cu12raPlV4D
uE3ba+euf43avvulk64m/86BODopxHF+QRz7BXHsF8SxXxDHfkEcnVQn7Wqo
+2tal9w4qaWm16hNz+1M/XH9DHWfpxa6ZcuWiR8r3dY2bZ13fVstqZMu8v6k
Omks/86BODopxHF+QRz7BXHsF8SxXxDHfkEcnVQn7WqI+2ta30yTemV6nmaX
jznkfd723NDUaCdpe83dja/V23e/NrbgIWda8511u3TSWP6dA3F0Uojj/II4
9gvi2C+IY78gjv2CODqpTtrVovfXtPsp9dH1r1e7yO2ZR3oMve3jTXp8va2r
7tmz5x6/r+9+5aaT5uHfORBHJ4U4zi+IY78gjv2COPYL4tgviKOT6qRdLXp/
tb1ObWqk6fmZQ92eeaXnjk76eJP67aSvZdLr2rbt17Zt2zo32WXSSfPw7xyI
o5NCHOcXxLFfEMd+QRz7BXHsF8TRSXXSrha5v6a9J+k8jXTa7ZlX223c2D/b
XnM3Pcd0o7b9amuyuXukThrjtttub665/uvNZV+5rLn0isuaL15+dfOFy2+8
ay685LoDs/7XjDHd5vNf/nbzNx/f15x17iebsz90QXP+Zz7bXPb3X2i+dtNF
B+bCy886MGv/2xjTfa78zuebT33pjOZjF72z+ZvPndqcf/HHmksu//Zd++f8
Mmb6fHHKpF36m71fbM750IV3nl+fbD7+2YuaL915fl1108UH5rIbLjgwa//b
GNNvrvn2yc013/zr5tpv7Wq+9Q9nNHfc+f+t8TgzDO8nt93eXPt332s+84Wv
N5+689+H085AY8x8k3brc1+8vvnGt77f3HHH7L0EutNJddKuFrm/tm/f3rkt
Lnp7FpGe2zqr5ba9x+qk5yu17Vfb6/b2fe3hoemkw7nt9tubz1zy4eb8Tx7W
XHHlrzXXXPN/3GMuv+L/bt571uHNC1+9u/mNp77bGDPwPOIFJzdPPPYVzfPP
OsgY02se3Ow+a0fz4b1/3HJ+/dfm9LMPb1589Fuy77kxNc4jXnhy86TXOb+M
6TsvPPs/N+dcsrW5/Kr7bTq71ubKqx/UfPX6Q3VSGMjtd9zRnPfprzcv+n8+
3vzmH5yW/Qw1ZpXm4U9/T/PiO3fvrI9fk/tHAVRBJ9VJu1rk/or4Xoi4z7v0
y0mvmZueHzpJ237tbnnuaurJOemkw/jEZ9/bem3eNi8/9qTs/8YyptZ54rGv
zP7YnTFjmHee++z+59frnF/GRMxD//BdzeNfc2T2nwvGjGH2Xnrf3ufXl6/+
vdyXjTBq7//oVdnPSmPM3XPuJ/RSWIROqpN2Ne/91fY6tYvcP/v37w+5z9Nz
Qid9zNRGp/333bt3T/x4bfvV9nHS5HwfPZ10cedf+Ire1+hrc8r7/jL7v6uM
qXUe/fITsj+GZ0zJc87H/nju8+sd739l9h03ptZ59MtOzP7zwZiS50tX/uLc
59dXvnZQ7stHGKW/POEz2c9HY8zmOfpNn8v94wFGSyfVSbua9/6KuH92T3m/
00W1vXdo6peTXnM3vVZv6raTTHs9n0nPS02T87V3ddLFfOyTfz33NfravPnd
r87+7ypjap3Hvuq47I/lGVPinPnR5yx8fr3ltKOy77gxtc5/P/J12X9OGFPi
XPqV/7jw+XXF1b+S+zISRuWv33JR9nPRGNM+h73mE7l/TMAo6aSL375pzw1c
/76WYxfRSdv64ixtLXOITrq7pcGmfjnpfVZ37NjR+rGmddK2z5Pz+0Ynnd/H
Pjn/80g3zttPf1X2f1cZU+s85pVvyP6YnjElzSLPI/W6CMYsb/7bX74++88L
Y0qaRZ5Huul5pVf/cu7LSRgFzyM1ZhyT/t8zAP3opMPcvraPtbvl9VjHaN77
a1pH3rNnT+/bMek5nUN20iQ9R3Tjx21rs9Oa5rROmhrxpM+TJj3XdN6GvAid
dD4XfK7/+5HOmpd5v1JjwuZJx/1F9sf2jClh3nnO4s8j3Tiv8H6lxoTN9te/
NPvPDWNKmI/P8X6kM1vpdU/IfVkJRXvfR76a/Rw0xnSf8z51Xe4fGzAqOukw
t6+td6W2VotF7q+h7p/UJNs+1pCddOfOnVM/x9ps3bp16seZ1kmT3VOeU5qj
leqk/d1+x+2DX6OvTe5/UxlT8+R+fM+Y/PNg55cxI5z8PzuMyTsvOvs/h51f
wGS33XZ79vPPGNNvfv8FZ+X+0QGjopMOc/smvR7r2uyu5Dmli9xf6bVp2/58
1/fjTPfjrEY6VCed9hzYPrd9VidNpr2GcOqw8+5Laqx93+tUJ+3vM5ecG3ad
/sJX787+7ypjap3/ceILsz/OZ0zOOfnsZ8WdX0c7v4yJmqe88QXZf34Yk3M+
/IWtYefXVd94Vu7LSyjSRy68Lvv5Z4zpPx/+5LW5f3zAaOikw9y+3VOeF5gm
ddT0GrPpY69Nalhj6k+L3F/peaCz7p/UJidJ99ukltjWTIcyrV+uff5Zz/fs
0kmnvf7u2qTnlqbvsbb7aM3a99X6bl/Kztbq4596Qdh1+vvP+fPs/6YyptZ5
5M43Z3+cz5ic89ELDg07v/ac6/wyJmoedfhJ2X9+GJNzrrjqP4adX1d+7YG5
Ly+hSC88em/2888Y038Oe80ncv/4gNHQSYe5fV1a1zzPRyzJovfXtOeUrk16
/mTqk2vT9vvSx2p7n9Jp7xfax+4Z7Tvdhlm6dNKky+sJr5/199Gsntvne0wn
7ecnP/lxc/XV9w+7Tv/KlQ/J/m8qY2qdhz7tXdkf5zMm17zgrF9uvnb1A+Ie
Z/7qg7PvuDG1zkP/0PllVncOO+egsLNrbYB7+tGPb8t+9hlj5ptHHXp67h8h
MBo66XC3r63b6aQ/lVpyel5k3/uorU/ubumYQza9ae2yS4/t2kmT9PGGuH82
TnpuaVc6aT/XXn9V+HX6E593avZ/VxlT6zzr3U/I/nifMTnm/z3r8eHn15P+
zPllTNQ867Tfzf5zxJgc8+YLHhh+ft343Q/mvsyEolx9/Xezn3vGmPnn2zf9
U+4fIzAKOumwt6/LcyZXtZMmi7bS9fdX2/dAep3eobQ9VzP9ehd9Ommy9p6i
Q3bS1Hq7GmMnXbuPc8zFl14Yfp3+h4e9I/u/qYypdZ7xtmdkf7zPmBxz/FlP
DT+/nrHT+WVM1Bzy9qdl/zliTI457TP3Cz+/vvaNV2e9xjSmtPnk5703qTFj
ni9c/nfZf44YM4a5+eabD8zGX2/rJeecc07njz3Ex2ib9DHaPn7u23fkkUc2
9773vTs1rMc//vHZvweWfX9985vf7HUfpTnkkEOaK6644h4fJ/3vSb83feyh
vub73Oc+Ez/Hqaee2unPt+3XrElfW/qa+9xHG+eggw46cF9svN9y7ESt8/lL
P+lxZmNGPIe+4ynZH+8zJseceM5Tws+vQw8/JfuOG1PrHHKKTmpWc97z2diz
66ed9K+yX2caU9J86hKd1Jgxj05qTLeZt+OY6bPWAh/+8Idval2pX6VfT//9
05/+dPbbmvM+Ov744w+04o09Mt1H6dfTf+/T+YacthafbmvXjzHEfqXbsfa9
lGbj7Vn79dRV0+9Lvz/dt7n/fpc1OV17/SU6qTEjnj9+73/L/nifMTlm93m/
o5MaM+LZcdrjsv8cMSbHLKOT3njzCVmvMaE01/7d97Kfe8aY+efGm/45948R
GIUSWgOUqO01d3fv3t35Y9ivuv3zP39OJzVmxPO8Mx6S/fE+Y3LMaZ/5Tzqp
MSOd3/zDd2X/GWJMrllGJ93//ffkvsyEotx22+3NQ//gtOznnzGm/zzmj96X
+0cIjIaOA5vt3r17YiPdunVrr49jv+r2gx98Vic1ZqTzqCNOyv5YnzG5Zhnv
76aTGhMzBx/2luw/Q4zJNTop5PGCo/dmP/+MMf3npcd8MvePDxgNHQfuaf/+
/c2WLVsWfi5pYr/qppMaM975/eN3Zn+sz5hco5MaM97Z/vqXZv8ZYkyu0Ukh
jzPPvzr7+WeM6T/nfeq63D8+YDR0HLinttfb3bZtW++PZb/qppMaM8556DPe
1Tz3g/81+2N9xuQandSY8c7zzvyV7D9DjMk1OinkcccdTfOE556R/Qw0xnSf
//HCs3P/6IBR0XHKsGvXrqJmVe3YsWNiI02zd+/e3h/PftVNJzVmnPOE1/5V
9sf5jMk5Oqkx45wnve5l2X9+GJNzdFLI59wLrs1+Dhpjus95n/567h8bMCo6
Thna2lyuWUXTGmn6b/OwX3XTSY0Z3zz65Sdkf4zPmNyjkxozvnnkS9+Y/WeH
MblHJ4W8Xn3SZ7Ofh8aY2bPrrRfn/nEBo6PjlCF3F13lTprej3RaI03vVZp+
zzzsV910UmPGNf/9yGOzP75nTAmjkxozrvmtF721ee4Hfy37zw5jco9OCvm9
ZNcnsp+Lxpj2eemxF+b+MQGjpOOUIXcXXdVOml5LN73v6LT7Yp7X211jv+qm
kxoznvlvrzou+2N7xpQyOqkx45lHv/SNGqkx///opFAGzys1psx5zds+n/vH
A4yWjsMquv7666c+h3Rtdu/evdDnsV9100mNGcf8/hsOz/64njEljU5qzDjG
+5Eac8/RSaEc3q/UmHLmyS8+J/ePBBg9HYdVc/DBB3d6Tu3OnTsX/lz2q246
qTFlzkOf8a7mUUec1DzlpOdnfzzPmBJHJzWmzPnNp7+7OfjP39JsP+4vmued
+ZDsPyuMKW10UijPuZ+45sBr8R58yHuzn6PGrNI88tDTm8Ne84nmIxdel/vH
AFRBx2HVbN++Pfx5pGvsV92W0Ukvv2pf87dX3WSM2TAXHXF2c/4Ddh2Yc37n
mOaMPzi2OePpxzYffdprmoueevTS5vKT399c9w+XGjOq+fq3Xhl+fl16+bnZ
f04Yk3u+9NX/uWk+d9hZd51fZ//eMc0Hnrbu/PqDo5c2l5+yp7n2H/YZM6q5
7psv10mhYH//nX9sLvnSDc3n9l0/8Qw0xiw2abfSjqVdA4al47Bqdu3a1dpH
t2zZMlgjTexX3ZbRSW+99Qu5v0wo1o1/+qHmynv9Zfa58dnn5r4roJfvfe/k
8PPre987NfeXCcVK50bus+vA+XXnOQpjcsstb9FJoXAeB4M49gvi2C9WTXpv
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
J600lk4K5XN+QRz7BXHsF8SxX3XTSaF8Oul4aaVxdFIon+uI8dJK4+ikUD7n
F8SxXxDHfkEc+1U3nRTKp5OOm1YaQyeF8rmOGDetNIZOCuVzfkEc+wVx7BfE
sV9100mhfDrp+Gmlw9NJoXyuI8ZPKx2eTgrlc35BHPsFcewXxLFfddNJoXw6
aR200mHppFA+1xF10EqHpZNC+ZxfEMd+QRz7BXHsV910UiifTlqPYlrpjvG3
Up0Uyuc6oh5a6XB0Uiif8wvi2C+IY78gjv2qm04K5dNJ66KVDkMnhfK5jqiL
VjoMnRTK5/yCOPYL4tgviGO/6qaTQvl00vpopYvTSaF8riPqo5UuTieF8jm/
II79gjj2C+LYr7rppFA+nbROWulidFIon+uIOmmli9FJoXzOL4hjvyCO/YI4
9qtuOimUTyetl1Y6P50Uyuc6ol5a6fx0Uiif8wvi2C+IY78gjv2qm04K5dNJ
66aVzkcnhfK5jqibVjofnRTK5/yCOPYL4tgviGO/6qaTQvl00vpppf3ppFA+
1xH100r700mhfM4viGO/II79gjj2q246KZRPJ10NWmk/OimUz3XEatBK+9FJ
oXzOL4hjvyCO/YI49qtuOimUTyddHVppdzoplM91xOrQSrvTSaF8zi+IY78g
jv2COParbjoplE8nXS1aaTc6KZTPdcRq0Uq70UmhfM4viGO/II79gjj2q246
KZRPJ109WulsOimUz3XE6tFKZ9NJoXzOL4hjvyCO/YI49qtutXTSL33pS80Z
Z5zRvOUtbznwv9/85jc3H/zgB5vLLrss/HNDNJ10NWml0+mkUD7XEatJK51O
J4XyOb8gjv2COPYL4tivuo21k37/+99vTjzxxObRj3508zM/8zPNve51r9b5
uZ/7ueZxj3tcc8oppwx+O2AZdNLVpZW200mhfK4jVpdW2k4nhfI5vyCO/YI4
9gvi2K+6ja2T/vCHP2yOOOKIA+1zWhttm3//7/99c/zxxw92e2AZdNLVppVO
ppNC+VxHrDatdDKdFMrn/II49gvi2C+IY7/qNqZOml5Xd542Omke9ahH6U6M
hk6KVrqZTgrlcx2BVrqZTgrlc35BHPsFcewXxLFfdRtLJ33Vq141WCNdPxdd
dNEA9yLE0klJtNJ70kmhfK4jSIpppc85N/ddcYBOCuVzfkEc+wVx7BfEsV91
G0MnfcELXhDSSNfm0ksvHejehBg6KWu00rvppFA+1xGs0UrvppNC+ZxfEMd+
QRz7BXHsV91K76Qve9nLZnbO//Af/sOBlvre9763Of/885tPf/rTzfve977m
sMMOa+5///vP/PMPfOAD77wffjDgvQrD0klZTyv9KZ0Uyuc6gvW00p/SSaF8
zi+IY78gjv2COParbiV30tNOO21m4zz22GNnfpyTTz555sf5oz/6o7luIyyD
TspGWmndnfSEE05oduzYMXFyu+666w78/0u8bZTHdQQbaaU6KYyB8wvi2C+I
Y78gjv2qW6md9Kabbmr+3b/7d61d8xd+4Reaiy++uPPHu+yyy2a20o9+9KO9
bycsg07KJKveSmvspKeeeurMsyqX7373uwdep2HabXve856X7fZRJtcRTLLq
rVQnhfI5vyCO/YI49gvi2K+6ldpJ//RP/7T1cdh/82/+TfOFL/T/mJdccknz
r/7Vv2r9uA9/+MN7f0xYBp2UNqvcSmvqpOecc07n99Retttuu6159atf3em2
6aRs5DqCNqvcSnVSKJ/zC+LYL4hjvyCO/apbiZ302muvnfo47Jve9Ka5v97X
v/71Uz/23r175/7YEEUnZZpVbaU1dNILL7yweexjH9u5kS67k6bX/+1z23RS
NnIdwTSr2kp1Uiif8wvi2C+IY78gjv2qW4md9Igjjgh9jPhBD3pQ68d+2tOe
tvDHh6HppMyyiq10zJ30b//2b5unPOUpvRrkMjtpl9f/1UnpwnUEs6xiK9VJ
oXzOL4hjvyCO/YI49qtuJXbSrVu3tj4G+7a3vW3hr/kNb3hD68f/2Z/92eZH
P/rRwp8DhqST0sWqtdIxdtIbbrihec5znjNXg1xGJz377LMXum06KRu5jqCL
VWulOimUz/kFcewXxLFfEMd+1a20TpreQ3TaY7A/+MEPFv6ar7jiiqmfIz1O
DCXRSelqlVrpGDvpIg1yGZ100dumk7KR6wi6WqVWqpNC+ZxfEMd+QRz7BXHs
V91K66THHXdc6+Ovv/VbvzXY1/3rv/7rrZ/nxS9+8WCfB4agk9LHqrTSsXXS
/fv3d2qNf/Inf5Klk047f9fP9u3bdVI6cx1BH6vSSnVSKJ/zC+LYL4hjvyCO
/apbaZ30kEMOWUq/fNGLXtT6eX7jN35jsM8DQ9BJ6WsVWunYOmkyrT/u2LGj
+frXv9584xvfyNJJ9+3bN/XzvvGNbzzw+171qlfppHTmOoK+VqGV6qRQPucX
xLFfEMd+QRz7VbfSOulDH/rQ1sdfjz/++MG+7lNOOaX182zZsmWwzwND0EmZ
R+2tdIyddOfOnZvOnCc96UnNF7/4xbt+T65Omkz6fEcddVRz22233fV7dFL6
cB3BPGpvpToplM/5BXHsF8SxXxDHftWttE56//vfv/Xx13e9612Dfd2f/vSn
pz4OfeONNw72uWBROinzqrmVjrGTfvjDH77rnHnEIx7RfOxjH9v0e3J20tRs
1z5Pet2Fm266adPv0Unpw3UE86q5leqkUD7nF8SxXxCnbb/aruH37t2b4VbC
ODm/6lZaJ5322PBpp5022Nd93XXXTf1cX/hC99sM0XRSFlFrKx1jJ/2nf/qn
A2fM6aef3vp7cnbS9LoNz3jGM5qrrrqq9ffopPThOoJF1NpKdVIon/ML4tgv
iKOTQhznV91K66T3u9/9Wn92n3jiiYN93bfccsvUx6HPO++8wT4XLEonZVE1
ttIxdtIucnbSLnRS+nAdwaJqbKU6KZTP+QVx7BfE0UkhjvOrbqV10v/yX/5L
68/ul7zkJYN93bfeeuvUx6Hf//73D/a5YFE6KUOorZXqpHnopPThOoIh1NZK
dVIon/ML4tgviKOTkkv6Xtq1a1dz8MEHN9u2bbvreyz939Ovpf+2b9++3Ddz
Ic6vupXWSZ/61Ke2/ux+2MMeNtjX/cMf/nDq49BDvhcqLEonZSg1tVKdNA+d
lD5cRzCUmlqpTgrlc35BHPsFcXRSlm337t3N1q1bpz6OtX5SM92zZ0/umz0X
51fdSuukr3nNa6bu0ne+851Bvu7LLrts6uf5wAc+MMjngSHopAypllaqk+ah
k9KH6wiGVEsr1UmhfM4viGO/II5OyrKk54auf95o39m+fXuzf//+3F9GL86v
upXWSS+66KKpO3T00UcP8nU/+9nPnvp5LrjggkE+DwxBJ2VoNbRSnTQPnZQ+
XEcwtBpaqU4K5XN+QRz7BXF0UpYhPR90y5YtczfStUmddUyt1PlVt9I6afKL
v/iLU3fom9/85kJf83vf+96Ze/rlL395oc8BQ9JJiTD2VqqT5qGT0ofrCCKM
vZXqpFA+5xfEsV8QRyclWnoe6ayukl6Hd+P7lNbQSp1fdSuxk057DDbN7/zO
78z99Z577rmd/t8zfOtb35r7c8DQdFKijLmV6qR56KT04TqCKGNupToplM/5
BXHsF8TRSYmUHpue9jzSHTt2bHr8OjXQ9B6m0/5ceg3eMXB+1a3ETprM6phP
fvKTmx//+Me9PuYxxxzT+Xnft956a+/bDFF0UiKNtZXqpHnopPThOoJIY22l
OimUz/kFcewXxNFJidT2/NDUQGd9L6VeOu35pem1fEvn/KpbqZ10165dM1vm
L/3SLzWnnXbazI91+umnd+6jpTwODevppEQbYyvVSfPQSenDdQTRxthKdVIo
n/ML4tgviKOTEmVaq0mvxdvFtFaaXqu39NffdX7VrdROmjzmMY/p1DR//ud/
/sDzS//qr/6qOfTQQ5vjjjuu2blzZ/O4xz2uufe97927kZbwODSsp5OyDGNr
pTppHjopfbiOYBnG1kp1Uiif8wvi2C+Io5MSIfXLttfNTf20j2nvb5pen7dk
zq+6ldxJb7zxxuYBD3jAXJ1z1jz96U9v/W+PfvSjB76XYTE6Kcsyplaqk+ah
k9KH6wiWZUytVCeF8jm/II79gjg6KRHankuangM6j/Q+pkN+vGVxftWt5E6a
XHvttc2DH/zgQRvp4Ycf3px88smt//2www4b8B6GxemkLNNYWqlOmodOSh+u
I1imsbRSnRTK5/yCOPYL4uikREj9csjnf6bHuNu+J7u+hm8Ozq+6ld5Jf3ob
fzD1+Z9dJz0//O1vf/uBj5len7ft943hfYNZLTopyzaGVqqT5qGT0ofrCJZt
DK1UJ4XyOb8gjv2CODopQ0udpK2zLGL79u0TP256rmmpnF91G0MnXZP28iEP
echcjfTP/uzPmu985zt3faxf+IVfaP296fV+oSQ6KTmU3kp10jx0UvpwHUEO
pbdSnRTK5/yCOPYL4iy7k6bn/qXXZE1t6+CDD574vMP06+m/p+cepve5XAXp
60wdY+fOnQe+/vXv7Znuo/Rr6b/leK5Wenw5/Z2l29Dle6HtNXIX7Znp+2HS
xy35tXedX3UbUyddc/755zfPfe5zmwc96EGtP+f/7b/9t81v//ZvNyeccEJz
88033+PPX3jhha1/7ld/9VcHva0wBJ2UXEpupTppHjopfbiOIJeSW6lOCuVz
fkEc+wVxltFJ0+OTqfG1vRbrrEl9rc9jnNu2bWv9WEM9VjrtdWDT19pV6qPp
61vfRWdNuh9Tt5xX+jvs8nebblv6Wvp+L7T9PS/aeKfd56U+Bu78qtsYO+l6
t956a3PVVVc1F1100YH/femll858PuhznvOc1j086qijwm4rzEsnJadSW6lO
modOSh+uI8ip1Faqk0L5nF8Qx35BnMhOmh6XbHtuYd9JHbHre1u2Pe8wzSJ9
cb30cRZtdulj9OmjGyf14Hnem7NLJ02NdFpvbvtemNYyh3hucFSDjeL8qtvY
O2lf3/3ud6f+TEjNFUqjk5Jbia1UJ81DJ6UP1xHkVmIr1UmhfM4viGO/IE5k
Jx2qka6fLq009bi2/jjUa7S2NcT0611u35D9uG8rndVJuzTStu+Ftkbd5X7p
ou09Sofq30NzftVt1Trpy1/+8tafB4997GNz3zyYSCelBKW1Up00D52UPlxH
UILSWqlOCuVzfkEc+wVxIjtpeo7ftMcqUjtL73m5frq0wS63YVqHnOc5mOtN
e87krI7bpUGm+yF1v7WZdb/M00qn3a9tLbLL30Pb6/Qu+t6ka9qex5vuoxI5
v+q2Sp30mmuumfrz4Mwzz8x9E2EinZRSlNRKddI8dFL6cB1BKUpqpToplM/5
BXHsF8SJfn/S9c/rTM/lTB1t1sdIrXFaS0wfZ9ZruKZu2PbnF212015zd9bt
mtZv08dt+/Pp16e9Tm+6v/q8rm1b4217rmnX74W2pjvU8z2jn686NOdX3Vap
kz7xiU9s/Vnwa7/2a7lvHrTSSSlJKa30787brZNmoJPSh+sISlJKK73hb96k
k0LhnF8Qx35BnOhOmrpg6ppd31t0459tux1dPl5ba02tcRFtH3dWf23rq32e
D5p+X1sr7dMi2/78pK8t/Vq6v9c/zpya7KQuG/3+odM6bomcX3VblU56zDHH
TH3c+YMf/GDumwitdFJKU0Irveq1R+ukGeik9OE6gtKU0EqvOi7+/NJJYTHO
L4hjvyBOdCdNXa/P8xw3ansN2C7vM9r23MNFut2019yddt+kPzepb87zmrlt
rTT9Wtf7etLtn/Rc0L7PAx3q+6aNTkpJVqGTvv/975/6mPPv/u7vZr19MItO
Solyt1KdNA+dlD5cR1Ci3K1UJ4XyOb8gjv2CONGddFHTuuSsvpiaYdtzL1N/
nUfbc0Jnddu258bO8zzbabeja9ec9hjSIn/X8/5dDfE5Snwc3PlVt9o76Qc+
8IGZPyeuuOKKbLcPutBJKVXOVqqT5qGT0ofrCEqVs5XqpFA+5xfEsV8Qp/RO
mrQ9p7RLE5z22r3zPM+17TV3p92Wttabnr85r7YG3PV9Ome1j3neT3Tae8IO
qaTvzVmcX3WruZOeeOKJM39OvOENb8hy26APnZSS5WqlOmkeOil9uI6gZLla
qU4K5XN+QRz7BXHG0EnbXj931vuBJtPaXd8WOO25rdMeg2177uei92VbA+7y
ePC0x5C6ttaNlvWauCV9b87i/KpbjZ30lltuaZ75zGfObKSHHnroUm8XzEsn
pXQ5WqlOmodOSh+uIyhdjlaqk0L5nF8Qx35BnDF00rb+1vX5mG3PAe3bA9t6
56zX8E2vybvxz3R5f9VZ2vpxl9fynfYY0ryvBayTbub8qlttnfS4446b2UfT
POYxj1nabYJF6aSMwbJbqU6ah05KH64jGINlt1KdFMrn/II49gvijLmTdm2N
bT2x63Mv17T11mldse05qDt37uz8edu03S9dnmfbdn+k1/Id+vbopM6vWtXQ
SS+++OLmsMMO69RH0zzykY+88zbdGnqbYEg6KWOxzFaqk+ahk9KH6wjGYpmt
VCeF8jm/II79gjhj7qRdH+9oey/PPr2y7fV7Z3XFtueg7tmzp9PnnWXSx+7y
PNu2+3PWc2On0Uk3c37VbQyd9Mtf/vKdH+eaAz/DPvrRjzZvf/vbm1e84hXN
E57whM5tdG2e9rSnDXTPwfLopIzJslqpTpqHTkofriMYk2W1Up0Uyuf8gjj2
C+Lk7qSpYaaPmXpiapap8aVpe+7mvI93tL2XZ9fnpKbbNunPz3ruZtufG+ox
23m/prb7s+97tq6nk27m/Kpb6Z30Wc96Vu8W2jZ/8Rd/MeA9B8ujkzI2y2il
OmkeOil9uI5gbJbRSnVSKJ/zC+LYL4iTo5Om5zWlfti1hQ7xeEfb80HTdHlu
56T3GE2TPu40qfkO1SmGvF8WuS/aTLuPh9T2OUp8HNz5VbdV6KQHHXTQgeeh
wljppIxRdCvVSfPQSenDdQRjFN1KdVIon/ML4tgviLPMTprex7OtN0Z30qSt
y856Tmhb/0sfb5ahv97oTrpoB2/7uOl5w0Noe7/XEh77msT5VbfaO+mxxx47
4L0FeeikjFVkK9VJ89BJ6cN1BGMV2Up1Uiif8wvi2C+Is4xOmjpjVC/sI3Xa
eTpe22vndnmN2hyNtMROOtRr4i7rtX2H4vyqW42d9Jd/+ZebE088ccB7CfLS
SRmzqFaqk+ahk9KH6wjGLKqV6qRQPucXxLFfECe6k05rkxsntdT0OrXp+Z2p
Qa6fIR7vSC10y5YtEz9Oup1t2hpvl+dI5miki7w/6aI9s+2+iu6kXd9ndtmc
X3WrpZP+yq/8SnPEEUc0F1100YD3DpRBJ2XsIlqpTpqHTkofriMYu4hWqpNC
+ZxfEMd+QZzITjqtb6ZJzTI9V7PLxxzq8Y6254amPjtJ22vuznqt3lm3e2MH
HnKmNd9Zt2vRntn2fqxdnnvbRdv3VNvfX27Or7qNqZM+6EEPah72sIc1T37y
k5vDDz+8efOb39xccMEFzfe+970B7xEoj05KDYZupTppHjopfbiOoAZDt1Kd
FMrn/II49gviRHXSaa+Pmvpo32421OMd097fctLjqG1ddc+ePUu93UOL6qRt
91f69SFEf/yhOb/qVnonBXRS6jFkK9VJ89BJ6cN1BLUYspXqpFA+5xfEsV8Q
J6qTtr3+amqk6TmafQ35eEef5zxO+jr6vMbrtm3bOjfZZYrqpG2vszzU8z2j
n686NOdX3XRSKJ9OSk2GaqU6aR46KX24jqAmQ7VSnRTK5/yCOPYL4kR00mnv
STpPI512e+bRdvs29s+219zt89zFtq431Pt1ziuqk7bdZ0M9NtX2/rK57882
zq+66aRQPp2U2gzRSnXSPHRS+nAdQW2GaKU6KZTrjp/c3vzL5f+zufkjVzY3
f+grzQ8+8XVjzMCTduvmj17Z/MuVNzXN7XfkXnuoSkQn3b59+8J9sevtmVdb
b1vfcdveC7PP461trxOb+/mPUZ00iWqZbQ02fb5SeXyjbjoplE8npUaLtlKd
NA+dlD5cR1CjRVupTgrl2X/KZc0Njzq1ufJfv2qw19g2xnSYO3fuGw8/pfnu
8Rc3d9z6k9w/CmD0IjppRIMb+vGOLv1y0mvm9n392LbnrqaWnFNkJ43o5Elb
t859X07j8Y266aRQPp2UWi3SSnXSPHRS+nAdQa0WaaU6KZTjH8/8av5OZIy5
a777+oty/1iAURu6k0a87ur+/fsH/5jpMdNJHy+10Wn/PXXPIT5PmpyP20Z2
0q6va9xX23u99v07WSaPb9RNJ4Xy6aTUbN5WWmsnTdJ1Q9uUoOTbRllcR1Cz
eVupTgpl+PYfnZ29CRljNs/f/+57mtu//y+5f0TAKA3dSdN/H7ppTnu/00W0
vXdoejx10nMX0+u7zvM4Rlvfy/nau5GddFrXnvfjT+vvJT+25PGNuumkUD6d
lNrN00pr7qRQC9cR1G6eVqqTQn7fesaZ2VuQMaZ9rv+1t2qlMIdldtJ5e1Zb
z1y0k7b119QvJ7127I4dOwb9PGnWvx/qMkV20iTdV5M+ft/XLZ718eb9O1kW
j2/UTSeF8umkrIK+rVQnhfK5jmAV9G2lOink9c3/sSd7AzLGzJ6//7335v5x
AaMzdCed9jqze/bs6X372t6TcohOmqTniE5qeUM2zdSHJ32eNOm5pjmeDxnd
SYf8PpjW3nN15q48vlE3nRTKp5OyKvq0Up0Uyuc6glXRp5XqpJDPd4+7KHv7
McZ0n+++4eLcPzZgVIbupElbE+z7XMLUwNo+1lCddOfOnVM//tos+t6a055T
mqOVRnfSpO05oOnvtGvfnNaY03N+S+fxjbrppFA+nZRV0rWV6qRQPtcRrJKu
rVQnhTzu+Mnt2ZuPMab/3PGj23L/+IDRiOikbX0sTdf35ExdcVYjHaKTTnve
4zy3e5pprx+cOuy8jTK1xL63bxmdNN23bX+HXVpp+vNt7+2a/vwYHvf2+Ebd
ltFJT37f3+T+MmHUdFJWTZdWuoxO+pb3nJH7roBRcx3BqunSSnVSyGP/Oy7L
3nuMMf3nlpMuyf3jA0YjopOm/jWtOabnAbY9Zplek3VST2zrbUOY1i/XPvcQ
z/ec9tzI9c8tTY141mO66e9h4/uo9mmcy+ikybTn0ab7In0NG+/bte477b5K
H3cMPL5Rt2V00mfsfEfz2pM/n/tLhdHSSVlFs1rpMjrpoYef0rzmrV7rCebl
OoJVNKuV6qSQxw2PfGf23mOM6T83PMpr/EBXEZ00mfac0vXPoUyNcm3afl/6
WG3vUzrE+1NOa3lrn38oXV5LeP2sv39m9dw+zyldVidNunwvpD6cvr62549G
/X1E8/hG3f75ny9cSif9jae+WyuFOemkrKpprfSrxy6nk6bzSyuF+biOYFVN
baUnHKWTwpLd8S8/yd56jDHzzVd/7qjcP0JgNKI6aXpOYJfm1bWJtbXMobre
tHY5RItdL328Ie6bjdPn/TqX2UmTLq20y6T3kx0Tj2/Ubd9V5y6tk2qlMB+d
lFXW1ko/9rZXLq2TaqUwH9cRrLK2Vnrx6S8OP7+uuvq1ub98KMqtl347e+sx
xsw/P77ultw/RmAUojppsmgrXf/8yPR5J/2e9Dq9Q2h7rmb69Qhrry07ZCdN
rberZXfSZJGvN31tQ/1dL5PHN+Kt3cc55rzPvWepnTTNX7/p01m/ZmPGNtdc
c82ByX07jMk1f/esMzZdK3/g7S9faidNc/RJzi9j+szNN998YHLfDmNyzQ2H
fnDT+XXhGc8JP78u3rcz+9duTElz09mXZ+88xpj55x8+eXX2nyPGjGHarr/a
etU555zT6+N/85vfbI488sjm3ve+d+cmdsghhzRXXHHFPT5O+t+Tfm/62EPc
D/e5z30mfvxTTz019P5PX1f6evvcPxvnoIMOOnA/bLzPps1Qf7/zfr1dv7Z0
v7zwhS888H2Ue1fmGY9v1D0f+Wx8J336n9+zk2qlxvQbndSYza30/W97xdL/
3/lopcb0G9cRxmxupZ/8wDI66eHZv25jSpqbdVJjRj06qTHdZlnXX6lzHX/8
8c3jH//4TU0ydb706+m/92l9Q01qg5MaXbqdy74dqXc+/OEPPzAbb8/ar6fO
mH5f+v1j7Yfp7zl9DenvPf39r7/P09eY2mhq1GP9+tbG4xvxk9Onvvzh8Ov0
3/vTUzc9zuw1eKE7r7sLP7X+NXg/8Ma/DD+/nvi8yeeX1+CFbkr4ty6UYP1r
8O595wvDz6/PX7Fr9o2CFXLrZTdm7zzGmPnnx1/3urvQheuv9tfcTe+JCouw
X3X76ncuar529QPDrtG/cuVDJj7GrJVCdzop3G2tlX741a+88/x6QOD59X9N
Pb+0UpjNdQTcba2VfnhX7OvGX/m1+zWfuX587/cDke740W3ZO48xZr656n97
de4fITAaq379lVropEa6devW3DeNCqz6ftXuazdd1Jxz/qFh1+lnfPhFUx9n
1kphNp0U7im10g8f+ZfNeRf8Qdj59b6zd848v7RSmM51BNxTaqXnHv3K5jN/
+4th59feS++rk8IENzz61Oy9xxjTf254zLty//iA0Vjl66/9+/c3W7Zs8VxS
wqzyfq2C1Elf+4Fnhl2n/8Uxb5r5OLNWCtPppLDZxz9wQnPS2U8PO79ecNRb
O51fWim0cx0Bm31sz3HNuz7zn8LOr5MueIBOChPsf+eXsvceY0z/ueXNX8j9
4wNGY5Wvv9peb3fbtm25bxqVWOX9WgWpkz7/rIPCrtN/8w9mP8aslcJ0Oils
9vFr3tm8+Jy486vr2aWVQjvXEbDZ+Ve/rTnsnP8cdn6lazudFCa4/Y7svccY
03+a227P/dMDRmNVr7927NgxsZGm2bt3b+6bRyVWdb9WxVonfcMHdwx+jf6y
Y07q9TizVgqT6aSwWeqk6fx645l/NPj5dcRru70WglYK07mOgM1SJ03n12mf
ud/g59fbLnyATgpT3HLC57M3H2NM97nlpEty/9iAUVnF669pjTT9NxjKKu7X
KlnrpGned95wrfS0M1/a+zFmrRQm00lhs7VOmubsvcO9/u5b33Pk3OeXVgr3
5DoCNlvrpGkuuGzrYOfXuZfc966Pq5NCu2897YPZ248xZvb8/ZPel/vHBYzO
Kl1/pfcjndZI03uVpt8DQ1ml/VpF6ztpmnd/6NkLX6N/6GN/0jzi6fM9xqyV
wmY6KWy2vpOm1y/8+Gcfv/D59aZTj17o7NJK4Z5cR8Bm6zvp4ece1Fx8+X0X
Pr/O/vx973FNp5PCdN9+1tnZG5Axpn2+8Rtva+744Y9z/6iA0VmV66/0Wrrp
fUfbGqnX2yXCquzXqtrYSdOc/pFnzX2N/p4zj2ge8YeLPcaslcI96aSw2fpO
utZKz/740+Y+v3a/56hBzi6tFO7mOgI2W99J11rpJy6bv5V+6JL7brqe00lh
tm8948zsLcgYs3n+/omnNxopzKf266/02Oi055Cuze7du3PfVCpU+36tukmd
NM2udx/e+xr9lcedONhjzFop3E0nhc02dtK1OfY9h/U+v146x/uRaqUwm+sI
2GxjJ73rdX0+07+Rvv3CX5r4sXRS6OaWN16SvQkZY+6e9B7CwPxqvv46+OCD
Z/bRNDt37sx9U6lUzftFeydN89hXva550at3N3vOfUlz5Ve3bbou/8qVD2nO
/MgLm5cdc1LzsKcN+/iyVgp300lhs7ZOmuZ3jzq2ecXr3ticdd7zmyuvevCm
8+uKK3+1ed/ZO5sXHPXWsLNLKwXXETBJWydN8+JzDmpO/fT9m0996b7N1yZ0
0auuvl/z8Uvv27zpgge2fgydFPr7/nu+3Pzdb5/WfPVnjszeiYxZpfnqzx3V
3PCoU5tb3vSF5o4f35b7RwGMXs3XX9u3b/c8UrKqeb+Y3kl/2kqPu+vx3if9
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
llbKNHRSaNJJu6WVMg3XEdCkk0J+9i+IY74gjvmCOOarbjpp97K00iO10rR0
UmjSSbunlbIe1xHQpJNCfvYviGO+II75gjjmq246aQ5aKZPopNCkk+aglTKJ
6who0kkhP/sXxDFfEMd8QRzzVTedNA+tlHF0UmjSSfPQShnHdQQ06aSQn/0L
4pgviGO+II75qptOmotWylp0UmjSSXPRSlmL6who0kkhP/sXxDFfEMd8QRzz
VTedNB+tlK3ppNCkk+ajlbI11xHQpJNCfvYviGO+II75gjjmq246aU5aKavp
pNCkk+aklbKa6who0kkhP/sXxDFfEMd8QRzzVTedNC+tlBU6KTTppHlppaxw
HQFNOinkZ/+COOYL4pgviGO+6qaT5qaVUuik0KST5qaVUriOgCadFPKzf0Ec
8wVxzBfEMV9100nzy9JKnTV3RyeFJp00P60U1xHQpJNCfvYviGO+II75gjjm
q246aT9opcOmk0KTTtoPWumwuY6AJp0U8rN/QRzzBXHMF8QxX3XTSftDKx0u
nRSadNL+0EqHy3UENOmkkJ/9C+KYL4hjviCO+aqbTtovWukw6aTQpJP2i1Y6
TK4joEknhfzsXxDHfEEc8wVxzFfddNL+OdpZ8+DopNCkk/aPVjo8riOgSSeF
/OxfEMd8QRzzBXHMV9100n7SSodFJ4UmnbSftNJhcR0BTTop5Gf/gjjmC+KY
L4hjvuqmk/aXVjocOik06aT9pZUOh+sIaNJJIT/7F8QxXxDHfEEc81U3nbTf
tNJh0EmhSSftN610GFxHQJNOCvnZvyCO+YI45gvimK+66aT9p5XWTyeFJp20
/7TS+rmOgCadFPKzf0Ec8wVxzBfEMV9100nroJXWTSeFJp20Dlpp3VxHQJNO
CvnZvyCO+YI45gvimK+66aT10ErrpZNCk05aD620Xq4joEknhfzsXxDHfEEc
8wVxzFfddNK6aKV10kmhSSeti1ZaJ9cR0KSTQn72L4hjviCO+YI45qtuOml9
srTSI9/xV10/FdXQSaFJJ62PVlof1xHQpJNCfvYviGO+II75gjjmq246aZ20
0rropNCkk9ZJK62L6who0kkhP/sXxDFfEMd8QRzzVTedtF5aaT10UmjSSeul
ldbDdQQ06aSQn/0L4pgviGO+II75qptOWjettA46KTTppHXTSuvgOgKadFLI
z/4FccwXxDFfEMd81U0nrZ9W2n86KTTppPXTSvvPdQQ06aSQn/0L4pgviGO+
II75qptOOgxaab/ppNCkkw6DVtpvriOgSSeF/OxfEMd8QRzzBXHMV9100uHQ
SvtLJ4UmnXQ4tNL+ch0BTTop5Gf/gjjmC+KYL4hjvuqmkw6LVtpPOik06aTD
opX2k+sIaNJJIT/7F8QxXxDHfEEc81U3nXR4tNL+0UmhSScdHq20f1xHQJNO
CvnZvyCO+YI45gvimK+66aTDpJX2i04KTTrpMGml/eI6App0UsjP/gVxzBfE
MV8Qx3zVTScdLq20P3RSaNJJh0sr7Q/XEdCkk0J+9i+IY74gjvmCOOarbjrp
sGml/aCTQpNOOmxaaT+4joAmnRTys39BHPMFccwXxDFfddNJ0Urz00mhSSdF
K83PdQQ06aSQn/0L4pgviGO+II75qptOSqGV5qaTQpNOSqGV5uY6App0UsjP
/gVxzBfEMV8Qx3zVTSdlhVaal04KTTopK7TSvFxHQJNOCvnZvyCO+YI45gvi
mK+6Ze2kL3/5y0d3u9vdQhdNWmlOOik06aSsppXm5DoCmnRSyM/+BXHMF8Qx
XxDHfNUtayd9ylOeopN2RCvNRyeFJp2UrWml+biOgCadFPKzf0Ec8wVxzBfE
MV91y9pJoxupTjqZVpqLTgpNOilr0UpzGcp1xI9+9KNf/f+bN2/u8JHQBzop
5DeU/Qu6YL4gjvmCOOarbjop42ileeik0KSTMo5Wmkeb1xGXXnrpmqsL11xz
zejII48c7bzzzqN73OMejZ8xf+M3fmP0sIc9bLRhw4bR5z//+U4eI3nppJCf
czCIY74gjvmCOOarbhk76Y033qiTJqGV5qCTQlOWTvoXf/EXS9mz7Gez0Upz
aOM64u1vf/vEP/+f+tSnWnq06/vc5z43etrTnjbzjJaeeskllyztcZKbTgr5
OQeDOOYL4pgviGO+6paxk15++eXOlRPRSrunk0KTTmo/W49W2r1FriPOPPPM
qf78L6uTvuY1r1l4Vl/2spct5bGSm04K+TkHgzjmC+KYL4hjvuqWsZOefvrp
Y8+XTjnllNYW09NKu6WTQpNOqpNOQyvt1jzXERdeeOHo4Q9/+NR//qM7afm8
0cc85jGtzWu5rVtvvTX0MZObTgr5OQeDOOYL4pgviGO+6paxkx522GFrnis9
61nPCnoWmEaWs+YhtlKdFJp0Up10Wln2ryG20lmuI/7qr/5q9OQnP3nmP/+R
nfSWW24ZPehBD2p9Znfcccewx0x+Oink5xwM4pgviGO+II75qlvGTvqc5zxn
zTOl0k/pVpaz5qG1Up0UmnRSnXQWWfavobXSaa4jvv71r4/92a/rTrrTTjut
e///+l//69GjHvWoLX+fb5dddhn93u/93lSP+3nPe17Y4yY3nRTycw4GccwX
xDFfEMd81S1jJx13nnTGGWcEPQvMIstZ85BaqU4KTTrpHWu//fZbwrNdhyz7
15Ba6XrXEfvvv//CMxDVSQ888MB1++jxxx8/+vnPf974vV/4whdGz372s9d9
7KeeemrIYyc3nRTycw4GccwXxDFfEMd81a1PnfSv/3q22yFOlrPmobRSnRSa
snTS4hOf+ETomtRZrrrqquBnui5Z9q+htNL1riPa+LsCEZ20fEbqpPv8n//z
f46+8pWvrHs7p5xyysTb+a3f+q0tn3/KsOikkJ9zMIhjviCO+YI45qtu2Trp
rbfeOvYs6cc//nHgM8Gsspw1D6GV6qTQlKmTRjrxxBO9b2fLsuxfQ2il611H
7L333hM7YnlN50033bT0TjrpM0lL2yzvFTytY445ZuLjf9WrXtX64yc3nRTy
cw4GccwXxDFfEMd81S1bJ/3yl7889hyJfLKcNdfeSiM76Y9+9KPR3/zN34wu
vvji0TnnnDM677zztpw5X3311SH3B20ZSied1FfKe3synyz7V+2tdL3riPe9
731r/tl+7nOfe5fXSi+zk5522mkT7+/MM8+c+Taf+tSnjr29f/Ev/sXolltu
afVrIDedFPJzDgZxzBfEMV8Qx3zVLVsnLZ1mrTOkRz7ykYHPAovIctZccytt
u5OWFvriF794y/sGTjoL/mf/7J9teU3NIYccMrriiitau39owxA66aT37Nx9
9907fWw1yLJ/1dxK17uOuP766+/y5/rJT37y6P/+3+bzscxO+sAHPnDsfe26
665z3eYXv/jFiV/D0Ucf3erXQG46KeTnHAzimC+IY74gjvmqW7ZOetxxx615
frTPPvsEPgssKstZc62ttK1Oevzxx4/++3//7xPPaietHXbYYfEvBloyhE46
aR4vv/zyTh9bLbLsX7W20mmuI1b+TF9wwQXr/proTnrJJZdMvK9F/s7QHnvs
MfZ2t99++9a+BvLTSSE/52AQx3xBHPMFccxX3bJ10pe+9KVrnh+Vz3Yityxn
zTW20kU7aXlP3fvd735z99Gt14te9KL2vjiYU+2d9B3veMfYGXziE5/Y2eOq
UZb9q8ZW2tZ1xLI66aTPS91pp50Wuu2LLrpo4tfxpS99qaWvgux0UsjPORjE
MV8Qx3xBHPNVt2yd9PGPf/yaZ0fnnntu4LNAW7KcNdfWShfppOU1pG310dXr
wQ9+8Og73/lOu18ozKD2Tjpp/srffaBdWfav2lpp3zrpb/3Wb429n3e9610L
3/6kr+Ooo45q4SugD3RSyM85GMQxXxDHfEEc81W3bJ103NnRVVddFfgs0KYs
Z801tdJ5O+mRRx4Z0khXVvnsUuhKzZ303e9+99i523HHHTt5TEOQZf+qqZX2
qZNedtllE+/npptuWvg+9tprr7G3/9jHPraFr4I+0EkhP+dgEMd8QRzzBXHM
V9360knPOeec0SmnnLLl79ofeuihW9Zb3vKW0Xvf+94t52M//OEPA58lZpXl
rLmWVjpPJz3zzDPX7ZwPeMADtrTUz3zmM1teG/q9731vy/8t/7vM2v3vf/91
b2O//faL+aJhHTV30kkzV/ZD4mTZv2pppX3qpOVny+i/F7Rx48ax9/Ebv/Eb
rdwH+emkkJ9zMIhjviCO+YI45qtumTrptddeu/Dr2/bdd9/RBRdcEPysMY0s
Z801tNJZO+nNN9+87qxM+/6BJ5988rq3deGFF875lcH8au2kp59++sR5I16W
/auGVtqnTrrzzjuPvY8DDjiglfv467/+64lfi/dPGQadFPJzDgZxzBfEMV8Q
x3zVLVMn/cQnPrFwJ11Z22233ejYY48NfvZYT5az5r630lk76YEHHjhxPq64
4oqZ7v/888+feHvlbBmWrdZOOmnWPvCBDyz98QxVlv2r7620T530P/2n/zT2
Pt7znve0ch+33XbbxK/lwx/+cCv3Q246KeTnHAzimC+IY74gjvmqW6ZOOunz
2BZZH/zgB4OfRSbJctbc51Y6Sye99dZbR//yX/7L1s9gjzjiiIlzdvXVV891
uzCvGjvpGWec4bWkiWTZv/rcSvvSSW+88caJ93HllVcufB8rfud3fmfs/ZT3
vKd+Oink5xwM4pgviGO+II75qlumTvq6170upJOW9bKXvSz4mWSSLGfNfW2l
s3TS8nqzcXPwuMc9bu7H8Itf/GLijL31rW+d+7ZhHjV20kkz9s53vnOpj4U7
ZNm/+tpK+9JJP/3pT0+8j1tuuWXh+1ixww47jL0fn/k9DDop5OccDOKYL4hj
viCO+apbpk66xx57hHXSsp71rGcFP5tMkuWsuY+tdJZOWj6jd9wMlM89XMQL
XvCCsbf9whe+cKHbhlnV1knPOussryVNKsv+1cdW2pdO+v73v3/s7W+zzTYL
3/5qe+6559j72mWXXVq9L3LSSSE/52AQx3xBHPMFccxX3TJ10nI+tPvuu49e
8YpXjI477rgtr50588wzR+edd97osssuG1100UVbzpFPPvnkLb+mfCbiv//3
/36mVvqa17wm+BllkixnzX1rpbN00oc//OFj//x/4xvfWOhxvOMd7wh5rSrM
o7ZOOmnvOvHEE5f2OFhblv2rb620L530LW95y9jb/x//438sfPurHXDAAWPv
62EPe1ir90VOOink5xwM4pgviGO+II75qlumTjqvv/zLvxw9//nPn7qVbtrk
3KBLWc6a+9RKZ+mkv/u7vzv2z/5PfvKThR7H+eefP/a2H/WoRy102zCrmjrp
Rz/6Ua8l7YEs+1efWmlfOumrX/3qsbf/4Ac/eOHbX+3QQw8de19/+Id/2Op9
kZNOCvk5B4M45gvimC+IY77qVkMnXfH1r3999JSnPGWqVnrzzTcv5TGxtixn
zX1ppbN00kl/7hf9fLWPfexjY297t912W+i2YVY1ddJJrwN/85vfvJTHwHSy
7F99aaV96aTlc0HH3X55/5I2HXXUUWPv6973vner90VOOink5xwM4pgviGO+
II75qltNnXTFq171qnU76cEHH7zUx0RTlrPmPrTSWTppeS3KuD/3V1xxxUKP
o7zn9bjbLq/FgWWqpZOW95aftF8t+jpw2pdl/+pDK+1LJ33e85439vbb/szQ
E044Yex93ete92r1vshJJ4X8nINBHPMFccwXxDFfdauxkxYveclLJp6p/eZv
/ubSHxNNWc6as7fSWTrp05/+9LF/7v/sz/5socfxzGc+c+xtn3vuuQvdNsyq
lk5a3rN63Fxt2LAh/P6ZT5b9K3sr7Usn3XPPPcfe/jOe8YyFb3+1SX/nqCzq
p5NCfs7BII75gjjmC+KYr7rV2kmL+973vhPPoc4555xOHhd3leWsOXMrnaWT
nnTSSSHv5/e9731vdPe7393fOyCNGjrphRdeOHGf8h7xuWXZvzK30ho66R57
7LHw7a82aZ/edtttW70vctJJIT/nYBDHfEGccfM17vrj4osv7uBRQj/Zv+pW
cyc9/fTTJ56rHXjggZ08LpqynDVnbaWzdNIbbrhh4p/78r7U89h3333H3uZB
Bx00123CImropI95zGPGztUrX/nK0PumHVn2r6yttC+d9LnPfe7Y2y/v09Cm
4447bux9bbfddq3eFznppJCfczCIY74gjk4Kcexfdau5kxb/4T/8h7F7wSMe
8YjOHhdNWc6aM7bSWTpp8YIXvGDimfLhhx8+0/2feOKJE2/vxhtvnPErgsX1
vZNecsklE+fq2muvDbtv2pVl/8rYSvvSSSd9XsOTn/zkhW9/tSOOOGLsfZXP
GKd+Oink5xwM4pgviKOTQhz7V91q76RPe9rTxu4F97znPTt7XKwty1lztlY6
ayctv3bSmXJZu+222+jv/u7v1r2tI488cuLtvPWtb13gK4P59b2TPuEJTxg7
V6XZ0C9Z9q9srbQvnfSQQw4Ze/s77rjjwre/2mtf+9qx9/XQhz601fsiJ50U
8nMOBnHMF8TRSSGO/atutXfSww47bOLZGvlkOWvO1Epn7aTFxo0b122lZb3i
Fa8YXXPNNY3f/7WvfW206667Tvy93ruaLvW5k37yk5+cOFt/+7d/G3K/xMqy
f2VqpX3ppEcdddTY27///e+/8O2vNum1q095ylNavS9y0kkhP+dgEMd8QRyd
lK6V8+htt922yg5j/6pb7Z30bW97m07aQ1nOmrO00nk6aXHooYdO1UrL2mmn
nba8v+473/nO0XOe85x1f3157Q10qc+d9KlPferY2Sqfk0h/Zdm/srTSvnTS
0047beztt/3+I5Pe6+TFL35xq/dFTjop5OccDOKYL4ijk9KV8mfpkY98ZNUd
xv5VtyF30n/7b/9tZ4+L9WU5a87QSuftpMUxxxwzdSuddr33ve9t9wuEOfS1
k15++eUT5+vzn/986/fJcmXZvzK00r500ksvvXTs7d/97ndf+PZXe8hDHjL2
vt74xje2el/kpJNCfs7BII75gjg6Kcv2uc99bt0+qpPSB7V30sMPP3zsbN77
3vfu7HExnSxnzV230kU6aXHZZZeNHvCAByzcR5///OePbrjhhva+MFhAXzvp
pNeSPf3pT2/9/uhGlv2r61bal07693//9xPvo/z7tvzX//pfx97P+973vtbu
h7x0UsjPORjEMV8QRydlWco59d577z3TuXLf2b/qVnsnfcYznjF2Nh/3uMd1
9riYXpaz5i5b6aKddMV6n9e73nrTm940+vGPf7z4FwQt6GMnvfLKKyfO2Gc+
85lW749uZdm/umylfemkxb/5N/9m7H1ccMEFrdzHD3/4w4lfy2c/+9lW7ofc
dFLIzzkYxDFfEEcnJdrmzZtn7qM6KX1Qeyf9L//lv4ydzQ0bNnT2uJhNlrPm
rlrpop30u9/97uhP/uRPFmqkK+s3f/M3R8cdd1x7XxzMqY+d9JnPfObY2Xr8
4x/f6n2RQ5b9q6tW2qdO+r//9/8eex9HHnlkK/dRHuukr+WnP/1pK/dDbjop
5OccDOKYL4ijkxJp06ZNo2222WbuM+W+s3/VreZO+qEPfWjibH7yk5/s5HEx
nyxnzV200kU66dvf/vbRr//6r7fSSFevHXfccXT11Ve3+4XCDPrWScvnjk6a
qYsuuqi1+yKXLPtXF620T530pS996dj72GWXXVq5j2OPPXbsffyv//W/WrkP
8tNJIT/nYBDHfEEcnZRI5c/LpGvz8jrTcn6tk9JHNXfSSXP7O7/zO508JhYz
1LPmeTtp+TzRaZrn6173ui099eCDD565l/qZiq70rZPutddeY+dohx12aO1+
yGmo+1efOumZZ5459j7+43/8j63cR+mt4+5jv/32a+U+yE8nhfycg0Ec8wVx
dFKirfXn6JGPfORd/izppPRRrZ30kEMOmXim9qd/+qdLf0y0Y4hnzfN00vL5
u+v9XYF3vetda/7eSy+9dOL7g269Lrnkkha+SphNnzrpl770pYkz9JGPfKSV
+yG3Ie5ffeqkN91008T7ueyyyxa+j0m3X94HhWHQSSE/52AQx3xBHJ2UaKWJ
rvz52X777df8M6ST0kc1dtLyGVKTzqHucY97jG699dalPibaNbSz5lk76aTX
q5T14he/ePTzn/983dv53Oc+N3riE584VSv99re/vcBXCLPrUydd77XdDMfQ
9q8+ddLiEY94xNj7eclLXrLQbX/4wx8ee9t3v/vd/Ww6IDop5OccDOKYL4ij
kxLtzW9+82jbbbcdbdy4ceyvqfXsy/5Vtwyd9O///u+3zMrJJ588uv322+f+
Wsr50j777LNuzynvL0r/DemseZZO+vrXv37in//DDjts5vs//vjj152rpzzl
KTPfLiyiL530a1/72sTZef/723tvX/phSPtX3zpp+Vl00n396Ec/mvu2n/rU
p4693ac97WmtfQ3kp5NCfs7BII75gjg6KdE2b9687q/RSemjDJ30uOOOu8vM
7LvvvqOPf/zjU38NZT7f8pa3TPWatz322GPRp4xEhnLWPG0n/cIXvjDxz/8i
r4Up7wu63nyde+65c98+zKovnfRFL3qR15LSMJT9q2+d9Ic//OHo137t18be
1xve8Ia5bvezn/3sxK/hox/9aGtfA/nppJCfczCIY74gzrI7aXkfuvL6wr33
3nvL+7GW1xlufR/ln5d/v3HjxqkaWw3K17lp06bRQQcdtOXr32abbX71fJTn
qPyz8u/Kr1m2cr5c/putfv/ctpt5redf9q+6Zeikk86Ndtppp9ErXvGK0Vvf
+tYtn9tU+mlZZ5xxxujwww9f9zMYV68HP/jBo9tuu21JzyzLMoSz5mk76bOf
/eyxf/7/23/7b6Nf/OIXCz2OMoeTZuwJT3jCQrcPs+hDJ73mmmsmzsypp57a
0rNBHw1h/+pbJy3222+/ifd31VVXzXybT3rSk8be3u///u+3+vjJTyeF/JyD
QRzzBXGW0UnL+WRpfGs10WlWaaazfLZY+QzMcbc1y+2s9zWNu4/ytU6r9NHy
9a3uouut8jyWbjmv8t9wmv+25bGVryWqma+mk9JHXXfSb33rW3N9T511PehB
Dxp997vfXeIzyzLVftY8TSf9wQ9+MHEGTjrppFYey0Mf+tCJ93PLLbe0cj+w
nj500vIa7knzArXvX33spFdfffXE+yt/h28Wxx577MTbe9e73tXq4yc/nRTy
cw4GccwXxInspOVcsjTANs7pS0fcOOHzLVcrv27c7SzSF1crtzPuPqZtseU2
ZumjW6/Sg8vrc2c1TSctjXRSb571z8J6aj0Ds3/VretOuvV77kasXXbZZfSP
//iPS3xW6ULNZ83TdNL3ve99E+egdNQ2nHbaaRPvx3vvsizZO+nKZ2+PWyec
cEKLzwZ9VvP+1cdOWrzyla+ceJ/Petazprqdd7/73RNv54//+I9bf+zkp5NC
fs7BII75gjiRnbStRrp6TdNKS+Mb1x/LazHbMK4hln8+zeNrsx/P2krX66TT
NNJZ/yysZ9x99J39q25dd9K99tqr9e+xq1f53FKGo9az5mk66Utf+tKxc3D/
+9+/tcdy0003TZy5o446qrX7gkmyd9IDDjhg4qzAarXuX33tpD//+c9H2223
3cT7fchDHjK69NJL1/z9N9xww8R9eWVdfvnlrT928tNJIT/nYBDHfEGcyE5a
Pktz0rVNaXHlMy9Xr2nO7qd5DJM65DyvwVxt0nvurtdxp2mQ5XkorzVdWes9
L/O00knP66677traf4dFHk8N52D2r7p13UmLcsY07cxOu8p7HX77299e0rNI
JjWeNU/TSXfeeeex81BeU92mSbNXPk8YliFzJ73uuusmzskRRxzR8rNBDWrc
v/raSYuPf/zjU/3MWf4uUvm5s1zvlj3w0Y9+9FS/z2vKh0snhfycg0Ec8wVx
oj+fdPXrOstrOcvnXa53G6U1TmqJ5XZKb5ykdMNxv7801EVMes/d9R7XpH5b
bnfc7y//fNL79Jbna737Xm2t2yjP+7jXmuqk87F/1S1DJ11RzpXLmdGk3jNp
lb/Xf/TRR49uvPHG4GeN7Go7a56mk5Zz2nGzUV633aZJc7j//vu3el8wTuZO
WlrJpDm59dZbW342qEVt+1efO2lxyimnzPUz6XqrvN6c4dJJIT/nYBDHfEGc
6E5aumDpmhun/GzRrX/vuMcxze2Na62lNS5i3O2u11/H9dVZXg9aft24VjrL
Z6+O+/1rfW3ln5Xne/U5c2mys3TZeR6PTkp2mTrp1sr3ive+972jww47bLTP
PvuMdt9999GTnvSk0ROf+MTRM57xjC3vZ3bMMceMLrzwwtEtt9zS8jND39V0
1jxNJ73f/e43dh965jOfufBjWG3S2e/rX//6Vu8LxsnaSb/73e+aERZS0/7V
905alL/D12Yj9b4L6KSQn3MwiGO+IE50Jy1n9Yv0tHHvJznN54yWtjfu6yjv
CTyPSe+5O+m5Kb9vrb45z3vmjmul5Z9N+1yv9fjXen/fWdrrInRS+ihzJ4VF
1XLWPE0nffjDHz52H/qjP/qjhe5/a5POf0899dRW7wvGydpJDz744Ikz8v3v
fz/g2aA2texfNXTS4uyzzx7d4x73WKiP/qt/9a/m+nvX1Ecnhfycg0Ec8wVx
ojvpoiZ1yfX6YmmG4157WfrrPMa9JnS9bjvutbHzXu+NexzTds1prkeX+d9a
J6WPdFJqV8NZ8zSddNL7V5T1ve99b+77X+2LX/zixPu58sorW7kfWE/GTnrz
zTdPnA+vI2MWWfavo991xdxfQy2dtCivFX/Ri140VyMtv+/b3/72Uh4n+emk
kJ9zMIhjviBO9k5ajHtN6TRNcNLZ5zyvcx33nruTHsu41ltevzmvcQ24PL5p
rHc9uqzXka73ePrO/lU3nZQhyHLWPG8rnaaTltdxTtoTjzzyyLnue2uvfvWr
x97Hf/7P/7mV+4BpZOykxaQ51EmYVZb9a95W2tZ1xFvf+taxa9muueaa0YYN
G0YPfOADx856ucZ99KMfPTr22GNHN9xww9IfI7nppJCfczCIY74gTh866cYx
75+73ueBFuU1p221wEmvbZ10BjvutZ+LPpfjGvB658HFpHOoaVtrm3RS+kgn
ZSiynDXP00qn6aTf+c531v37Q+XXLKI8hn/+z//52Nvff//9F7p9mEXWTgpt
y7J/zdNKa7+O+MlPfjL60pe+NLrsssu2/O8rrrhidO2113b8qMhOJ4X8at+/
oEvmC+L0oZOW+1zk9ZjjXgM6aw8c1zvXew/f8p68W/+eaT5fdT3j+vHGKd7L
d9JZ8DS/v206KX2kkzIkWc6aZ22l03TSYs8995y4Nz7ucY+b85m7w0477TTx
9r/2ta8tdPswC52UIcmyf83aSl1HQJNOCvnZvyCO+YI4fe6k07bGcT1x2tde
rhjXWyd1xXGvQT3ooIOmvt9xxj0v07zOdtzzUd7nqAs6KX2kkzI0Wc6aZ2ml
03bSL3zhC+u+pnTnnXceXXfddTM9Z+U9Ax/72MdOvN2Xv/zlM90mLEonZWiy
7F+ztFLXEdCkk0J+9i+IY74gTp876bQdbdxnec7SK8e9f+96XXHca1A3bWrn
Z++1bnua19mOez7Xe21sFJ2UPtJJGaIsZ83TttJpO2nxhje8Yd1WWtbRRx+9
7vf2m2++ecvnmq53W494xCOmemzQJp2UIcqyf03bSl1HQJNOCvnZvyCO+YI4
XXfS0jDLbZaeWJplaXxljXvt5rwdbdxneU77mtTy2OZ57ea43zfL61gnmfdr
Gvd8zvqZrW3RSekjnZShynLWPE0rnaWTFk9/+tOn+vlj5fWlhxxyyOjkk0/e
8vPA8ccfv+W1oTvssMPUtzHr61OhDTopQ5Vl/5qmlbqOgCadFPKzf0Ec8wVx
uuik5bWZpR9O20Lb6KTjXg9a1jSv7VzrM0bLKrc7SWm+i36NEc/LIs9FBJ2U
PtJJGbIsZ83rtdJZO2mxyy67hO/T97znPUdXXnnlAv8FYH46KUOWZf9ar5W6
joAmnRTys39BHPMFcZbZSTdu3Di2N0Z30mJcl13vNaHjGmu5vfW0/fVGd9Iu
3ld50uPpO/tX3XRShi7LWfOkVjpPJy1e+cpXhu3Rj370o0ff+ta3FnjmYTE6
KUOXZf+a1EpdR0CTTgr52b8gjvmCOMvopKUzRvXCWZROO+52yvv/jjPuvXOn
eY/aLhqpTpqH/atuOinkOWse10rn7aTFBRdcMPqjP/qjVvfn4447boFnG9qh
k0Ke/WtcK3UdAU06KeRn/4I45gviRHfSSW1y61Vaanmf2vL6ztIgV682Olpp
odtss82at1Me5zjjGu+ktrqii0a6yOeT6qTtsn/VTSeFO2Q5a16rlS7SSVec
ccYZW14DOu++fN/73nd01FFHLfQYoE06Kdwhy/61Vit1HQFNOinkZ/+COOYL
4kR20kl9s6zSLMtrNae5zbY62rjXhpY+u5Zx77m73nv1rve4t+7Aba5JzXe9
x6WTtsv+VTedFO6U5ax561baRiddccMNN4xOO+200b777jt66EMfOvrt3/7t
0a/92q/dZd/6d//u343uc5/7jHbbbbctbXS9zzGHLuikcKcs+9fWrdR1BDTp
pJCf/QvimC+IE9VJy6+b1Eenec/aaR7PrMpZ6bjbWuscdVxX3bRpup+ds/Y/
nXQ57F9100nhrrKcNa9upW120nFuvfXWLf/3Zz/7Wej9QFt0UrirLPvX6lbq
OgKadFLIz/4FccwXxInqpOPeq7Y00nleW9FmRyuvHR33Gs9pvo5p3td2xfbb
bz91k10mnXQ57F9100mhKctZ80orXUYnhb7RSaEpy/610kpdR0CTTgr52b8g
jvmCOBGddOOEzySd9/3n2uxo4x7f1v1z3HvulteYTmtck+2qR67QSZfD/lW3
aTvpAR9+4Og1m540OmzTM0ZvPGv30Zs/+rjRcR+/3+i4i39v3fXNG08d/eM/
fsqyerXe86HzR3u/9l1LX8875N2jp+1/2uhhe95x1nzMn108+sZpn9myfnzh
NZZl/b912f85dar962UfecDotWc9aXT4WbPvX1d+Y0Pn34ssa9bV9v71gtdM
t1b2r4fuccf+dewRF4++99EvbVk/vugay7L+37r48rdP3Ttf+IFHj573nqeP
nvvnzxjt/f7H6aQQ7Pbbfzb62c/+dvT971/yy3XRL/fVT1uW1fIqs/X971/6
y1m76pcz9/Ouxx6qEtFJd91114X74rSPZ17lda3rddxxn686y+tSxr1v76zv
O9w2nXQ5dNK6TeqkLz/7j0cnn/3C0YWX7Tm6+up7W5a15PWxi/YZHXr8SaOj
d3vb6Kt322BZ1qp13mEbxv/dng89ZHTih15s/7KsDtbfXvV7ow+de+DowD99
++iox5/S+fcKy8q2Pvam109snM9820tGO73mxNFDn39a47XaD93rvaNHHfzW
0dNPOkAnhZb84hc/HN1yyztH1173jM73UMsa3tpudN11zxxt3vye0e23/6Tr
bwfQexGdNKLBtd3RpumXa71nbnl96CzGvXa1tOQu6aTLoZPWbVwnPeXsFyX4
ecmyrJX15+98U+fnepaVaY3rpMduesnoC198WOcza1nWHevUtx3R+fcLy8q0
xnXSPd627+gRL33XTO9xveuxr9ZJYQE/+MHbOt8nLcu6c91yy7u6/rYAvdZ2
Jx33XrWLNK/Nmze3fpvlNaFr3V5po5P+femebdzPrK9LbZtOuhw6ad227qSv
+NDDRx+7+Lmd/2xkWVZzXfDx54++eq/DOj/fs6wMa+tOus8HHzE67SP7dz6n
lmU114c/9iedf8+wrCxrrU76+De9ee7PA37064/XSWFGP/+n74+uv965h2Vl
XDfc8KLRL37xo66/TUAvtd1Jy79vu3lN+rzTRYz77NDSL9d6z93yXr2l2c5q
rdelbv3a1WXTSZdDJ63b6k5aGukln3565z8TWZY1fn3ylzP61d9+Q+dnfJbV
9VrdSff54MNH7zn7lZ3Pp2VZ49emD7+88+8blpVhbd1Jd3798XM30pX1mDe8
RSeFKf3TP908+va3n9j5vmhZ1vh17bW7jX7xix93/e0CemeZnXSexliM65mL
drRx/bX0y7U+Y3Xvvfdu9X7KWv15qMukky6HTlq31Z30HK8jtaxerPMvfGHn
Z3yW1fVa3UnPOG/fzufSsqz114c++rLOv3dYVtdrdSd91KtPWriRrqydNxyn
k8IUrr/+eZ3vh5Zlrb9uuGGfrr9dQO+03Uknvc/spk2z/7y51us62+xo5TWi
W9/muC47b9MsfXit+ymrvNZ03n68CJ10OXTSuq10Up9Haln9Wqeffkjn53yW
1eVa6aTHbdqn83m0LGv69d73vLrz7x+W1eVa6aS7HPPa1hrpytrt+IN1Upjg
B7ec2vk+aFnW9Gvz5tO6/rYBvdJ2Jy3GNcHSH2dRuuS422qrox100EETb39l
bbvttgvdz6TXlHbRSnXS5dBJ61Y66cvP/uPOf/axLGv2dcYpB3R+1mdZXa3S
Sfc96yGdz6FlWbOvM048sPPvIZbV1SqddL8Pb996I11ZOimsrXzeYdf7n2VZ
s6/bb7+t628f0BsRnbS8P+243z/tZ3KWrrheI22jo016/es8j3uSSe8fXDrs
vI2yNNZZH59Ouhw6ad1KJz3Za0ktq5frpI88a/SBk72HoTXMVTrpmz/wks7n
0LKs2deRm56rlVqDXaWTPu2EV4Z10mecvL9OCmvwWlLL6ufavPn0rr99QG9E
dNLyOtBJzbF89mfpk2sp7827Vk8c10zbMKlfrtx3G6/3nPT+u6tfW1oa8bjn
Z0X577D156jO0jh10uXQSetWOumFn9ij8597LMuafZ13ybO2vGZAK7WGuEon
PefjPl/Ksvq4PnLR8+74bGGt1BrgKp10h1e8PayTPupVp+iksIZrr9u98/3P
sqzZ1/XXP6frbx/QGxGdtJj0mtLVr6EsjXJljft15bbGfU7pvJ8Zutqk98Rd
uf+2TPNewqvX6udnvZ47y2tKddLl0Enr9uXrP935zzyWZc23vvb1P9hyzqyV
WkNc5xx+6Oiqq3638zm0LGv29ZWvPuBX+5dWag1tnX34hrBGWtb/9+z3jj79
dzoprHb77T/rfO+zLGvOdc19uv4WAr0R1UnLayfLayOn7YHrNcpxLbOtrjep
XbbRYlcrt9fGc7P1Kq8tnZZOuhw6ad0+9aXzu/+Zx7KsudfBmx6vlVqDXO85
6k87nz/LsuZfB5/1OK3UGuQ64TVHh3bSst5z4TldX2ZCKj/96Vc73/csy5p/
3Xbbt7v+NgK9ENVJi0Vb6erXR5b7XevXlPfpbcO412qWfx5h5TNF2+ykpfVO
SyddDp003spz3MU6/zMf6PznHcuy5l8bNj39V+fMWqk1pPWO4/6s8/mzLGv+
tWHTbnfZv7RSayjrjQcdF95Jjz5tU6fXmJaVbX3/+xd3vu9ZljX/+sEP/qrz
7yOW1Yd10003bVlb//Nx3eqcc86Z6favu+660WGHHTb69V//9al733Oe85zR
l7/85bvcTvnfa/3actttPA/3vOc917z90047LfT5L19X+XpneX62Xve73/22
PA9bP2eTVlv/fdta4x5Pl7PRxho3X1Yd67xP66SW1ee1dSfVSq2hrI3HHNH5
/FmWNf/aupNqpdZQ1htffkJ8J323TmpZq9f3v//xzvc9y7LmXzffrJNa1jRr
WR2n9NITTjhh9OQnP7nRJEvnK/+8/PtZWl9bq7TBtRpdeZzLfhyldz784Q/f
srZ+PCv/vHTV8uvKry/Pa9d/hqzxSyeNX136y89+ovOfdyzLmn8dfNZjG+fM
Wqk1hLXxdcd3Pn+WZc2/Dj7rMWvuX1qpVfs6+sUnhXfSjWde0uk1JmTz059+
pfN9z7Ks+ddtt13b9bcR6IUMraFr495zt3wmKizCfNXtii9eP/rbq36v8595
LMuafX31a3+45hmzVmoNYb37USeMvvb1P+h8Di3Lmn19+SsPmrh/aaVWzesd
O8e/nvQjF1/V9WUmpHL77beNrrlmu873P8uyZl/XfOP3u/4WAr0x9I5TWuha
jXTbbbft+qFRgaHPV+2u/NJ3Rh8698DOf+6xLGv2de4le048Z9ZKrZrXu3c4
frTpYy/vfA4ty5p9nX3R89fdv7RSq9Z16o46KXTh+uuf2/n+Z1nW7Ov665/X
9bcP6I0hd5zNmzePttlmG68lJcyQ52sISid92Zve3vnPPZZlzb5O+uge654z
a6VWrat00gPetLHzObQsa/Z1xFl7TbV/aaVWjUsnhW78wz98uPP9z7Ks2dfm
H76/628f0BtD7jjj3m93++237/qhUYkhz9cQlE5arqW7/rnHsqzZ1wEf/YOp
zpm1UqvGVTqp/cuy+rmm3bu2tNKTtFKrrqWTQldu73z/syxr9jUa/VPX3zyg
N4bacfbee+81G2lZF198cdcPj0oMdb6GYqWTvvaYt3b+s49lWdOvE85e/z0L
tVKr5rXSSV/zFvuXZfVpHXPW7PuXVmrVtHRS6M7mzad1vg9aljX92rz5fV1/
24BeGWLHmdRIy7+DtgxxvoZkpZOW9Z5Nr+/8ZyDLstZfZ398uvcr1EqtmtdK
Jy3rzz9o/7KsPqzTz33h3PuXVmrVsnRS6NaNN/p8e8vqw/rOd/br+tsF9M6Q
Ok75PNJJjbR8Vmn5NdCWIc3XEK3upGVtfN9hnf8sZFnW+HXRp546OvCc+c6Y
tVKrprW6k5b19vcd3vl8WpY1fp32sRcvtHdppVYtSyeF7n33u4d0vi9aljV+
XXfdM0a33/6zrr9VQO8MpeOU99Itnzs6rpF6v10iDGW+hmrrTup1pZaVd5XX
kS7aSLVSq5a1dSct65TT/rTzObUsq7ned978ryPVSq3alk4KOdx440Gd74+W
ZTXXd77zJxopzKn2jvPNb35z4mtIV9bGjRu7fqhUqPb5Grq1OmlZhx5/Uuc/
G1mWdefa7fhXtXbGrJVaNay1OmlZrzzibaO/uvIJnc+sZVl3rGPOekHr+5dW
avV56aSQR/nsw673Scuy7lybN5/e9bcF6LWaO84jH/nIdftoWQcddFDXD5VK
1TxfjO+kv+qlx500+thF+3T+s5JlDW195asPGJ17ybNGJ35kz9EBH/2D1s+Y
tVKr72tcJ11Zhxx1yujs83755/tr23c+z5Y1pPXlrzxo9OELnzd686bnhO1d
WqnV56WTQj7/8A/njK6/Ye/R1dfcp/N91LKGtK75xn1H11//3NHmH75/dPvt
/9T1twLovZo7zq677up1pHSq5vli/U66sh625+mjXf7ktNGzXvHno2cfNNv6
0tc/P/rJTz5nWdZW64Iv7Tc66qL7bFlv/Mhjtvzf12/adXTwWTuHni1vvT74
6Q2jWz/zbcvq1Trz1P8z9XnxU15y2mjPOfav8y/9dOffJyyr+/XZxvqLL77k
V/vXmz766NGhZ+022rBpt1/uX49d6v616dOHjW799Lcsq1fr/Rsv10khsdtu
++bo5ps//cv1yTX3QMuyFltltm6++fJfztq3uh53qE7NHefNb37z2D66zTbb
aKSEq3m+mL6TLrL+5uvf6/rLhLTO/MIbl3qmPPZ1pZ9/Q9dPBczkA+d+NXz/
+tAFX+/6y4S0yr7R9d5VVtlHoU9O++iXdVJIzjkYxDFfEKfm+SqfTbpWIy3v
x1v+HUSreb7QSSEDrRRmp5NC97RSmJ1OCvk5B4M45gvi1D5f22677a/66Pbb
bz+6+OKLu35IDEjt8zV0OinkoJXCbHRSyEErhdnopJCfczCIY74gTu3zVd57
96CDDhp97nOf6/qhMEC1z9fQ6aSQh1YK09NJIQ+tFKank0J+zsEgjvmCOOYL
4pivuumkkItWCtPRSSEXrRSmo5NCfs7BII75gjjmC+KYr7rppJCPVgrr00kh
H60U1qeTQn7OwSCO+YI45gvimK+66aSQk1YKk+mkkJNWCpPppJCfczCIY74g
jvmCOOarbjop5KWVwng6KeSllcJ4Oink5xwM4pgviGO+II75qptOCrlppbA2
nRRy00phbTop5OccDOKYL4hjviCO+aqbTgr5veNTr+r8nFkrJRudFPI77YrX
dr53aaVko5NCfs7BII75gjjmC+KYr7rppJDfN7/5Ta0UtqKTQn7lGkIrhbvS
SSE/52AQx3xBHPMFccxX3XRSyK900rK8By/cSSeF/FauI+xfcKf3L2H/0klh
Mc7BII75gjjmC+KYr7rppJDfSictnDXDHXRSyG/1dYT9C+6gk0J+zsEgjvmC
OOYL4pivuumkkN/qTlo4awadFPpg6+sI+xfopNAHzsEgjvmCOOYL4pivuumk
kN/WnbRw1szQ6aSQ31rXEfYvhk4nhfycg0Ec8wVxzBfEMV9100khv7U6aeGs
mSHTSSG/cdcR9i+GTCeF/JyDQRzzBXHMF8QxX3XTSSG/cZ20cNbMUOmkkN+k
6wj7F0Olk0J+zsEgjvmCOOYL4pivuumkkN+kTlo4a2aIdFLIb73rCPsXQ6ST
Qn7OwSCO+YI45gvimK+66aSQ33qdtHDWzNDopJDfNNcR9i+GRieF/JyDQRzz
BXHMF8QxX3XTSSG/aTpp4ayZIdFJIb9pryPsXwyJTgr5OQeDOOYL4pgviGO+
6qaTQn7TdtLCWTNDoZNCfrNcR9i/GAqdFPJzDgZxzBfEMV8Qx3zVTSeF/Gbp
pIWzZoZAJ4X8Zr2OsH8xBDop5OccDOKYL4hjviCO+aqbTgr5zdpJC2fN1E4n
hfzmuY6wf1E7nRTycw4GccwXxDFfEMd81U0nhfzm6aRFnrPmQ9t/Uhg8nRTy
m/c6Is/+pZXSPp0U8nMOBnHMF8QxXxDHfNVNJ4X85u2kRZ6zZq2UdumkkN8i
1xF59i+tlHbppJCfczCIY74gjvmCOOarbjop5LdIJy3ynDVrpbRHJ4X8Fr2O
yLN/aaW0RyeF/JyDQRzzBXHMF8QxX3XTSSG/RTtpkeesWSulHTop5NfGdUSe
/UsrpR06KeTnHAzimC+IY74gjvmqm04K+bXRSYs8Z81aKYvTSSG/tq4j8uxf
WimL00khP+dgEMd8QRzzBXHMV910UsivrU5a5Dlr1kpZjE4K+bV5HZFn/9JK
WYxOCvk5B4M45gvimC+IY77qppNCfm120iLPWbNWyvx0Usiv7euIPPuXVsr8
dFLIzzkYxDFfEMd8QRzzVTedFPJru5MWec6atVLmo5NCfhHXEXn2L62U+eik
kJ9zMIhjviCO+YI45qtuOinkF9FJizxnzVops9NJIb+o64g8+5dWyux0UsjP
ORjEMV8Qx3xBHPNVN50U8ovqpEWes2atlNnopJBf5HVEnv1LK2U2Oink5xwM
4pgviGO+II75qptOCvlFdtIiz1mzVsr0dFLIL/o6Is/+pZUyPZ0U8nMOBnHM
F8QxXxDHfNVNJ4X8ojtpkeesWStlOjop5LeM64g8+5dWynR0UsjPORjEMV8Q
x3xBHPNVN50U8ltGJy3ynDVrpaxPJ4X8lnUdkWf/0kpZn04K+TkHgzjmC+KY
L4hjvuqmk0J+y+qkRZ6zZq2UyXRSyG+Z1xF59i+tlMl0UsjPORjEMV8Qx3xB
HPNVN50U8ltmJy3ynDVrpYynk0J+y76OyLN/aaWMp5NCfs7BII75gjjmC+KY
r7rppJDfsjtpkeesWStlbTop5NfFdUSe/UsrZW06KeTnHAzimC+IY74gjvmq
m04K+XXRSYs8Z81aKU06KeTX1XVEnv1LK6VJJ4X8nINBHPMFccwXxDFfddNJ
Ib+uOmmR56xZK+WudFLIr8vriDz7l1bKXemkkJ9zMIhjviCO+YI45qtuOink
12UnLfKcNWul3Eknhfy6vo7Is39ppdxJJ4X8ut6/oGbmC+KYL4hjvuqmk0J+
XXfSIs9Zs1bKHXRSyC/DdUSe/Usr5Q46KeSXYf+CWpkviGO+II75qptOCvll
6KRFnrNmrRSdFPogy3WE/YtMdFLIL8v+BTUyXxDHfEEc81U3nRTyy9JJC2fN
ZKGTQn6ZriPsX2Shk0J+mfYvqI35gjjmC+KYr7rppJBfpk5aOGsmA50U8st2
HWH/IgOdFPLLtn9BTcwXxDFfEMd81U0nhfyyddLCWTNd00khv4zXEfYvuqaT
Qn4Z9y+ohfmCOOYL4pivuumkkF/GTlo4a6ZLOinkl/U6wv5Fl3RSyC/r/gU1
MF8Qx3xBHPNVN50U8svaSQtnzXRFJ4X8Ml9H2L/oik4K+WXev6DvzBfEMV8Q
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
SSE/+xfEMV8Qx3xBHPNVN50U8tNJ+8tZcxydFPJzHdFf9q84OinkZ/+COOYL
4pgviGO+6qaTQn46ab85a46hk0J+riP6zf4VQyeF/OxfEMd8QRzzBXHMV910
UshPJ+0/Z83t00khP9cR/Wf/ap9OCvnZvyCO+YI45gvimK+66aSQn05aB2fN
7dJJIT/XEXWwf7VLJ4X87F8Qx3xBHPMFccxX3XRSyE8nrYez5vbopJCf64h6
2L/ao5NCfvYviGO+II75gjjmq246KeSnk9bFWXM7dFLIz3VEXexf7dBJIT/7
F8QxXxDHfEEc81U3nRTy00nr46x5cTop5Oc6oj72r8XppJCf/QvimC+IY74g
jvmqm04K+emkdXLWvBidFPJzHVEn+9didFLIz/4FccwXxDFfEMd81U0nhfx0
0no5a56fTgr5uY6ol/1rfjop5Gf/gjjmC+KYL4hjvuqmk0J+OmndnDXPRyeF
/FxH1M3+NR+dFPKzf0Ec8wVxzBfEMV9100khP520fs6aZ6eTQn6uI+pn/5qd
Tgr52b8gjvmCOOYL4pivuumkkJ9OOgzOmmejk0J+riOGwf41G50U8rN/QRzz
BXHMF8QxX3XTSSE/nXQ4nDVPTyeF/FxHDIf9a3o6KeRn/4I45gvimC+IY77q
ppNCfjrpsDhrno5OCvm5jhgW+9d0dFLIz/4FccwXxDFfEMd81U0nhfx00uHJ
c9b8+q6firF0UsjPdcTw5Nm/NnT9VIylk0J+9i+IY74gjvmCOOarbjop5KeT
DlOes+acrVQnhfxcRwxTnv1rQ9dPxZp0UsjP/gVxzBfEMV8Qx3zVTSeF/HTS
4cpz1pyvleqkkJ/riOHKs39t6PqpaNBJIT/7F8QxXxDHfEEc81U3nRTy00mH
Lc9Zc65WqpNCfq4jhi3P/rWh66fiLnRSyM/+BXHMF8QxXxDHfNVNJ4X8dFLy
nDXnaaU6KeTnOoI8+9eGrp+KX9FJIT/7F8QxXxDHfEEc81U3nRTy00kp8pw1
52ilOink5zqCIs/+taHrp2ILnRTys39BHPMFccwXxDFfdRtyJz3vvPPGLshE
J2VFnrPm7lupTgr5uY5gRZ79a0PXT4VOCj1g/4I45gvimC+IY77qNtROuvvu
u4/udre7jV0ve9nLun6I8Cs6KavlOWvutpXqpJCf6whWy7N/bej0edBJIT/7
F8QxXxDHfEEc81W3IXbSU045ZWIj1UnJRidla3nOmrtrpTop5Oc6gq3l2b82
dPYc6KSQn/0L4pgviGO+II75qtvQOulXv/rVdRupTko2OilryXPW3E0r1Ukh
P9cRrCXP/rWhk69fJ4X87F8Qx3xBHPMFccxX3YbWSXfccUedlN7RSRknz1nz
8lvpkDvpDTfcMLr88stHZ5999ujUU08dnXjiiV0/JFiT6wjGybN/bVj6166T
Qn72L4hjviCO+YI45qtuQ+qkhx9++FSNVCclG52USfKcNS+3lQ6lk1566aWj
ww47bPT4xz9+dK973WvsvnX77bd3/VChwXUEk+TZvzYs9evWSSE/+xfEMV8Q
x3xBHPNVt6F00k9+8pNTN1KdlGx0UtaT56x5ea205k56/vnnj/baa6/RNtts
M/W+pZOSkesI1pNn/9qwtK9ZJ4X87F8Qx3xBHPMFccxX3YbSSWdppDop2eik
TCPPWfNyWmmNnfTkk08e3ec+95l5z9JJycp1BNPIs39tWMrXq5NCfvYviGO+
II75gjjmq25D6KT777//mmfK5T0MdVL6QCdlWnnOmuNbaU2d9PTTTx9tt912
c/VRnZTMXEcwrTz714bwr1UnhfzsXxDHfEEc8wVxzFfdau+kZ5999tgz5Un/
TiclE52UWeQ5a45tpTV00v+fvTuBtqwq70WfO/Beb/JuQu4zIyZqDJr7hvfZ
oJZm2CAqFqIkVwQsIiaKgCJiriCCJUoPAQRpbGjkULSCUJQgPUgVoID0JT2I
gAqUCIoCF0QUqPWcxTtwqHXW2t2ae8019++X8Y0kxam9197nfPs7c/5rrXX3
3XcXG2644Uj5qJyUlFlHMIh05teuUV+nnBTSZ35BPPoL4tFfEI/+ylvOOemv
f/3ryv3krbfeurjyyivlpHSCnJRBpbPXHC8r7XpOGv6tzgte8IKhc9H3ve99
xaabblpstdVW0Y4RRmUdwaDSmV+7RnuNclJIn/kF8egviEd/QTz6K28556T/
9m//Vrm/fN999xUXX3yxnJROkJMyjHT2muNkpV3OSQ888MC+89BVVlllxTmn
hx12WHHjjTdGOR6IxTqCYaQzv3aN8vrkpJA+8wvi0V8Qj/6CePRX3nLNSaem
pir3nPfdd98VX7N48WI5KZ0gJ2VY6ew1N5+Vdjkn7ScfXX311YtDDz20eOSR
R6IcA4yDdQTDSmd+7dr4a5OTQvrML4hHf0E8Vf1Vte+wZMmSFo4Susn8yluO
Oeltt91Wu/c87ayzzpKT0glyUkaRzl5zs1lpF3PS/fffv6+MdMGCBY0+L7TF
OoJR5Dq/5KSQPvML4tFfEI+cFOIxv/KWY076nve8p/Lz/5RTTnnm68K94eSk
dIGclFHluNfctZx00aJFPfPRD3/4w8WDDz7Y2HNC26wjGFWO80tOCukzvyAe
/QXxyEkhHvMrb7nlpHvvvXflZ/+mm276nK898cQT5aR0gpyUJuS219ylnPQn
P/lJ8Zd/+Ze1Gek+++zTyHNBSqwjaEJu80tOCukzvyAe/QXxyEkZp4ceemjF
OQHhHodz584t5syZ85yfr1VXXXXFn2+xxRYr7pEYvr7LzK+85ZST/uAHP6jd
g3700Uef8/VyUrpCTkpTctpr7lJOut5669XOp/D7IuTIOoKm5DS/5KSQPvML
4tFfEI+clHEIPzfz5s3r675SK1fITLu6x21+5S2nnLSuB88///zS18tJ6Qo5
KU3KZa+5KznpUUcdVTufvv71r4/8HJAq6wialMv8kpNC+swviEd/QTxyUmIK
Py+rrbbaUPnoyjV//vy2X87AzK+85ZKThlyzqu922223Wf+OnJSukJPStBz2
mruQky5fvrx46UtfatYwsawjaFoO80tOCukzvyAe/QXxyEmJIVwvd9jzR+sq
XKe3S9fiNb/ylkNOetppp1X22zrrrFP59+SkdIWclBi6vtfchZw03KOh7ndC
yJ11BDF0fX7JSSF95hfEo78gHjkpTVu6dOmK+4w2nZHOzEq7wvzKW9dz0gcf
fLC2126//fbKvysnpSvkpMTS5b3mLuSkL3rRiyrnzGzXg4fcWEcQS5fnl5wU
0md+QTz6C+KRk9K0sB9dl72E6/CGe46G8wTCz9N0TU1Nrbi2bj/X6e3KNXjN
r7x1PSf9yEc+Utljxx57bO3flZPSFXJSYurqXnPqOemRRx5ZOWM22mijoR8X
usQ6gpi6Or/kpJA+8wvi0V8Qj5yUGGa75m7IRvv9+Vm0aFHPvDSct5o68ytv
Xc5JFyxYUNlbW265Zc+/LyelK+SkxNbFvebUc9I111yzcsZccskls/6dX//6
18XixYuLww47rNh9991X/NnOO+9cfPWrXy3OOOOM4p577hn6eKAN1hHE1sX5
JSeF9JlfEI/+gnjkpMQQfk6mf2bmzp07VKYZ7kMarrFb9bMYstjUmV9562pO
Gq6nW/dvEJ588smejyEnpSvkpIxD1/aaU85Jb7311sr5ssYaazznax9//PEV
OWj4817XIgn12te+tviP//iP4r777hvq2GCcrCMYh67NLzkppM/8gnj0F8Qj
JyWWkI+Ga+uOImSldeeVpr73bX7lras56brrrlvZUxdffHFfjyEnpSvkpIxL
l/aaU85Jw++OVfPla1/72jNfF/LRfrLRqtppp52GOj4YF+sIxqVL80tOCukz
vyAe/QXxyEmJJWScTZiamqr8eQz/LWXmV966mJN+6Utfquyn8N/6JSelK+Sk
jFNX9ppTzknXXnvtyvnyk5/8ZEU/r7POOiNlpNP1hje8obj22muHOk6IzTqC
cerK/JKTQvrML4hHf0E8clK6oOqc0tSvvWt+5a1rOenll19e+dm+3nrrDfRY
clK6Qk7KuHVhrznVnHT58uXFf/7P/7lyvlx22WXFi170okYyUusbUmcdwbh1
YX7JSSF95hfEo78gHjkpXbDFFlvM+vMYru2bMvMrb13LSev2iO+5556BHktO
SlfISWlD6nvNqeakV1xxReVs+ad/+qfiBS94QeMZ6XQ5r5TUWEfQhtTnl5wU
0md+QTz6C+IZd066dOnSFfcdCrlXyLhmO08w/Hn471NTU41duzV14XUuWrSo
mD9//orXv+qqqz7zfoT3KPxZ+G/ha8Yt7C+H71k4hrYy86maa++mzPzKW5dy
0u23376yhxYuXDjw48lJ6Qo5KW1Jea851Zy07ve9utp5552LxYsXF3fddVdx
9913F8uWLSsuvfTS4sADDyzWWmutvh4jfB2kxDqCtqQ8v+SkkD7zC+LRXxDP
OHLSsD8ZMr6qa6f2qpCZDrLHOWfOnMrHamqvNDxO1XOE19qvkI+G1zczF+1V
4X0MueWwwvewn+9tOLbwWmJl5k0cs5yUNnUlJz3zzDMr+2ebbbYZ6jHlpHSF
nJQ2pbrXnGpOut122w20RliwYEFfj3vRRRcVb3nLW3o+3j777DPwMUMs1hG0
KdX5JSeF9JlfEI/+gnhi5qRhX7LqeqmDVsgRw78x70fdv0UfJV+cKTzOqFls
eIxB8tGVK+TB4fzcQfWTk4aMtC5vlpP2x/zKWxdy0vDzV9fHw5KT0hVyUtqW
4l5zqjnphhtu2NfvwGuvvXbx85//fODH32STTXo+9p133jnw40IM1hG0LcX5
JSeF9JlfEI/+gnhi5qRNZaQzq5+sNGR8VfljOBezCVUZYvjzfo6vyfx40Ky0
V07aT0aaSk7a1PczFvMrb13ISTfddNPKHg7n1zz88MND1VFHHSUnpRPkpKQg
lb3m43+484rjSTUnfdOb3tTz98/3vOc9I30vwn1O6x4/nNMKKbCOIAWpzK/p
rFROCukzvyAe/QXxxMxJw7006/YhQhYX7nk5s/rJBvs5hroccphzMGequ+Zu
rxy3nwwyvA/hXNPp6vW+DJOV1r2v8+bNa+z70JSq83fDe5My8ytvqeekRx99
9Mj/FqPp2mqrrRr8DkBvclJSkcpec8hKU81J/+Ef/qHnHHnggQdG+j7ccccd
tY//whe+cKTHh6ZYR5CKVOZXyErlpJA+8wvi0V8QT+z7k848rzOc+xfud9nr
MULWWJclhscJeWOdkBtW/f2QoY6i7pq7vY6rLr8Nj1v198Of112nN7xfvZ57
pqqMt+76tm3mpFXv2yD3gm2D+ZW31HPSf/mXf2k9F5WT0jY5KSlJZa/5M0fG
nV3D5qR/9Vd/VTtDwr/BbEKv+6BeeOGFjTwPjMI6gpQkM78WxJ9fclIYjfkF
8egviCd2ThryrZBrTvV5b9GV/27VcfTzeFVZa8gaR1H1uL3y16p8dZDzQcPX
VWWlg9x7tervz/bawp+F93vmPnPIZAfJZUcVfoZi7pfFYn7lTU4qJyV9clJS
k8Je84b775pkTlo3P9797nc39j24/vrra59rjz32aOy5YFjWEaQmhfm1wRjm
l5wURmN+QTz6C+KJnZOGXG+UPK3qGrD93JcyZHtN/3v0umvu1r034e/Nlm8O
c83cqqw0/Fm/7/Vsxz/b9X0HyV5jqTs3eJxZ7TDMr7zJSeWkpE9OSora3mvu
Yk56yCGHNPo9qLvG74Ybbtjoc8EwrCNIUdvzS04K6TO/IB79BfHEzklHVZdL
9soXQ4ZWde5lyF+HUXVOaK/cturc2KkhzrOtO45+c81+8oxxf6+rVL13o14/
eRzMr7zJSeWkpE9OSqra3GtONSet+r091OLFixt9/zfaaKPK53rta1/b6HPB
MKwjSFWb80tOCukzvyAe/QXxpJ6TBlXnlPaTCdZdu3eYcxGrrrlbdyxVWW84
f3NYVRlwOL5+9MoyUjiPNBj2/N1UmF95Sz0nDcLnTIx69atfXdmbL33pSyv/
HoybnJSUtbXXnGpO+pKXvGRsv/eFe9xXPdcLX/jCRp8LhmEdQcraml9yUkif
+QXx6C+Ipws56VTF9XP7OZ+w7pqtg2aBdZld3R5s1bmfo76XVRlwP/vBdRlp
v1nrOFRl5F3JW8yvvHUhJ43lxBNPrPwM2Xbbbds+PHiGnJTUtbHXnGpO+rrX
va5ytpx66qmNvu9Vv59PF7TNOoLUtTG/5KSQPvML4tFfEE8XctLwnKNkZVXn
gA6aB1btp/S6hm+4Ju/Kf6ef+6v2UpUfT/VxLd+6faF+/v44VH3fu3IuaWB+
5U1OKiclfXJSumDce82p5qTve9/7KmfLoYce2uh7fuCBB8pJSZp1BF0w7vkl
J4X0mV8Qj/6CeLqck/abNVblif2eezmtKm+tyxWrzkEN1/oaVdX70s95tlXv
R7iWbwpi3Fu2DeZX3uSkclLSJyelK8a515xqTvrZz362craE/9akPffcs/K5
wvV/oW3WEXTFOOeXnBTSZ35BPPoL4ulyTtrvv/Wuy9z6zSurrt/bK1esOgd1
0aJFfT1vL7M9dj/n2Va9n6lkkFXX2w3vd5f2u82vvMlJ5aSkT05Kl4xrrznV
nPSYY46pnC1N33Ph05/+dOVzvfnNb270uWAY1hF0ybjml5wU0md+QTz6C+Jp
OycNGWZ4zJAnhswy7IGEqjp3c5icNKi6l2e/56SGYxvm3M2qv9fUnu2wr6nq
/Rz0nq0x1N0vaiqRawL3y/zKm5xUTkr65KR0zTj2mlPNSW+55Zba3/uXL1/e
2Pv8nve8p/J5PvrRjzb2PDAs6wi6ZhzzS04K6TO/IB79BfG0kZOGczNDfthv
FtpETlp1Pmi/53bOdo/RUOFx64TMd9TXGON9GeW9iCk8f9Wx9XM94dSYX3mT
k8pJSZ+clC6Kvdecak4avOxlL6ucL2eccUZj7/ELXvCCyuf5+te/3tjzwLCs
I+ii2PNLTgrpM78gHv0F8YwzJ52amqrMG2PnpEFVLtsrf6vKWMPj9dL0642d
k7ZxXeVp4X2uuj5yeK/DucddY37lTU4qJyV9clK6KuZec8o56dZbb105Xzbe
eONG3tuLLrqo9vfoG2+8sZHngVFYR9BVMeeXnBTSZ35BPPoL4hlHThryr1h5
4SBCTlv1OHUZXNW1c/u5Rm0bGWkXc9Kwh12VkYY/73XebqrMr7zJSeWkpE9O
SpfF2mtOOSe99NJLa3/Hvemmm0Z+XzfffPPKx1999dVHfnxognUEXRZrfslJ
IX3mF8SjvyCe2DlpXTa5coUsNVynNpzfGTLImdVEThqy0KosbqrmvpdVGW8/
5ze2kZGOcn/SNnLS8D7WXYO5zXNcR2V+5U1OKiclfXJSui7GXnPKOWlQ93vu
RhttNNL7ed1119U+fj//DhLGwTqCrosxv+SkkD7zC+LRXxBPzJy0Lt+cPk8w
nKvZz2M2kZMGVeeGhnx2NlXX3O33Xpl1ezCxqi7z7XVc484ke2Wk/byWlJlf
eZOTyklJn5yUHDS915x6TnryySfXriFGuX/o2muvXfvYDz744NCPDU2yjiAH
Tc8vOSmkz/yCePQXxBMrJw1fV5ePDvpvtZvKScNeadVjzbaPWpWrLlq0aKzH
3bQUctLcM9LA/MqbnFROSvrkpOSiyb3m1HPSoFeeeeyxxw78mOHfOdY95u67
7z7SMUOTrCPIRZPzS04K6TO/IB79BfHEykmrrlU77L0mm8wbw7mjVed49vM6
+rmu7bSqHLDtPdu2c9JeGWm/5+umzvzKm5xUTkr65KTkpKm95i7kpFdffXVt
phlqp5126uux7rrrrmKDDTaofazXve51Ix0vNM06gpw0Nb/kpJA+8wvi0V8Q
T4ycdKrmnqTDZKR1xzOMquNbOf+suuZuOMe0X1WZbNv33GwzJ52UjDQwv/I2
SE663lbfLP71s8cW/7rtscX7PvlNOSmMiZyU3DSx1zxITjrs/Bo1Jw0OOuig
nlnp3/3d3xW77LJLcdlllxWPPfbYM3/3kUceKS688MLi05/+dLHKKqv0fJxL
L7105OOFJllHkJsm5pecFNL11PInimUP/7i47q7vFdfedWFx2y8vV0o1XKG3
Qo/d89Ctxe+eeLTttoesxMhJ582bN3K+2O/xDCuc19orx626v+og+61V1+0d
9LrDTWsrJ52kjDSwv5G3XjnpZ/c+vFh4+vzihpvWKG6//f95Tl13wzuKb31n
h+Ize051MicNwr85ma0gJXJScjTqXnOvnDTMr5PC/LqxPL+uv+HtxYmn7VBs
u1f9/GoiJw0+85nP9Mw4R61vfetbjRwrNMk6ghyNOr/kpJCWp5Y/VVx59xnF
IZdtWWxz+usau8a2Uqq/OvDijxQX3XF82x8FkIUYOWmMDK7pnLSf/HK2PC+c
HzqIqnNXQ5bcpjZy0knLSAP7G3mrykl3+8rBxTXXrlPaW66qK6/552KnAw7p
XE4KXSAnJVej7DVX5aS7HvTH+fXD9/Q9v65e+t5i5wNnn19N5aRBzKx0wYIF
jR0nNMk6glyNMr/kpJCOC+84rvWMSCn1bIWeBIbXdE5ada3aUTLNkK81/Zhh
z3S2xws5Xt1/H/RcqarHCdXmvu24c9JJzEgD+xt5my0nPe7bO/a9v7xyHXNy
ed0vJ4XRyEnJ2bB7zbPlpMd9e6eh59exJ+8cNScN+rkG76B19tlnN3qM0CTr
CHI27PySk0Iajr56+9YzIaVUuY5b+oW2Px6gs5rOScN/bzrTrDonc5THDKru
HRr2U2e75m64Vm/I+wZVlQ+2ee3dceakk5qRBvY38rZyTnrsol2G3mOeLjkp
NEtOSu6G2WteOSc95uTm51fTOWkQ/j3muuuuO3I+uummmzZ+bNA06whyN8z8
kpNC+469ZofWsyClVHWddN0ebX9MQCeNMycdJmMMqvLMUXPSqvw15Jez3WN1
2DyvLuedeT/UcRpXTjrJGWlgfyNvM3PSUc4jXbmOPGk3OSk0RE7KJBh0r3lm
TjrKeaQr11ELn33cGDnptPPOO6/YaKONBspG/+t//a/FZpttVlxxxRXRjgua
ZB3BJBh0fslJoV1HXrVd6xmQUqp3Hb90p7Y/LqBzms5J664zu2jRooGPb7bz
OpvKSYNwjujKj1mVyw6baYascLbnCRUyxGHz41GMIyftlZG2eT7tuNjfyNt0
TrrbV77e2B7zylmpnBRGIydlUgyy1zydk4b7kTY9v6az0pg56bRHHnmkOP30
04uddtppRW66xhprFKuvvvqKWnPNNYuNN9642G233Ypzzz23eOKJJ6IfDzTJ
OoJJMcj8kpNCey6645utZz9Kqf7rsp+d0vbHBnRK0zlpUJUJhvxxECGXrHqs
pnLS+fPn9/Vv0FdbbbWRnqfunNI2stLYOWmvjHRqwPu8dpX9jbyFnPTt/3Z8
8cPr5ja+zzydlcpJYTRyUiZJv3vN0znp0mvXiTK/QlY6jpwUcmYdwSTpd37J
SaEdTy1/ovXMRyk1eAH9i5GThmupjnoOYcjRemWkTeSkdee/Nn3uY931g0MO
O2xGGTLJQY8vZk7az7V2w/M0WW2ck9sP+xt5Cznp9l/6RpQ95um65Ud7tv0y
odPkpEyafvaaQ0663T6HR51fVy79j7bfCug06wgmTT/zS04K7bjiru+0nvco
pQavpcvOafvjAzojRk4azgOtyxzDvT+r9izDtXlnyxOrMtMm1OWX08/dRA5X
d/3dmeeWhoy4155u+D6sfB/VQTLOWDlpr4w0VjV9X9Wm2N/IW8hJv33WZ6Pu
M4e6//7Pt/1SobPkpEyiXnvNISdddOb2Y5hf89t+K6CzrCOYRL3ml5wU2vH1
H2zRet6jlBq8pq7Ypu2PD+iMGDlpUHdO6cxzKENGOV115x9W3ad02HuGzlR3
Tdzp529KP9cSnlkz359eee4g55TGyht7HaOclJxcc83dxa0/Wj36PrOsFIYn
J2VS1e01b7j/bsUtt84Z0/ySlcIwrCOYVHXz6wP77y4nhTF74qnHW896lFLD
1fZnvbntjxDojFg5aVPnFU5nlFVZZlP5WF122UQWO1N4vBjnXIZzS/slJx0P
+xt5u+YHS8eyxywrheHJSZlkVXvNO399tzHPL1kpDMo6gklWNb8+tdc+0XPS
RUd+r+2XD0m556FbW896lFLD168evbvtjxHohFg5aTBqVjrz/MjwvLN9TbhO
bxOq8r3w5zFM31O0yawwZL39kpOOh/2N+Kbf4zbq8vPPG+s+c6hlyz7b6mtW
qmt1++23r6i2j0OptuqEa3YrrZUPPGy8OenT82vb1t8LpbpUv/rVr1ZU28eh
VFt1/NW7lubX5/b4cvSc9Fv7n976a1cqpfrhzy5oPedRSg1ftyy7svXPEaW6
UFXrr6o86owzzhjo8ZctW1bssccexV/8xV/0nXltuummxU033fScxwn//2xf
Gx67iffhpS996ayPf9xxx0V9/8PrCq93kPdn5Xrta1+74n1Y+T2rq6a+vyvX
O9/5zlZy0lGPe9z9pfKoK847d+z7zLJSpQYrOalS5az0q98Yf04qK1VqsLKO
UKqcle6wx37Rc9KFXz6t9detVEp17V0Xtp7zKKWGLzmpUv3VuNZfIS/92te+
Vqy//vqlTDLkfOHPw38fJOtrqkLGNlv2Fo5z3McR8s6QNc6WN07/echVw9eF
rw/va9s/Q6q67G/Erzb96KIrW9lnDuUavNAf192Fp828huFB3/hCi/PLNXih
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
zqgtt9yyOOOMM4rf/OY3s/69p556qjj33HOLD3zgA33NvFNPPXXoY4RByUkh
ffbBIB79BfHoL4hHf+VNTso0WWm6RslJL7/88uL973//wNcilJOSuq7mpKGX
r7rqquLCCy8sLrroouKaa64pli1b1vjzTBJZabpGXUfcfffdz8ylv//7vy++
8pWvFI8//vhAj3HyyScXz3/+82tnXjgPFcZFTgrpsw8G8egviEd/QTz6K29y
UmaSlaZpmJz01ltvLT760Y8Ofc82OSmp60JO+thjjxUnnXRS8YlPfKJ47Wtf
W6yyyiqVPfdnf/Znxdve9rbii1/8YnHFFc5jHZSsNE1NrCPe8573FLvssstI
jxHOLe01937yk5+M9BzQLzkppM8+GMSjvyAe/QXx6K+8yUlZmaw0PYPmpFtv
vfXQ+aiclK5IOScN53F/7GMfG6kHQ2b6ne98p+F3LW+y0vSktI749Kc/Xdtz
xxxzTNuHyISQk0L6UppfkBv9BfHoL4hHf+VNTspsZKVpGTQnHTUjlZPSBSnm
pOEauhtuuGEjPThdm2yySfHb3/420ruYH1lpWlJaR1x33XW1vfb5z/ueMR5y
UkhfSvMLcqO/IB79BfHor7zJSakiK03HoDlpuMZn3V7w5z73ueI3v/mNnJRO
Sy0nDdfLbTIfnVnhmr233XZbxHczL7LSdKS2jqjrs3AOOIyDnBTSl9r8gpzo
L4hHf0E8+itvXc5JQ87z3e9+tzj44IOfuW/V7rvvXkxNTRWXXHJJ8cQTT0R5
3kkiK03DoDnpCSecULkHfMcddzzzdXJSuiyVnPRnP/tZ8c53vjNaRjpd/+N/
/I/i7rvvHsM7mwdZaRpSW0fU9djHP/7xtg+PCSEnhfSlNr8gJ/oL4tFfEI/+
ylsXc9KQg6611lo995Sf97znFRtssIH7u41IVtq+QXPSZcuWPacXQh9cddVV
pa+Tk9JlqeSkp512WvSMdLre9a53jeGdzYestH2prSPq+usLX/hC24fHhJCT
QvpSm1+QE/0F8egviEd/5a1LOemCBQuKv//7vx9qb/ltb3tbcdFFFzVyHJNI
VtquQXPSYPpn/7zzzuv5NXJSuiiVnDToNYP22GOPFdc5ePjhh0t/9+abby4O
PfTQ4u1vf3tf8+yQQw5p+q3Mmqy0XamtI+p665vf/Gbbh8eEkJNC+lKbX5AT
/QXx6C+IR3/lrSs56Qc/+MFGzsXZe++9G3jXJlMqe82TmJUOk5P2Q05Kl6WU
kx5++OGznvt59tlnD/Sajj/++L5mGYNJZX5NYlaa0jri6quvru0r17VmXOSk
kL6U5hfkRn9BPPoL4tFfeUs9Jw33fZszZ06j1y3cbrvtGnwHJ0sqe82TlpXK
SaEspZw0aOq8tGuuuab4q7/6q9r+POCAA4Z+/EmVyvyatKw0pXXE5ptvXtlT
6667btuHxwSRk0L6UppfkBv9BfHoL4hHf+Ut5Zz0V7/6VfGa17ym0Yx0unbZ
ZZeG38nJkcpe8yRlpXJSKEstJw3X1t1www2LBx54YOTXdvrpp9f25xvf+MaR
n2MSpTK/JikrTWUdEf7tQl1PnXvuuW0fIhNETgrpS2V+QY70F8SjvyAe/ZW3
lHPS9773vT3zzvXXX7844ogjigsuuKD43ve+Vxx99NHFJpts0ldWevLJJzf8
bk6OVPaaJyUrlZNCWWo5adPCfKvr0bvuaube35Mmlfk1KVlpCuuII488sraX
Nttss1aPj8kjJ4X0pTC/IFf6C+LRXxCP/spbqjnprrvuWrun9cpXvrK46KKL
Kv9+yJTmzZtX+xgvetGL/GyPIJW95knISuWkUJZ7Tnrqqaf6tz6RpDK/JiEr
bXMdEe7d8LGPfay2j17/+tcXjz/+eCvHx+SSk0L67INBPPoL4tFfEI/+yluK
Oem1115bu6f1j//4j8Uvf/nLvh7rU5/6VO1juVfpaFLZa849K5WTQlnuOenv
fve72h4N1/lleKnMr9yz0nGvI+67777ipJNOKv71X/+153VFXvWqVxV33nnn
2I4NpslJIX32wSAe/QXx6C+IR3/lLcWcNNzfrW5f68c//vFAj/fud7+79vHu
vvvugR6P50plrznnrFROCmW556TB6quvXtmj4d8BMZpU5lfOWWmsdcQ666zz
TIXf897ylrcUL3nJS/q670Ko9dZbr5F7CcMw5KSQPvtgEI/+gnj0F8Sjv/KW
Wk4aspm6fa0FCxYM/Bqvv/762sf84he/OPBj8lyp7DXnmpXKSaFsEnLSdddd
t7JH3VOxGanMr1yz0hjriJCN9puHrlx//dd/XRxyyCGNHg8MSk4K6bMPBvHo
L4hHf0E8+itvqeWkH/nIR2r3t4ZVd/3dF7/4xUM/Ls9KZa85x6xUTgplk5CT
brDBBpU9utVWW7V6bDlJZX7lmJWmkpO+4hWvKL70pS8Vv//97xs9FhiGnBTS
Zx8M4tFfEI/+gnj0V95Sy0nr9rgWLVo09Ou84YYbah/7nHPOGfqxeVYqe825
ZaVyUiibhJx07ty5lT26yy67tHpsuUllfuWWlaaSk07XRhttVJx11lmNHg8M
Sk4K6bMPBvHoL4hHf0E8+itvKeWkhx56aOW+1t/93d+N/Frf9ra3VT7+Jz/5
yZEfn6elstecU1YqJ4WySchJ/+Ef/qGyR48++uhWjy1HqcyvnLLS1HLS6XrH
O95RfP/732/0uKBfclJIn30wiEd/QTz6C+LRX3lLKSetuw/bNttsM/JrDddb
q3r8l7/85SM/Ps9KZa85l6xUTgplueekDzzwQG2PLl26tLVjy1kq8yuXrDTV
nHS6dt1110aPDfohJ4X02QeDePQXxKO/IB79lbdUctI//OEPxSqrrFK5j3Xu
ueeO/FqvvPLK2r2yO++8c+Tn4Fm/TGSvOYesVE4KZbnnpAsXLqzsz7/8y79s
7bgmgay0OeNeR4RZecoppxRbb71131np5ptvPrbjg0BOCumzDwbx6C+IR39B
PPorb6nkpBdccEHtHtZjjz3WyOute44TTzyxkefgWbLSZshJoSz3nPSDH/xg
ZX9uvPHGrR3XpJCVNqPtdUS4t/0b3vCGnlnppz/96daOkckjJ4X0tT2/IGf6
C+LRXxCP/spbKjlp3TVx58yZ09jrffOb31z5PDvssENjz8OzZKWjk5NCWc45
6V133VXbn9/+9rdbOa5JIysdXSrriPA7Xq+s9Nhjj237MJkQclJIXyrzC3Kk
vyAe/QXx6K+8pZKTfuhDH6rct9p0000be73h2mpVz7P++us39jw8l6x0NHJS
KMs5J912220re3O11VZr5Zgmlax0NCmtIw488MCeWSmMg5wU0pfS/ILc6C+I
R39BPPorb6nkpK9//esr96z22Wefxl7vXnvtVfk8r3nNaxp7HspkpcOTk0JZ
rjnpLbfcUtubBxxwwNiPadLJSoeX2jqi7t8ghArXN4HY5KSQvtTmF+REf0E8
+gvi0V95SyUnXXXVVcdy39Djjjuu8nn++3//7409D7OTlQ5HTgplueakG2yw
QWVfvuxlLxv78fA0WelwUltH/OEPfyhe+MIXVvbYq171qrYPkQkgJ4X0pTa/
ICf6C+LRXxCP/spbCjnpQw89VJvXXHzxxY293vPPP7/2uX73u9819lzMTlY6
ODkplOWYk05NTdX25dFHHz3W4+G5ZKWDS3Ed0etepbfddlvbh0jm5KSQvhTn
F+RCf0E8+gvi0V95SyEnDftRdftVP/rRjxp7vddcc03tc917772NPRfVZKWD
kZNCWW456c0331w8//nPr+zJf/7nfx7bsVBNVjqYFNcRF1xwQe38O+mkk9o+
RDInJ4X0pTi/IBf6C+LRXxCP/spbCjnp5ZdfXrtfdf/99zf2en/84x+PLZOl
XipZaRf2muWkUJZbTrrGGmtU9uMqq6yy4r6lpEFW2r8U1xHh98q6+ecepcQm
J4X0pTi/IBf6C+LRXxCP/spbCjlpr2vhPvbYY4293mXLltU+13XXXdfYc9Gb
rLQ/clIoyykn/fjHP17bj4cccshYjoP+yUr7k+I6Yvny5bX99oUvfKHtQyRz
clJIX4rzC3KhvyAe/QXx6K+8pZCTnn766bX7VU3qdQ7B1VfbUxg3WWlvclIo
yyUn3XPPPWt7cdNNN41+DAxHVtpbiuuIxx9/vLbndtxxx7YPkczJSSF9Kc4v
yIX+gniq+qtq7bNkyZIWjhK6yfzKWwo56SmnnDK2nPRXv/qVnDRBstJ6clIo
yyEnnZqaqu3Df/zHfyyefPLJqMfAaGSl9VJcR9x00021fXfQQQe1fYhkTk4K
6UtxfkEu9BfEIyeFeMyvvKWQk37nO99J5nzSa6+9ttHno3+y0mpyUijrek56
zDHH1PZgqFtvvTXa89McWWm1FNcR4TrWdX135plntn2IZE5OCulLcX5BLvQX
xCMnhXjMr7ylkJOee+65tftVTz31VGOv95577ql9rltuuaWx52JwstLZyUmh
rMs5aT8Z6QUXXBDluYlDVjq7FNcR73jHO2p77xe/+EXbh0jm5KSQvhTnF+RC
f0E8clLGKfz87LvvvsW8efOKuXPnFnPmzHnmZ2u11VZb8WdbbLHFiq+Jsa89
buZX3lLISS+55JLa/apHH320sdd722231T7XXXfVHyvxyUrL5KRQ1tWctJ+M
9Lzzzmv8eYlPVlqW2jrinHPOqe29t771rW0fIhNATgrpS21+QU70F8QjJyW2
cP+okIv22tearUJuumjRorZfwtDMr7ylkJPeeOONtT107733NvZ6w/1H657r
4Ycfbuy5GJ6s9LnkpFDWxZy0n4zUNT+7TVb6XCmtI8I96l/xilfU9t/BBx/c
9mEyAeSkkL6U5hfkRn9BPHJSYgnnhIZzRIfJR2fLSx966KG2X9LAzK+8pZCT
huub1fVOyFGbEs7RqXqe5z//+Y09D6OTlT5LTgplXctJjz766J6/K5566qmN
PR/tkZU+a5R1xNZbb11sttlmxY9+9KORjyPM0Le85S21/ffiF7+4WL58+cjP
Bb3ISSF99sEgHv0F8chJaVrIM5vKR2fWqquuWixdurTtlzcQ8ytvKeSkwSqr
rFLZN4sXL27s9dadyxN6nrTISp8mJ4WyLuWk/WSkCxcubOS5SIOs9GmjrCNm
9sdGG2009LnWRx11VF/rtHD9IBgHOSmkzz4YxKO/IB45KTHEyEmns9IunVdq
fuUtlZz05S9/eWXPhP2tpuy5556Vz/P2t7+9seehObJSOSnMpis5aT8Z6Te/
+c0G3hFSIysdfh1x1llnVfbLpptuWixYsGDFvz2d7bEfeOCB4sILLyx22WWX
4pWvfGVf67OtttqqiZcLfZGTQvrsg0E8+gvikZMSw/z582f9+Qn3KQ3X4w0/
RzPzzrBWD/ch3WKLLVZkoXVr8fAYXWF+5S2VnHSdddap7Jcdd9yxsdcb9taq
nidc2400TXpWKieFsi7kpP1kpE3+WyDSM+lZ6bDriE022STKv1edrdZcc80I
rxyqyUkhffbBIB79BfHISYkh7EnPPAc0ZKP9ngcavi7cj7RuTd6Vn0PzK2+p
5KSf+cxnKntlgw02aOz1vulNb6p8nv3226+x56F5k5yVykmhLPWctJ+M9PDD
D2/wHSFVk5yVDrOO+P3vfz+2jDT8O72HH3440quH2clJIX32wSAe/QXxyEmJ
Zc6cOQPloysL55ZW/RyG/9YF5lfeUslJx3Xf0Lq9svPPP7+x5yGOSc1K5aRQ
lnJO2k9GevDBBzf8jpCySc1Kh11HjCMj3XbbbSO8YuhNTgrpsw8G8egviEdO
Siyj3kc0/P2q+5yGc1S7wPzKWyo56a233lq7l9VERhTuZVX3HA8++ODIz0F8
9/9yl9b3mce91ywnhbJUc9ITTjihZz5z0EEHRXhHSN0kZqXDriN+/OMfF5/4
xCei5KPhfvT2A2iTnBTSZx8M4tFfEI+clJSF81GrfhZHzWHHwfzKWyo5afDS
l760sleOOOKIkV/rPvvsU/n4b3zjG0d+fMZn0rJSOSmUpZiTTk1N9cxoXGt3
sk1aVjrqOuL+++8vDjzwwOJtb3vbyPnoBz7wgeLMM89s8NXBcOSkkD77YBCP
/oJ45KSkbOnSpZ3+WTS/8pZSTlp3ner11ltv5Ne65pprVj7+F77whZEfn/Ga
pKxUTgplqeWkhx56aM+c5qSTTor4jtAVk5SVNrmO+PnPf15861vfWnFP+7XX
Xrt42cteVjz/+c8v9dl/+S//ZcV/C/ce3X777YtTTjnFWoakyEkhffbBIB79
BfHISUldl38Wza+8pZSThn/jX7e/fM899wz9Ontd1/eyyy4b+rFpz6RkpXJS
KEspJ/3qV7/aMyM955xzIr8jdMmkZKXjWEc88sgjK847DWXNQhfISSF99sEg
Hv0F8Yw7Jw3nB4ZrqYZzn+bOnTvr/SfDn4f/Hq6/1YVrqzYhvM5FixYV8+fP
X/H6w/03p9+P8B6FPwv/LXzNuIX95fA9C8fQRk5Z9bMYfpZSZ37lLaWcNHjx
i19c2S877bTT0K8znE9Q9bivfvWrh35c2jcJWamcFMpSyUkPOOCAnhlpzKK7
JiErtY6AMjkppM/8gnj0F8Qzjpw07E+GjG+2TLSfCpnpIHucc+bMqXyspvZK
w+NUPUd4rf0K+Wh4fTNz0V4V3seQWw4rfA/7+d6GYwuvJVZm3o+697kLzK+8
pZaT7rjjjrWfHffee+/ArzGch/q85z2v8jH333//gR+TtOSelcbKSQ8++ODK
gtSlkJPW3YNeTko/cs9KrSOgTE4K6TO/IB79BfHEzEnDvmTdPfMGqZAjhvNL
+xG+rupxRskXZ6rb2+l3PzY8xiD56MoV8uBhzqnsJycNGWld3jyunLTqexnO
be0C8ytvqeWky5Ytq+3ZTTbZZODXGP5O3efyo48+OvBjkp6cs9JYOSl0WQo5
6frrry8nZWQ5Z6XWEVAmJ4X0mV8Qj/6CeGLmpE1lpDOrn6w0ZHxV+WM4F7MJ
VRli+PN+jq/J/HjQrLRXTtpPRjqunHTla/0O8nOQAvMrb6nlpEHdNXJDDXL+
Z697xu21116DvmUkLNesVE4KZXJSOWlOcs1KrSOgTE4K6TO/IB79BfHEzEnD
vTTr9iZCFhdysJnVz55GP8dQl0OOel/LumvB9srv+skgw/sQzjWdrl7vyzBZ
ad37Om/evMa+D6OoOme3qax7HMyvvKWYk4aft7/927+t7d2999675+Pst99+
tY/xmte8Zti3jYTlmJXKSaFMTionzU2OWal1BJTJSSF95hfEo78gntj3J515
XmfIt8L9Lns9Rsga67LE8Dghb6wTcsOqvx8y1FHUXXO313HV5bfhcav+fvjz
uuv0hver13PPVJXxVp1rOu6ctO7aySF/7wrzK28p5qTBCSec0LN/3/WudxXf
/va3i9/+9rfP/L3wGbJw4cJirbXW6vn3v//97zf5VpKQ3LJSOSmUyUnlpDnK
LSu1joAyOSmkz/yCePQXxBM7Jw25YMg1h7lOal2m2M/jVWWtIWscRdXj9spf
q/LVQc4HDV9XlZUOcu/Vqr8/22sLfxbe75n7zCFPGSSX7Vd4jrrzWUPO3iXm
V95SzUmD7bbbzr4yQ8spK5WTQlkKOWlw/vnnt1rk55cZZaXWEVAmJ4X0mV8Q
j/6CeGLnpCHXGyVPq8rM+rn2aoxzEuuuuVv33oS/N1u+Ocw1c6uy0vBn/b7X
sx3/bNf3HSR7HVY45vD96HXP1q5lpIH5lbeUc9Jgk002aTwj3XHHHRt8B0lZ
LlmpnBTKUslJIYZcslLrCCiTk0L6zC+IR39BPLFz0lHV5ZK98sWQv1Wdexny
12EMe8/MqgxwmPNs646j31yznzyk6e/1yveiDRXet17HEb6HXbrW7kzmV95S
z0mDrbbaqrGM9Mtf/nJD7xxdkUNWKieFMjkpucshK7WOgDI5KaTP/IJ49BfE
k3pOGlSdU9pPJlh3juIw57lWXXO37liqst6QEw6rKgMOx9ePXnlIjPNIB81k
wuuru2drF5hfeetCThocdthhxX/7b/9t6Hz0DW94Qyuf/aSh61mpnBTK5KRM
gq5npdYRUCYnhfSZXxCP/oJ4upCTVl0/t9f9QINwzmlTWWDdua11e7BV536O
+l5WZcD97AfXZSL9Zq2DGjQjDd/3LmekgfmVt67kpMF999234p6lf/EXf9F3
H77pTW8qFixY0Mjz021dzkrlpFAmJ2VSdDkrtY6AMjkppM/8gnj0F8TThZw0
POco52NWnQM6aB5YlXf2uobvbNeW7ef+qr1U5cf9XMu3LhsZ9lrAozxnXV4a
8uCu7nGbX3nrUk467cknnyxOPfXUYtttty3WWWed4tWvfvWKXnvlK19ZvOMd
7yg233zz4uCDDy5uvvnmRp+X7utqVionhTI5KZOkq1mpdQSUyUkhfeYXxKO/
IJ4u56T9Zo1VeWK/515Oq8pb63LFqnNQ58+f3/fzVql6X/o5z7Yul4xlmJx0
ZsW4FnBs5lfeupiTwii6mJXKSaFMTsqk6WJWah0BZXJSSJ/5BfHoL4inyzlp
qH5U3ctzkLyy6vq9vXLFqnNQFy1a1Nfz9jLsebZV72evc2ObFr434fsb3qeq
+9DOrJBVd+lavOZX3uSkTKKuZaVyUiiTkzKJupaVWkdAmZwU0md+QTz6C+Jp
OyedmZOFzDJkfKGqzt0cJicNqu7l2e85qeHYhjl3s+rvNbVnO+xrSvWczfDz
UJUtdzErNb/yJidlUnUpK5WTQpmclEnVpazUOgLK5KSQPvML4tFfEE8bOWk4
NzPkh/1moU3kpFXng/Z7buds9xgNFR63Tsh8R32NMd6XUd6LcQh72nU/H/3e
m7Zt5lfe5KRMsq5kpXJSKJOTMsm6kpVaR0CZnBTSZ35BPPoL4hlnThru41mV
N8bOSYOq3K3XOaFVGWt4vF6afr2xc9I2rqtcJZwzWpeV1t0XNhXmV97kpEy6
LmSlclIok5My6bqQlVpHQJmcFNJnfkE8+gviGUdOGnLGWHnhIEKuVvU4dddx
rbp2bj/XqG0jI80lJw3q7i3b7zWT22R+5U1OCulnpXJSKJOTQvpZqXUElMlJ
IX3mF8SjvyCe2DlpXTY5W+4Vrqcazu8MGeTMaiInrcvc6s5NrMp4+7lHZhsZ
6Sj3J00tJw3qvv+pXCe4ivmVNzkpPC3lrFROCmVyUnhaylmpdQSUyUkhfeYX
xKO/IJ6YOWldvhUqZJbhXM1+HrOJnDSoOje06n6XVdfc7XWt3l7HvXIO3GT1
cz3aLuWkIY+uOt7w/UyZ+ZU3OSk8K9WsVE4KZXJSeFaqWal1BJTJSSF95hfE
o78gnlg5afi6uny0n2vW9nM8gwp7pVWPNds+alWu2u95jE0dd9O6lJMGIcce
JN9OhfmVNzkpPFeKWamcFMrkpPBcKWal1hFQJieF9JlfEI/+gnhi5aRV16oN
GWk4R3NQTeaNVZnbbNntbK9jkPtizpkzp+9Mdpy6lpM2de3lcTO/8iYnhbLU
slI5KZTJSaEstazUOgLK5KSQPvML4tFfEE+MnLTunqTDZKR1xzOMquNbOf+s
uubuINd6rcpk284j5aTjYX7lrd+c9Kbn7VZc8tJ9iu++at/ivNfsN1BdffoN
xdKb7lOqU7XkkhOL08/79NjrjO/+e3HRpR8ubvvx/7tir/mOuzYrLr7x9BV1
26+uVEr9//Xjk87tf369ZO+h5tcVX/te659FSg1aF1yazvy67q7vrai2Py+U
SqpOPFtOCol64smnijvvebC47JqfFpde/ZNi6c33KaUartBbocd+uuyh4qnl
y9tue8hKjJx03rx5I+eL/R7PsMJ5rb1y3KpsbpDzUqqu2zvodYebJicdDzlp
3upy0uv+dI/imHd9tdh63pHF2/71eKXUGOvt/3Z88YmdjiqOOXmX4uyrXl5s
fdprlVIz6rDjPmJ+KZVgzZxf55hfSpXqG8dtIieFhDz51PLinO/fWXx2nwv+
OMNOaH2OKjVpte3eS4rTlvy4EJnC6GLkpDEyuKYzsn7yy9mumTvo/TCnKs5d
DVlym7qWk1Zl74NcA7kNctK8VeWkR839Wuu/Kymlnq2dD9+z9X09pVKqqpzU
/FIqrTK/lHpuyUkhHSeedUvrc1Ip9XRt8O+nFmd97462Pxag05rOSauuVTtK
pvnQQw81/pjhnNDZHi9ko3X/fWpqqpHnGfS81KZ1LSetut/toLn1uMlJ87Zy
TnrNn+9ZfG7DBa3/fqSUKtfH9jis9b09pVKplXPSH/5xfs03v5RKsswvpZ4t
OSmkYZevXtL6fFRKleuAo69q++MBOqvpnDT896Yzzama+52OoureoSG/nO06
r+FavSGzHdRs56WufO7quHUpJ637mWr7+sW9yEnzNjMnDRnpFhsd3frvREqp
6tpyr4Nb399TKoWamZMu/eP8+oT5pVTSteXeh7T+uaFUCiUnhfbtccgPWp+L
Sqnq+vKRV7b9MQGdNM6cdJiMMajKM0fNSacq8teQvc12ndctttii0ecJNfN+
qOPUpZy07vvf1vvXLzlp3mbmpJ/7gPNwlOpCbbHnoa3v8SnVds3MSZ1HqlQ3
aos9nVeqlJwU2vX5L1/U+jxUSvWuvb5xWdsfF9A5TeekddeZXbRo0cDHN9t5
nU3lpEE4R3S2a7k2mcmFfHi25wkVzjUdNj8eRVdy0rrvf+rX3A3kpHmbzkkX
rO1+bkp1qbb7xi6t7/Mp1WZN56RHuh+pUp2q7b6xc+ufH0q1WXJSaM/Uyde1
PgeVUv3XeZf+pO2PDeiUpnPSoCoTHDTXCrlk1WM1lZPOnz+/9vGnK9wfcxRT
NeeUtpGVxsxJw3m3Id8c9TX1yshTy3RnIyfNW8hJr/2/9mj9dx+l1ODV9j6f
Um1WyEmv+1PzS6kuVtufH0q1WXJSaMevH3ys9fmnlBq8gP7FyElDTlb19/u9
n+TU1FTPjLSJnLTu/NdhjrtO3fVjQw47bO4X8shBjy9m9jj9fQv/O/wsDHoe
bvie1L1XocJ1kbtATpq3kJMe5VwcpTpZ2x0xv/W9PqXaqpCTHjP3q633oVJq
8NpugfmlJrfkpNCORef9qPX5p5QavELvAv2JkZOGXKxXxhWysNmEa/POlpFV
ZaZN6JXJhedu4nzPuuvvzjy3dGpqqvL9mRa+DyvfR3WQjDNWTjpVcd5syIFD
Zhr+e3iOme9neK3Tr6fX96Kt82+HJSfNW8hJ//e8o1r/vUcpNXh9ZMcjWt/r
U6qtCjnpNh84svU+VEoNXpuYX2qCS04K7dhunwtan39KqcFr6/9Y3PbHB3RG
jJw0qDundGZ2FnKx6ar6uunruM7234a9Z+hMUzXXxJ1+/qb0cy3hmTXz/emV
IQ5yTmmsnHRmbhujupSRBnLSvD20+PbWf+dRSg1Xa33EtQvV5NYhx25avD2B
PlRKDV7ml5rkkpPC+D3y6O9bn31KqeHq7R/5VtsfIdAZsXLSkGWFTGvUXGw6
o5yqyDKbukdlXXbZRBY7U3i8Jt6blWuQa9HGyEnD9zxmRhpeX5cy0kBOmrfb
zrqx9d95lFLD1/YnbdD6fp9SbdQ+h3629f5TSg1f2y80v9Rk1jhy0p9/+9K2
l5mQlLt/8X9an3tKqeEr9DDQW6ycNBg1K515fmR43tm+JlyntwlV52qGP49h
+p6iTeaIIevtV4ycNAh/v59r5w5S4bzjpr7P4yYnjS9ct7mtWrzgwtZ/31FK
DV+fP36z1vf7lGqjdv3KF1vvP6XU8DX/hE1b/xxRqo0aR0563bGntbrGVCq1
Ou9717c+95RSw9eSi29o/XNEqS7U7bffvqJW/vOqzOr4448f6PFvuOGGYocd
dij+/M//vO9cbOONNy4uueSS5zxO+P9n+9rw2E28Dy95yUtmffxDDz006vsf
Xld4vYO8PyvXq1/96hXvw8rvWV019f2te11bbrll5fvaT62xxhrFPvvsE/X9
j11V/aXyqMVHXdT67ztKqeFr/vH2mdVk1i5f2bH1/lNKDV9yUjWpdeg3Pxw9
J732eDmpUjPrrCXXtj73lFLD1wWX3Nj654hSXahx5TghLw2Z17rrrlvKzkLO
F/48/PdBsr6mKmSDs+V04TjHfRwh7wz5YKjZcsNQIVcNXxe+Pryv436/Bq3w
PQ1588zXNvNnIPzf038eviZ8bRdeVz8lJ41fbbrjsp+0/vuOUmr42n7h+q3v
9ynVRu14xCdb7z+l1PC1/cL3t/45olQb9eWT1ouek9539Y2trjEhNXfc9WDr
c08pNXwtu++Rtj9GoBNcF7T6mrtTU1NtHxodp7/y9tQTTxZrJfA7j1Jq8Frr
o8e3vtenVJv1rg+134dKqcHrXeaXmuDa5rTXFTf/6W7RMtIb/mb3tpeYkJw/
/OHJ1mefUmq4Wnuzk9r+CIHOmPQcZ2pqqvKemDCqSe+vSbDDZie0/nuPUmrw
+ujOU63v9SnVZv3vjx7Zeh8qpQavTc0vNeF18Sf2ipaTXrnJvm0vLyFJ/77H
+a3PP6XU4LX9vhe2/fEBnTHJOc5DDz1UrLrqqs4lJZpJ7q9J8d2DLmz99x6l
1OC1/ZGfbX2fT6k2a9c99229D5VSg9f2R23b+ueHUm3WcVP/Hi0nvWlqUdvL
S0jSyefc2vr8U0oNXmdedEfbHx/QGZOc41Rdb3fOnDltHxqZmOT+mhjLl7f+
e49SavBqe49PqRSq7T5USg1ebX9uKJVCxcpJgdn99ndPtD7/lFKD1b985vS2
PzqgUyY1x9liiy1mzUhDLVmypO3DIxOT2l+T5jTnlCrVqdru8B1b399TKoXa
fs/9Wu9HpVT/td3hX2z9c0OpFOqIoz/WeEZ63YHHtb2shKSddPYtrc9BpVT/
tfiyn7b9sQGdMok5Tl1GGv4bNGUS+2tS7f2pha3/DqSU6l2f3Pvrre/tKZVS
fWbLI1rvS6VU79pyn4Nb/7xQKqX67k67N3df0k8d0PZyEjph/n4XtT4PlVK9
65ATlrb9cQGdM0k5TrgfaV1GGu5VGr4GmjJJ/UVRHPDxb7X+u5BSqrq22vdr
re/pKZVizf/k4a33p1Kquj5lfik1a313xz1Gzkiv2vqgtpeR0Bn/59HfFx/f
6dzW56JSqrq+dtw1bX9UQCdNSo4TrqUb7jtalZG63i4xTEp/8ayv/PvJrf9O
pJQq1xbOI1Wqtr64paxUqRTr43uZX0rV1eId9hzhPNID214+QueErNR5pUql
WV+RkcLQcs9xfvrTn9aeQzpdU1NTbR8qGcq9v5jd2V+5qJi38bGt/36klHq6
tnE/N6X6qt133b/4lw+aX0qlUtsc/oXWPxeU6kKdeOhnBs5Il3756LaXjdBp
J57lfqVKpVJb/8fi4uobf9H2xwJ0Ws45zty5c3vmo6Hmz5/f9qGSqZz7i3pP
PrW8+M6BFxSf3dy1eJUad73ro8cXm+0yVXzh6M+2vm+nVBdrh932L7b86JGt
97JSk1bml1Kj1bFHbFVc/Mm9iptW3a2Ui974f+9eXPXhfYsbD1tonQ4N+d3j
TxTf/u5txTZ7LSneuYm9D6XGXfsdeWVx6dJlbX8UQBZy/v1w3rx5ziOlVTn3
F/1bvrwofvbDe4rrz725uO7sm4rrv397cd2t9z9Tly396Yqa+WdKqf7rgmuu
Kc65bHFx1jXXFpfe9L3ijgeWPlOX3HT2ipr5Z0qpfuuHxWVnfb9YvODcYvER
5xXfP+Wy5/Se+aXUaLXk6quKs6++dtb5dcPdl6yo9j8HlOpm3XnZD4o7TltS
3PmdJcUvrrjuOesz63SI4+5f/J/iymt/5vdDpSJV6K2rrr+ruP+B37bd7pCd
nH8/3HfffSvz0VVXXVVGSnQ59xfN8XMC8YTr74cCmmd+QTz6C+LRXxCP/oJ4
9BfEk3N/hX3R2TLScD1ee6aMQ879RXP8nEA8clKIx/yCePQXxKO/IB79BfHo
L4gn9/5abbXVnslH58yZUyxZsqTtQ2KC5N5fNMPPCcQjJ4V4zC+IR39BPPoL
4tFfEI/+gnhy769w7d358+cXS5cubftQmEC59xfN8HMC8chJIR7zC+LRXxCP
/oJ49BfEo78gHv0F8egv+uHnBOKRk0I85hfEo78gHv0F8egviEd/QTz6C+LR
X/TDzwnEIyeFeMwviEd/QTz6C+LRX/9fe3ZMAwAAwzCMP+tS6JPPxrCox6Cj
L+joCzr64uFOoONPCh37BR19QUdf0NEXdPQFHX1BR1883Al0/EmhY7+goy/o
6As6+oKOvqCjL+joi4c7gY4/KXTsF3T0BR19QUdf0NEXdPQFHX3xcCfQ8SeF
jv2Cjr6goy/o6As6+oKOvqCjLx7uBDr+pNCxX9DRF3T0BR19QUdf0NEXdPTF
w51Ax58UOvYLOvqCjr6goy/o6As6+oKOvni4E+j4k0LHfkFHX9DRF3T0BR19
QUdf0NEXD3cCHX9S6Ngv6OgLOvqCjr6goy/o6As6+uLhTqDjTwod+wUdfUFH
X9DRF3T0BR19QUdfPNwJdPxJoWO/oKMv6OgLOvqCjr6goy/o6IuHO4GOPyl0
7Bd09AUdfUFHX9DRF3T0BR198XAn0PEnhY79go6+oKMv6OgLOvqCjr6goy8e
7gQ6/qTQsV/Q0Rd09AUdfUFHX9DRF3T0xcOdQMefFDr2Czr6go6+oKMv6OgL
OvqCjr54uBPo+JNCx35BR1/Q0Rd09AUdfUFHX9DRFw93Ah1/UujYL+joCzr6
go6+oKMv6OgLOvri4U6g408KHfsFHX1BR1/Q0Rd09AUdfUFHXzzcCXT8SaFj
v6CjL+joCzr6go6+oKMv6OiLhzuBjj8pdOwXdPQFHX1BR1/Q0Rd09AUdffFw
J9DxJ4WO/YKOvqCjL+joCzr6go6+oKMvHu4EOv6k0LFf0NEXdPQFHX1BR1/Q
0Rd09MXDnUDHnxQ69gs6+oKOvqCjL+joCzr6go6+eLgT6PiTQsd+QUdf0NEX
dPQFHX1BR1/Q0RcPdwIdf1Lo2C/o6As6+oKOvqCjL+joCzr64uFOoONPCh37
BR19QUdf0NEXdPQFHX1BR1+9AU/4w1Y=
    "], {{0, 493.}, {933., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlgdUVMcax+fe7Y22C9JZekc6C0hdqoD0KirL7rLUBZaOXQlGIKKoiIAi
SKgKllAkFsSChSCggD0gQUCJwYIooLy7EmPy3jnvnfed8935zXdnvpk735xz
/8qRiX5RMAAgBY88/FgZDgIBK8tfDOkE8lNieHwux52fyuVxBYxICAlGk5AH
IEWzkpLiYWRUAj9V4OfqSA8JDaPjRgEMxIEYUANyLHZKkoOPj6dw9Nf2n/Z+
CAgTgrv6wlz/+f6/mjiHm8IGAPJBOJGTwk5AuBNhJ3aSIBUAGI2wakZqkpC1
EKYJkA0ivErIvGUWzqVFLjPny5gAPybCmQDgySyWgAcAMQeJ09PZPCQPsRph
Qz4nho/wPYRt2dEsZB6JhrBeQkKikO0R1or8Wx7eP3JG/pWTxeL9xcvf8sUk
mYnxiQK6J9OJzmTFx0QKWKlczv95Nv/TEuLTvq4nrACZyw/0F+4bcXnABIkg
HnEBoANPpOeEtEzAQmIxIBKJskAq4AJOKjczVZiAmZiUJYjhRafSHZAqcunu
fLaBHt3Y0MgCAOGdWF7m4+JyrduLv8V23kBmdwGAUvsW8zMF4LQJADLK32L0
h8i5IreudZKdJkhfjgnLCzCACEQBDcgARaCK7F4fGANzYA3sgTNYDbxBAAgF
6wEbRIMEZN8ZYBPYDnJBPtgLDoJSUAGOgzpwEpwBbeA8uAyug9ugDwyCR2AE
jIOXYAa8BwsQBOEgCkSFZCAlSB3ShYwhBmQLOUOekB8UCkVAPIgPpUGboJ1Q
PlQElUKVUD10GjoHXYZuQv3QA2gUmoLeQPMwCibDNFgB1oBXwgzYAfaAA+B1
MA9OhrPhHHgPXAJXwSfgVvgyfBsehEfgl/AsCqBIKCmUMkofxUAxUd6oMFQU
SoDagspDFaOqUE2oDlQ36i5qBDWN+ojGoqloOlofbY12Qwei2ehk9BZ0AboU
XYduRV9F30WPomfQnzEUjDxGF2OFcceEYHiYDEwuphhTg2nBXMMMYsYx77FY
rBRWE2uBdcOGYmOxG7EF2CPYZmwnth87hp3F4XAyOF2cDc4bx8Kl4nJxh3En
cJdwA7hx3Ac8Ca+EN8a74MPwfPwOfDG+AX8RP4CfwC8QxAjqBCuCN4FDyCIU
EqoJHYQ7hHHCAlGcqEm0IQYQY4nbiSXEJuI14mPiWxKJpEKyJPmSYkjbSCWk
U6QbpFHSR7IEWYfMJIeT08h7yLXkTvID8lsKhaJBsaeEUVIpeyj1lCuUp5QP
IlQRAxF3EY7IVpEykVaRAZFXogRRdVEH0fWi2aLFomdF74hOixHENMSYYiyx
LWJlYufEhsVmxaniRuLe4gniBeIN4jfFJyVwEhoSzhIciRyJ4xJXJMaoKKoq
lUllU3dSq6nXqOM0LE2T5k6LpeXTTtJ6aTOSEpKmkkGSmZJlkhckR6RQUhpS
7lLxUoVSZ6SGpOZXKKxwWMFdsXtF04qBFXPSctL20lzpPOlm6UHpeRm6jLNM
nMw+mTaZJ7JoWR1ZX9kM2aOy12Sn5Why1nJsuTy5M3IP5WF5HXk/+Y3yx+V7
5GcVFBVcFZIUDitcUZhWlFK0V4xVPKB4UXFKiapkqxSjdEDpktILuiTdgR5P
L6Ffpc8oyyu7KacpVyr3Ki+oaKoEquxQaVZ5okpUZahGqR5Q7VKdUVNS81Lb
pNao9lCdoM5Qj1Y/pN6tPqehqRGssUujTWNSU1rTXTNbs1HzsRZFy04rWatK
6542VpuhHad9RLtPB9Yx04nWKdO5owvrmuvG6B7R7dfD6Fnq8fWq9Ib1yfoO
+un6jfqjBlIGngY7DNoMXq1UWxm2ct/K7pWfDc0M4w2rDR8ZSRitNtph1GH0
xljHmG1cZnzPhGLiYrLVpN3ktamuKdf0qOl9M6qZl9kusy6zT+YW5gLzJvMp
CzWLCItyi2EGjeHDKGDcsMRYOlputTxv+dHK3CrV6ozVH9b61nHWDdaTqzRX
cVdVrxqzUbFh2VTajNjSbSNsj9mO2Cnbseyq7J7Zq9pz7GvsJxy0HWIdTji8
cjR0FDi2OM4xrZibmZ1OKCdXpzynXmcJ50DnUuenLiouPJdGlxlXM9eNrp1u
GDcPt31uw+4K7mz3eveZ1RarN6++6kH28Pco9XjmqeMp8Ozwgr1We+33erxG
fQ1/TZs38Hb33u/9xEfTJ9nnZ1+sr49vme9zPyO/TX7d/lT/Df4N/u8DHAMK
Ax4FagWmBXYFiQaFB9UHzQU7BRcFj4SsDNkccjtUNjQmtD0MFxYUVhM2u9Z5
7cG14+Fm4bnhQ+s012Wuu7ledn38+gsbRDewNpyNwEQERzRELLK8WVWs2Uj3
yPLIGTaTfYj9kmPPOcCZ4tpwi7gTUTZRRVGTPBveft5UtF10cfR0DDOmNOZ1
rFtsRexcnHdcbdxSfHB8cwI+ISLhHF+CH8e/mqiYmJnYn6SblJs0kmyVfDB5
RuAhqEmBUtaltKfSkJ9vT5pW2ndpo+m26WXpHzKCMs5mimfyM3uydLJ2Z01k
u2T/uBG9kb2xa5Pypu2bRjc7bK7cAm2J3NK1VXVrztbxba7b6rYTt8dt/2WH
4Y6iHe92Bu/syFHI2ZYz9p3rd425IrmC3OFd1rsqvkd/H/N9726T3Yd3f87j
5N3KN8wvzl8sYBfc+sHoh5IflvZE7ektNC88uhe7l793aJ/dvroi8aLsorH9
XvtbD9AP5B14d3DDwZvFpsUVh4iH0g6NlHiWtB9WO7z38GJpdOlgmWNZc7l8
+e7yuSOcIwNH7Y82VShU5FfMH4s5dr/StbK1SqOq+Dj2ePrx59VB1d0/Mn6s
r5Gtya/5VMuvHanzq7tab1Ff3yDfUNgIN6Y1Tp0IP9F30ulke5N+U2WzVHP+
KXAq7dSL0xGnh854nOk6yzjb9JP6T+Ut1Ja8Vqg1q3WmLbptpD20vf/c6nNd
HdYdLT8b/Fx7Xvl82QXJC4UXiRdzLi5dyr4025nUOX2Zd3msa0PXoyshV+5d
9b3ae83j2o3rLtevdDt0X7phc+P8Taub524xbrXdNr/d2mPW0/KL2S8tvea9
rXcs7rT3WfZ19K/qvzhgN3D5rtPd6/fc790eXDPYPxQ4dH84fHjkPuf+5IP4
B68fpj9ceLTtMeZx3hOxJ8VP5Z9W/ar9a/OI+ciFUafRnmf+zx6Nscde/pby
2+J4znPK8+IJpYn6SePJ81MuU30v1r4Yf5n0cmE693fx38tfab366Q/7P3pm
QmbGXwteL70peCvztvad6buuWZ/Zp+8T3i/M5X2Q+VD3kfGxez54fmIhYxG3
WPJJ+1PHZ4/Pj5cSlpaSWALWFymAQhyOigLgTS0AlFAAqH2IrhJZ1mx/ahzo
b2rnK4PR+G/ccWxZ130xcwBq7RH5uw0Az04AjiKujjAZaYWSMcAewCYmf/mf
lhJlYrxM85lLS4vTAOC4SCsLIKEWhbcgCyP9Ty0A0tBd1opCwyIK+piOkO6s
ktn27zrtX+aSzgg=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> Association["XMP" -> Association[]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{243.59843749999936`, Automatic},
  ImageSizeRaw->{933., 493.},
  PlotRange->{{0, 933.}, {0, 493.}}]], "Input",
 CellChangeTimes->{3.817718657252618*^9, 3.817718691927579*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"c57b9c28-1967-4ed8-a4d9-28ff2f630a12"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
OPYL4tgviJOrky7yvpzT3geyT1/SSfspqZu1Pae0aw+c9vq98zzXte15zkce
eWTr+dXWexfZjbYGnG5fF7MaqeeRxvDvHIijk0Ic5xfEsV8Qx35BHPsFcewX
xMnVSRdpa6kFtX3cPs9R1Un7KamTtr12buqfXaTnnQ7VAqc9v/WKK65oPb/a
ev+i92dbA+7SCabtbNfWSn/+nQNxdFKI4/yCOPYL4tgviGO/II79gjg5OukQ
vWXSeyb2fS6eTtpPSZ207T7v8/ff9hzQvt+fbb0zPed12vmV3k9145/p+h6r
07Q15C7PtZ7WSed9LWBm8+8ciKOTQhznF8SxXxDHfkEc+wVx7BfEydFJh3jt
zrY21acz6aT9jKGT9vn7b+uJXZ97uaatt6aP37Zfbc9Bnec9ezdqu2+6PNe2
7f5Ir+VLHP/OgTg6KcRxfkEc+wVx7BfEsV8Qx35BnByddIiutmfPnoXbpE7a
zxg6aZ/7vO29PPv0yrbX713rim371db50/f1ECZ97C7PtW27T9NzY4nj3zkQ
RyeFOM4viGO/II79gjj2C+LYL4gz1k46RCfTSftZVidN/TJ9zNQSU69MfS9N
2/M2F7nP297Ls+vzUtPtm/Tn15672bZfbX9uqMfy5/2a2u7TIZ4DTjv/zoE4
OinEcX5BHPsFcewXxLFfEMd+QRydVCftKvLvMz0vM7XDri10qE7a9nzQNF2e
2znpPUbTpI+btO1X2/vrRs8si9wXzM+/cyCOTgpxnF8Qx35BHPsFcewXxLFf
EEcn1Um7ivj7TO/h2dYal9FJk7Y2O+v9PNsaa/p4a9r2a+ivObqT5nht5VXi
3zkQRyeFOM4viGO/II79gjj2C+LYL4ijk+qkXQ3595kaY1Qr7Cu12raPlV4D
uE3ba+euf43avvulk64m/86BODopxHF+QRz7BXHsF8SxXxDHfkEcnVQn7Wqo
+2tal9w4qaWm16hNz+1M/XH9DHWfpxa6ZcuWiR8r3dY2bZ13fVstqZMu8v6k
Omks/86BODopxHF+QRz7BXHsF8SxXxDHfkEcnVQn7WqI+2ta30yTemV6nmaX
jznkfd723NDUaCdpe83dja/V23e/NrbgIWda8511u3TSWP6dA3F0Uojj/II4
9gvi2C+IY78gjv2CODqpTtrVovfXtPsp9dH1r1e7yO2ZR3oMve3jTXp8va2r
7tmz5x6/r+9+5aaT5uHfORBHJ4U4zi+IY78gjv2COPYL4tgviKOT6qRdLXp/
tb1ObWqk6fmZQ92eeaXnjk76eJP67aSvZdLr2rbt17Zt2zo32WXSSfPw7xyI
o5NCHOcXxLFfEMd+QRz7BXHsF8TRSXXSrha5v6a9J+k8jXTa7ZlX223c2D/b
XnM3Pcd0o7b9amuyuXukThrjtttub665/uvNZV+5rLn0isuaL15+dfOFy2+8
ay685LoDs/7XjDHd5vNf/nbzNx/f15x17iebsz90QXP+Zz7bXPb3X2i+dtNF
B+bCy886MGv/2xjTfa78zuebT33pjOZjF72z+ZvPndqcf/HHmksu//Zd++f8
Mmb6fHHKpF36m71fbM750IV3nl+fbD7+2YuaL915fl1108UH5rIbLjgwa//b
GNNvrvn2yc013/zr5tpv7Wq+9Q9nNHfc+f+t8TgzDO8nt93eXPt332s+84Wv
N5+689+H085AY8x8k3brc1+8vvnGt77f3HHH7L0EutNJddKuFrm/tm/f3rkt
Lnp7FpGe2zqr5ba9x+qk5yu17Vfb6/b2fe3hoemkw7nt9tubz1zy4eb8Tx7W
XHHlrzXXXPN/3GMuv+L/bt571uHNC1+9u/mNp77bGDPwPOIFJzdPPPYVzfPP
OsgY02se3Ow+a0fz4b1/3HJ+/dfm9LMPb1589Fuy77kxNc4jXnhy86TXOb+M
6TsvPPs/N+dcsrW5/Kr7bTq71ubKqx/UfPX6Q3VSGMjtd9zRnPfprzcv+n8+
3vzmH5yW/Qw1ZpXm4U9/T/PiO3fvrI9fk/tHAVRBJ9VJu1rk/or4Xoi4z7v0
y0mvmZueHzpJ237tbnnuaurJOemkw/jEZ9/bem3eNi8/9qTs/8YyptZ54rGv
zP7YnTFjmHee++z+59frnF/GRMxD//BdzeNfc2T2nwvGjGH2Xnrf3ufXl6/+
vdyXjTBq7//oVdnPSmPM3XPuJ/RSWIROqpN2Ne/91fY6tYvcP/v37w+5z9Nz
Qid9zNRGp/333bt3T/x4bfvV9nHS5HwfPZ10cedf+Ire1+hrc8r7/jL7v6uM
qXUe/fITsj+GZ0zJc87H/nju8+sd739l9h03ptZ59MtOzP7zwZiS50tX/uLc
59dXvnZQ7stHGKW/POEz2c9HY8zmOfpNn8v94wFGSyfVSbua9/6KuH92T3m/
00W1vXdo6peTXnM3vVZv6raTTHs9n0nPS02T87V3ddLFfOyTfz33NfravPnd
r87+7ypjap3Hvuq47I/lGVPinPnR5yx8fr3ltKOy77gxtc5/P/J12X9OGFPi
XPqV/7jw+XXF1b+S+zISRuWv33JR9nPRGNM+h73mE7l/TMAo6aSL375pzw1c
/76WYxfRSdv64ixtLXOITrq7pcGmfjnpfVZ37NjR+rGmddK2z5Pz+0Ynnd/H
Pjn/80g3zttPf1X2f1cZU+s85pVvyP6YnjElzSLPI/W6CMYsb/7bX74++88L
Y0qaRZ5Huul5pVf/cu7LSRgFzyM1ZhyT/t8zAP3opMPcvraPtbvl9VjHaN77
a1pH3rNnT+/bMek5nUN20iQ9R3Tjx21rs9Oa5rROmhrxpM+TJj3XdN6GvAid
dD4XfK7/+5HOmpd5v1JjwuZJx/1F9sf2jClh3nnO4s8j3Tiv8H6lxoTN9te/
NPvPDWNKmI/P8X6kM1vpdU/IfVkJRXvfR76a/Rw0xnSf8z51Xe4fGzAqOukw
t6+td6W2VotF7q+h7p/UJNs+1pCddOfOnVM/x9ps3bp16seZ1kmT3VOeU5qj
leqk/d1+x+2DX6OvTe5/UxlT8+R+fM+Y/PNg55cxI5z8PzuMyTsvOvs/h51f
wGS33XZ79vPPGNNvfv8FZ+X+0QGjopMOc/smvR7r2uyu5Dmli9xf6bVp2/58
1/fjTPfjrEY6VCed9hzYPrd9VidNpr2GcOqw8+5Laqx93+tUJ+3vM5ecG3ad
/sJX787+7ypjap3/ceILsz/OZ0zOOfnsZ8WdX0c7v4yJmqe88QXZf34Yk3M+
/IWtYefXVd94Vu7LSyjSRy68Lvv5Z4zpPx/+5LW5f3zAaOikw9y+3VOeF5gm
ddT0GrPpY69Nalhj6k+L3F/peaCz7p/UJidJ99ukltjWTIcyrV+uff5Zz/fs
0kmnvf7u2qTnlqbvsbb7aM3a99X6bl/Kztbq4596Qdh1+vvP+fPs/6YyptZ5
5M43Z3+cz5ic89ELDg07v/ac6/wyJmoedfhJ2X9+GJNzrrjqP4adX1d+7YG5
Ly+hSC88em/2888Y038Oe80ncv/4gNHQSYe5fV1a1zzPRyzJovfXtOeUrk16
/mTqk2vT9vvSx2p7n9Jp7xfax+4Z7Tvdhlm6dNKky+sJr5/199Gsntvne0wn
7ecnP/lxc/XV9w+7Tv/KlQ/J/m8qY2qdhz7tXdkf5zMm17zgrF9uvnb1A+Ie
Z/7qg7PvuDG1zkP/0PllVncOO+egsLNrbYB7+tGPb8t+9hlj5ptHHXp67h8h
MBo66XC3r63b6aQ/lVpyel5k3/uorU/ubumYQza9ae2yS4/t2kmT9PGGuH82
TnpuaVc6aT/XXn9V+HX6E593avZ/VxlT6zzr3U/I/nifMTnm/z3r8eHn15P+
zPllTNQ867Tfzf5zxJgc8+YLHhh+ft343Q/mvsyEolx9/Xezn3vGmPnn2zf9
U+4fIzAKOumwt6/LcyZXtZMmi7bS9fdX2/dAep3eobQ9VzP9ehd9Ommy9p6i
Q3bS1Hq7GmMnXbuPc8zFl14Yfp3+h4e9I/u/qYypdZ7xtmdkf7zPmBxz/FlP
DT+/nrHT+WVM1Bzy9qdl/zliTI457TP3Cz+/vvaNV2e9xjSmtPnk5703qTFj
ni9c/nfZf44YM4a5+eabD8zGX2/rJeecc07njz3Ex2ib9DHaPn7u23fkkUc2
9773vTs1rMc//vHZvweWfX9985vf7HUfpTnkkEOaK6644h4fJ/3vSb83feyh
vub73Oc+Ez/Hqaee2unPt+3XrElfW/qa+9xHG+eggw46cF9svN9y7ESt8/lL
P+lxZmNGPIe+4ynZH+8zJseceM5Tws+vQw8/JfuOG1PrHHKKTmpWc97z2diz
66ed9K+yX2caU9J86hKd1Jgxj05qTLeZt+OY6bPWAh/+8Idval2pX6VfT//9
05/+dPbbmvM+Ov744w+04o09Mt1H6dfTf+/T+YacthafbmvXjzHEfqXbsfa9
lGbj7Vn79dRV0+9Lvz/dt7n/fpc1OV17/SU6qTEjnj9+73/L/nifMTlm93m/
o5MaM+LZcdrjsv8cMSbHLKOT3njzCVmvMaE01/7d97Kfe8aY+efGm/45948R
GIUSWgOUqO01d3fv3t35Y9ivuv3zP39OJzVmxPO8Mx6S/fE+Y3LMaZ/5Tzqp
MSOd3/zDd2X/GWJMrllGJ93//ffkvsyEotx22+3NQ//gtOznnzGm/zzmj96X
+0cIjIaOA5vt3r17YiPdunVrr49jv+r2gx98Vic1ZqTzqCNOyv5YnzG5Zhnv
76aTGhMzBx/2luw/Q4zJNTop5PGCo/dmP/+MMf3npcd8MvePDxgNHQfuaf/+
/c2WLVsWfi5pYr/qppMaM975/eN3Zn+sz5hco5MaM97Z/vqXZv8ZYkyu0Ukh
jzPPvzr7+WeM6T/nfeq63D8+YDR0HLinttfb3bZtW++PZb/qppMaM8556DPe
1Tz3g/81+2N9xuQandSY8c7zzvyV7D9DjMk1OinkcccdTfOE556R/Qw0xnSf
//HCs3P/6IBR0XHKsGvXrqJmVe3YsWNiI02zd+/e3h/PftVNJzVmnPOE1/5V
9sf5jMk5Oqkx45wnve5l2X9+GJNzdFLI59wLrs1+Dhpjus95n/567h8bMCo6
Thna2lyuWUXTGmn6b/OwX3XTSY0Z3zz65Sdkf4zPmNyjkxozvnnkS9+Y/WeH
MblHJ4W8Xn3SZ7Ofh8aY2bPrrRfn/nEBo6PjlCF3F13lTprej3RaI03vVZp+
zzzsV910UmPGNf/9yGOzP75nTAmjkxozrvmtF721ee4Hfy37zw5jco9OCvm9
ZNcnsp+Lxpj2eemxF+b+MQGjpOOUIXcXXdVOml5LN73v6LT7Yp7X211jv+qm
kxoznvlvrzou+2N7xpQyOqkx45lHv/SNGqkx///opFAGzys1psx5zds+n/vH
A4yWjsMquv7666c+h3Rtdu/evdDnsV9100mNGcf8/hsOz/64njEljU5qzDjG
+5Eac8/RSaEc3q/UmHLmyS8+J/ePBBg9HYdVc/DBB3d6Tu3OnTsX/lz2q246
qTFlzkOf8a7mUUec1DzlpOdnfzzPmBJHJzWmzPnNp7+7OfjP39JsP+4vmued
+ZDsPyuMKW10UijPuZ+45sBr8R58yHuzn6PGrNI88tDTm8Ne84nmIxdel/vH
AFRBx2HVbN++Pfx5pGvsV92W0Ukvv2pf87dX3WSM2TAXHXF2c/4Ddh2Yc37n
mOaMPzi2OePpxzYffdprmoueevTS5vKT399c9w+XGjOq+fq3Xhl+fl16+bnZ
f04Yk3u+9NX/uWk+d9hZd51fZ//eMc0Hnrbu/PqDo5c2l5+yp7n2H/YZM6q5
7psv10mhYH//nX9sLvnSDc3n9l0/8Qw0xiw2abfSjqVdA4al47Bqdu3a1dpH
t2zZMlgjTexX3ZbRSW+99Qu5v0wo1o1/+qHmynv9Zfa58dnn5r4roJfvfe/k
8PPre987NfeXCcVK50bus+vA+XXnOQpjcsstb9FJoXAeB4M49gvi2C9WTXpv
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
J600lk4K5XN+QRz7BXHsF8SxX3XTSaF8Oul4aaVxdFIon+uI8dJK4+ikUD7n
F8SxXxDHfkEc+1U3nRTKp5OOm1YaQyeF8rmOGDetNIZOCuVzfkEc+wVx7BfE
sV9100mhfDrp+Gmlw9NJoXyuI8ZPKx2eTgrlc35BHPsFcewXxLFfddNJoXw6
aR200mHppFA+1xF10EqHpZNC+ZxfEMd+QRz7BXHsV910UiifTlqPYlrpjvG3
Up0Uyuc6oh5a6XB0Uiif8wvi2C+IY78gjv2qm04K5dNJ66KVDkMnhfK5jqiL
VjoMnRTK5/yCOPYL4tgviGO/6qaTQvl00vpopYvTSaF8riPqo5UuTieF8jm/
II79gjj2C+LYr7rppFA+nbROWulidFIon+uIOmmli9FJoXzOL4hjvyCO/YI4
9qtuOimUTyetl1Y6P50Uyuc6ol5a6fx0Uiif8wvi2C+IY78gjv2qm04K5dNJ
66aVzkcnhfK5jqibVjofnRTK5/yCOPYL4tgviGO/6qaTQvl00vpppf3ppFA+
1xH100r700mhfM4viGO/II79gjj2q246KZRPJ10NWmk/OimUz3XEatBK+9FJ
oXzOL4hjvyCO/YI49qtuOimUTyddHVppdzoplM91xOrQSrvTSaF8zi+IY78g
jv2COParbjoplE8nXS1aaTc6KZTPdcRq0Uq70UmhfM4viGO/II79gjj2q246
KZRPJ109WulsOimUz3XE6tFKZ9NJoXzOL4hjvyCO/YI49qtutXTSL33pS80Z
Z5zRvOUtbznwv9/85jc3H/zgB5vLLrss/HNDNJ10NWml0+mkUD7XEatJK51O
J4XyOb8gjv2COPYL4tivuo21k37/+99vTjzxxObRj3508zM/8zPNve51r9b5
uZ/7ueZxj3tcc8oppwx+O2AZdNLVpZW200mhfK4jVpdW2k4nhfI5vyCO/YI4
9gvi2K+6ja2T/vCHP2yOOOKIA+1zWhttm3//7/99c/zxxw92e2AZdNLVppVO
ppNC+VxHrDatdDKdFMrn/II49gvi2C+IY7/qNqZOml5Xd542Omke9ahH6U6M
hk6KVrqZTgrlcx2BVrqZTgrlc35BHPsFcewXxLFfdRtLJ33Vq141WCNdPxdd
dNEA9yLE0klJtNJ70kmhfK4jSIpppc85N/ddcYBOCuVzfkEc+wVx7BfEsV91
G0MnfcELXhDSSNfm0ksvHejehBg6KWu00rvppFA+1xGs0UrvppNC+ZxfEMd+
QRz7BXHsV91K76Qve9nLZnbO//Af/sOBlvre9763Of/885tPf/rTzfve977m
sMMOa+5///vP/PMPfOAD77wffjDgvQrD0klZTyv9KZ0Uyuc6gvW00p/SSaF8
zi+IY78gjv2COParbiV30tNOO21m4zz22GNnfpyTTz555sf5oz/6o7luIyyD
TspGWmndnfSEE05oduzYMXFyu+666w78/0u8bZTHdQQbaaU6KYyB8wvi2C+I
Y78gjv2qW6md9Kabbmr+3b/7d61d8xd+4Reaiy++uPPHu+yyy2a20o9+9KO9
bycsg07KJKveSmvspKeeeurMsyqX7373uwdep2HabXve856X7fZRJtcRTLLq
rVQnhfI5vyCO/YI49gvi2K+6ldpJ//RP/7T1cdh/82/+TfOFL/T/mJdccknz
r/7Vv2r9uA9/+MN7f0xYBp2UNqvcSmvqpOecc07n99Retttuu6159atf3em2
6aRs5DqCNqvcSnVSKJ/zC+LYL4hjvyCO/apbiZ302muvnfo47Jve9Ka5v97X
v/71Uz/23r175/7YEEUnZZpVbaU1dNILL7yweexjH9u5kS67k6bX/+1z23RS
NnIdwTSr2kp1Uiif8wvi2C+IY78gjv2qW4md9Igjjgh9jPhBD3pQ68d+2tOe
tvDHh6HppMyyiq10zJ30b//2b5unPOUpvRrkMjtpl9f/1UnpwnUEs6xiK9VJ
oXzOL4hjvyCO/YI49qtuJXbSrVu3tj4G+7a3vW3hr/kNb3hD68f/2Z/92eZH
P/rRwp8DhqST0sWqtdIxdtIbbrihec5znjNXg1xGJz377LMXum06KRu5jqCL
VWulOimUz/kFcewXxLFfEMd+1a20TpreQ3TaY7A/+MEPFv6ar7jiiqmfIz1O
DCXRSelqlVrpGDvpIg1yGZ100dumk7KR6wi6WqVWqpNC+ZxfEMd+QRz7BXHs
V91K66THHXdc6+Ovv/VbvzXY1/3rv/7rrZ/nxS9+8WCfB4agk9LHqrTSsXXS
/fv3d2qNf/Inf5Klk047f9fP9u3bdVI6cx1BH6vSSnVSKJ/zC+LYL4hjvyCO
/apbaZ30kEMOWUq/fNGLXtT6eX7jN35jsM8DQ9BJ6WsVWunYOmkyrT/u2LGj
+frXv9584xvfyNJJ9+3bN/XzvvGNbzzw+171qlfppHTmOoK+VqGV6qRQPucX
xLFfEMd+QRz7VbfSOulDH/rQ1sdfjz/++MG+7lNOOaX182zZsmWwzwND0EmZ
R+2tdIyddOfOnZvOnCc96UnNF7/4xbt+T65Omkz6fEcddVRz22233fV7dFL6
cB3BPGpvpToplM/5BXHsF8SxXxDHftWttE56//vfv/Xx13e9612Dfd2f/vSn
pz4OfeONNw72uWBROinzqrmVjrGTfvjDH77rnHnEIx7RfOxjH9v0e3J20tRs
1z5Pet2Fm266adPv0Unpw3UE86q5leqkUD7nF8SxXxCnbb/aruH37t2b4VbC
ODm/6lZaJ5322PBpp5022Nd93XXXTf1cX/hC99sM0XRSFlFrKx1jJ/2nf/qn
A2fM6aef3vp7cnbS9LoNz3jGM5qrrrqq9ffopPThOoJF1NpKdVIon/ML4tgv
iKOTQhznV91K66T3u9/9Wn92n3jiiYN93bfccsvUx6HPO++8wT4XLEonZVE1
ttIxdtIucnbSLnRS+nAdwaJqbKU6KZTP+QVx7BfE0UkhjvOrbqV10v/yX/5L
68/ul7zkJYN93bfeeuvUx6Hf//73D/a5YFE6KUOorZXqpHnopPThOoIh1NZK
dVIon/ML4tgviKOTkkv6Xtq1a1dz8MEHN9u2bbvreyz939Ovpf+2b9++3Ddz
Ic6vupXWSZ/61Ke2/ux+2MMeNtjX/cMf/nDq49BDvhcqLEonZSg1tVKdNA+d
lD5cRzCUmlqpTgrlc35BHPsFcXRSlm337t3N1q1bpz6OtX5SM92zZ0/umz0X
51fdSuukr3nNa6bu0ne+851Bvu7LLrts6uf5wAc+MMjngSHopAypllaqk+ah
k9KH6wiGVEsr1UmhfM4viGO/II5OyrKk54auf95o39m+fXuzf//+3F9GL86v
upXWSS+66KKpO3T00UcP8nU/+9nPnvp5LrjggkE+DwxBJ2VoNbRSnTQPnZQ+
XEcwtBpaqU4K5XN+QRz7BXF0UpYhPR90y5YtczfStUmddUyt1PlVt9I6afKL
v/iLU3fom9/85kJf83vf+96Ze/rlL395oc8BQ9JJiTD2VqqT5qGT0ofrCCKM
vZXqpFA+5xfEsV8QRyclWnoe6ayukl6Hd+P7lNbQSp1fdSuxk057DDbN7/zO
78z99Z577rmd/t8zfOtb35r7c8DQdFKijLmV6qR56KT04TqCKGNupToplM/5
BXHsF8TRSYmUHpue9jzSHTt2bHr8OjXQ9B6m0/5ceg3eMXB+1a3ETprM6phP
fvKTmx//+Me9PuYxxxzT+Xnft956a+/bDFF0UiKNtZXqpHnopPThOoJIY22l
OimUz/kFcewXxNFJidT2/NDUQGd9L6VeOu35pem1fEvn/KpbqZ10165dM1vm
L/3SLzWnnXbazI91+umnd+6jpTwODevppEQbYyvVSfPQSenDdQTRxthKdVIo
n/ML4tgviKOTEmVaq0mvxdvFtFaaXqu39NffdX7VrdROmjzmMY/p1DR//ud/
/sDzS//qr/6qOfTQQ5vjjjuu2blzZ/O4xz2uufe97927kZbwODSsp5OyDGNr
pTppHjopfbiOYBnG1kp1Uiif8wvi2C+Io5MSIfXLttfNTf20j2nvb5pen7dk
zq+6ldxJb7zxxuYBD3jAXJ1z1jz96U9v/W+PfvSjB76XYTE6Kcsyplaqk+ah
k9KH6wiWZUytVCeF8jm/II79gjg6KRHankuangM6j/Q+pkN+vGVxftWt5E6a
XHvttc2DH/zgQRvp4Ycf3px88smt//2www4b8B6GxemkLNNYWqlOmodOSh+u
I1imsbRSnRTK5/yCOPYL4uikREj9csjnf6bHuNu+J7u+hm8Ozq+6ld5Jf3ob
fzD1+Z9dJz0//O1vf/uBj5len7ft943hfYNZLTopyzaGVqqT5qGT0ofrCJZt
DK1UJ4XyOb8gjv2CODopQ0udpK2zLGL79u0TP256rmmpnF91G0MnXZP28iEP
echcjfTP/uzPmu985zt3faxf+IVfaP296fV+oSQ6KTmU3kp10jx0UvpwHUEO
pbdSnRTK5/yCOPYL4iy7k6bn/qXXZE1t6+CDD574vMP06+m/p+cepve5XAXp
60wdY+fOnQe+/vXv7Znuo/Rr6b/leK5Wenw5/Z2l29Dle6HtNXIX7Znp+2HS
xy35tXedX3UbUyddc/755zfPfe5zmwc96EGtP+f/7b/9t81v//ZvNyeccEJz
88033+PPX3jhha1/7ld/9VcHva0wBJ2UXEpupTppHjopfbiOIJeSW6lOCuVz
fkEc+wVxltFJ0+OTqfG1vRbrrEl9rc9jnNu2bWv9WEM9VjrtdWDT19pV6qPp
61vfRWdNuh9Tt5xX+jvs8nebblv6Wvp+L7T9PS/aeKfd56U+Bu78qtsYO+l6
t956a3PVVVc1F1100YH/femll858PuhznvOc1j086qijwm4rzEsnJadSW6lO
modOSh+uI8ip1Faqk0L5nF8Qx35BnMhOmh6XbHtuYd9JHbHre1u2Pe8wzSJ9
cb30cRZtdulj9OmjGyf14Hnem7NLJ02NdFpvbvtemNYyh3hucFSDjeL8qtvY
O2lf3/3ud6f+TEjNFUqjk5Jbia1UJ81DJ6UP1xHkVmIr1UmhfM4viGO/IE5k
Jx2qka6fLq009bi2/jjUa7S2NcT0611u35D9uG8rndVJuzTStu+Ftkbd5X7p
ou09Sofq30NzftVt1Trpy1/+8tafB4997GNz3zyYSCelBKW1Up00D52UPlxH
UILSWqlOCuVzfkEc+wVxIjtpeo7ftMcqUjtL73m5frq0wS63YVqHnOc5mOtN
e87krI7bpUGm+yF1v7WZdb/M00qn3a9tLbLL30Pb6/Qu+t6ka9qex5vuoxI5
v+q2Sp30mmuumfrz4Mwzz8x9E2EinZRSlNRKddI8dFL6cB1BKUpqpToplM/5
BXHsF8SJfn/S9c/rTM/lTB1t1sdIrXFaS0wfZ9ZruKZu2PbnF212015zd9bt
mtZv08dt+/Pp16e9Tm+6v/q8rm1b4217rmnX74W2pjvU8z2jn686NOdX3Vap
kz7xiU9s/Vnwa7/2a7lvHrTSSSlJKa30787brZNmoJPSh+sISlJKK73hb96k
k0LhnF8Qx35BnOhOmrpg6ppd31t0459tux1dPl5ba02tcRFtH3dWf23rq32e
D5p+X1sr7dMi2/78pK8t/Vq6v9c/zpya7KQuG/3+odM6bomcX3VblU56zDHH
TH3c+YMf/GDumwitdFJKU0Irveq1R+ukGeik9OE6gtKU0EqvOi7+/NJJYTHO
L4hjvyBOdCdNXa/P8xw3ansN2C7vM9r23MNFut2019yddt+kPzepb87zmrlt
rTT9Wtf7etLtn/Rc0L7PAx3q+6aNTkpJVqGTvv/975/6mPPv/u7vZr19MItO
Solyt1KdNA+dlD5cR1Ci3K1UJ4XyOb8gjv2CONGddFHTuuSsvpiaYdtzL1N/
nUfbc0Jnddu258bO8zzbabeja9ec9hjSIn/X8/5dDfE5Snwc3PlVt9o76Qc+
8IGZPyeuuOKKbLcPutBJKVXOVqqT5qGT0ofrCEqVs5XqpFA+5xfEsV8Qp/RO
mrQ9p7RLE5z22r3zPM+17TV3p92Wttabnr85r7YG3PV9Ome1j3neT3Tae8IO
qaTvzVmcX3WruZOeeOKJM39OvOENb8hy26APnZSS5WqlOmkeOil9uI6gZLla
qU4K5XN+QRz7BXHG0EnbXj931vuBJtPaXd8WOO25rdMeg2177uei92VbA+7y
ePC0x5C6ttaNlvWauCV9b87i/KpbjZ30lltuaZ75zGfObKSHHnroUm8XzEsn
pXQ5WqlOmodOSh+uIyhdjlaqk0L5nF8Qx35BnDF00rb+1vX5mG3PAe3bA9t6
56zX8E2vybvxz3R5f9VZ2vpxl9fynfYY0ryvBayTbub8qlttnfS4446b2UfT
POYxj1nabYJF6aSMwbJbqU6ah05KH64jGINlt1KdFMrn/II49gvijLmTdm2N
bT2x63Mv17T11mldse05qDt37uz8edu03S9dnmfbdn+k1/Id+vbopM6vWtXQ
SS+++OLmsMMO69RH0zzykY+88zbdGnqbYEg6KWOxzFaqk+ahk9KH6wjGYpmt
VCeF8jm/II79gjhj7qRdH+9oey/PPr2y7fV7Z3XFtueg7tmzp9PnnWXSx+7y
PNu2+3PWc2On0Uk3c37VbQyd9Mtf/vKdH+eaAz/DPvrRjzZvf/vbm1e84hXN
E57whM5tdG2e9rSnDXTPwfLopIzJslqpTpqHTkofriMYk2W1Up0Uyuf8gjj2
C+Lk7qSpYaaPmXpiapap8aVpe+7mvI93tL2XZ9fnpKbbNunPz3ruZtufG+ox
23m/prb7s+97tq6nk27m/Kpb6Z30Wc96Vu8W2jZ/8Rd/MeA9B8ujkzI2y2il
OmkeOil9uI5gbJbRSnVSKJ/zC+LYL4iTo5Om5zWlfti1hQ7xeEfb80HTdHlu
56T3GE2TPu40qfkO1SmGvF8WuS/aTLuPh9T2OUp8HNz5VbdV6KQHHXTQgeeh
wljppIxRdCvVSfPQSenDdQRjFN1KdVIon/ML4tgviLPMTprex7OtN0Z30qSt
y856Tmhb/0sfb5ahv97oTrpoB2/7uOl5w0Noe7/XEh77msT5VbfaO+mxxx47
4L0FeeikjFVkK9VJ89BJ6cN1BGMV2Up1Uiif8wvi2C+Is4xOmjpjVC/sI3Xa
eTpe22vndnmN2hyNtMROOtRr4i7rtX2H4vyqW42d9Jd/+ZebE088ccB7CfLS
SRmzqFaqk+ahk9KH6wjGLKqV6qRQPucXxLFfECe6k05rkxsntdT0OrXp+Z2p
Qa6fIR7vSC10y5YtEz9Oup1t2hpvl+dI5miki7w/6aI9s+2+iu6kXd9ndtmc
X3WrpZP+yq/8SnPEEUc0F1100YD3DpRBJ2XsIlqpTpqHTkofriMYu4hWqpNC
+ZxfEMd+QZzITjqtb6ZJzTI9V7PLxxzq8Y6254amPjtJ22vuznqt3lm3e2MH
HnKmNd9Zt2vRntn2fqxdnnvbRdv3VNvfX27Or7qNqZM+6EEPah72sIc1T37y
k5vDDz+8efOb39xccMEFzfe+970B7xEoj05KDYZupTppHjopfbiOoAZDt1Kd
FMrn/II49gviRHXSaa+Pmvpo32421OMd097fctLjqG1ddc+ePUu93UOL6qRt
91f69SFEf/yhOb/qVnonBXRS6jFkK9VJ89BJ6cN1BLUYspXqpFA+5xfEsV8Q
J6qTtr3+amqk6TmafQ35eEef5zxO+jr6vMbrtm3bOjfZZYrqpG2vszzU8z2j
n686NOdX3XRSKJ9OSk2GaqU6aR46KX24jqAmQ7VSnRTK5/yCOPYL4kR00mnv
STpPI512e+bRdvs29s+219zt89zFtq431Pt1ziuqk7bdZ0M9NtX2/rK57882
zq+66aRQPp2U2gzRSnXSPHRS+nAdQW2GaKU6KZTrjp/c3vzL5f+zufkjVzY3
f+grzQ8+8XVjzMCTduvmj17Z/MuVNzXN7XfkXnuoSkQn3b59+8J9sevtmVdb
b1vfcdveC7PP461trxOb+/mPUZ00iWqZbQ02fb5SeXyjbjoplE8npUaLtlKd
NA+dlD5cR1CjRVupTgrl2X/KZc0Njzq1ufJfv2qw19g2xnSYO3fuGw8/pfnu
8Rc3d9z6k9w/CmD0IjppRIMb+vGOLv1y0mvm9n392LbnrqaWnFNkJ43o5Elb
t859X07j8Y266aRQPp2UWi3SSnXSPHRS+nAdQa0WaaU6KZTjH8/8av5OZIy5
a777+oty/1iAURu6k0a87ur+/fsH/5jpMdNJHy+10Wn/PXXPIT5PmpyP20Z2
0q6va9xX23u99v07WSaPb9RNJ4Xy6aTUbN5WWmsnTdJ1Q9uUoOTbRllcR1Cz
eVupTgpl+PYfnZ29CRljNs/f/+57mtu//y+5f0TAKA3dSdN/H7ppTnu/00W0
vXdoejx10nMX0+u7zvM4Rlvfy/nau5GddFrXnvfjT+vvJT+25PGNuumkUD6d
lNrN00pr7qRQC9cR1G6eVqqTQn7fesaZ2VuQMaZ9rv+1t2qlMIdldtJ5e1Zb
z1y0k7b119QvJ7127I4dOwb9PGnWvx/qMkV20iTdV5M+ft/XLZ718eb9O1kW
j2/UTSeF8umkrIK+rVQnhfK5jmAV9G2lOink9c3/sSd7AzLGzJ6//7335v5x
AaMzdCed9jqze/bs6X372t6TcohOmqTniE5qeUM2zdSHJ32eNOm5pjmeDxnd
SYf8PpjW3nN15q48vlE3nRTKp5OyKvq0Up0Uyuc6glXRp5XqpJDPd4+7KHv7
McZ0n+++4eLcPzZgVIbupElbE+z7XMLUwNo+1lCddOfOnVM//tos+t6a055T
mqOVRnfSpO05oOnvtGvfnNaY03N+S+fxjbrppFA+nZRV0rWV6qRQPtcRrJKu
rVQnhTzu+Mnt2ZuPMab/3PGj23L/+IDRiOikbX0sTdf35ExdcVYjHaKTTnve
4zy3e5pprx+cOuy8jTK1xL63bxmdNN23bX+HXVpp+vNt7+2a/vwYHvf2+Ebd
ltFJT37f3+T+MmHUdFJWTZdWuoxO+pb3nJH7roBRcx3BqunSSnVSyGP/Oy7L
3nuMMf3nlpMuyf3jA0YjopOm/jWtOabnAbY9Zplek3VST2zrbUOY1i/XPvcQ
z/ec9tzI9c8tTY141mO66e9h4/uo9mmcy+ikybTn0ab7In0NG+/bte477b5K
H3cMPL5Rt2V00mfsfEfz2pM/n/tLhdHSSVlFs1rpMjrpoYef0rzmrV7rCebl
OoJVNKuV6qSQxw2PfGf23mOM6T83PMpr/EBXEZ00mfac0vXPoUyNcm3afl/6
WG3vUzrE+1NOa3lrn38oXV5LeP2sv39m9dw+zyldVidNunwvpD6cvr62549G
/X1E8/hG3f75ny9cSif9jae+WyuFOemkrKpprfSrxy6nk6bzSyuF+biOYFVN
baUnHKWTwpLd8S8/yd56jDHzzVd/7qjcP0JgNKI6aXpOYJfm1bWJtbXMobre
tHY5RItdL328Ie6bjdPn/TqX2UmTLq20y6T3kx0Tj2/Ubd9V5y6tk2qlMB+d
lFXW1ko/9rZXLq2TaqUwH9cRrLK2Vnrx6S8OP7+uuvq1ub98KMqtl347e+sx
xsw/P77ultw/RmAUojppsmgrXf/8yPR5J/2e9Dq9Q2h7rmb69Qhrry07ZCdN
rberZXfSZJGvN31tQ/1dL5PHN+Kt3cc55rzPvWepnTTNX7/p01m/ZmPGNtdc
c82ByX07jMk1f/esMzZdK3/g7S9faidNc/RJzi9j+szNN998YHLfDmNyzQ2H
fnDT+XXhGc8JP78u3rcz+9duTElz09mXZ+88xpj55x8+eXX2nyPGjGHarr/a
etU555zT6+N/85vfbI488sjm3ve+d+cmdsghhzRXXHHFPT5O+t+Tfm/62EPc
D/e5z30mfvxTTz019P5PX1f6evvcPxvnoIMOOnA/bLzPps1Qf7/zfr1dv7Z0
v7zwhS888H2Ue1fmGY9v1D0f+Wx8J336n9+zk2qlxvQbndSYza30/W97xdL/
3/lopcb0G9cRxmxupZ/8wDI66eHZv25jSpqbdVJjRj06qTHdZlnXX6lzHX/8
8c3jH//4TU0ydb706+m/92l9Q01qg5MaXbqdy74dqXc+/OEPPzAbb8/ar6fO
mH5f+v1j7Yfp7zl9DenvPf39r7/P09eY2mhq1GP9+tbG4xvxk9Onvvzh8Ov0
3/vTUzc9zuw1eKE7r7sLP7X+NXg/8Ma/DD+/nvi8yeeX1+CFbkr4ty6UYP1r
8O595wvDz6/PX7Fr9o2CFXLrZTdm7zzGmPnnx1/3urvQheuv9tfcTe+JCouw
X3X76ncuar529QPDrtG/cuVDJj7GrJVCdzop3G2tlX741a+88/x6QOD59X9N
Pb+0UpjNdQTcba2VfnhX7OvGX/m1+zWfuX587/cDke740W3ZO48xZr656n97
de4fITAaq379lVropEa6devW3DeNCqz6ftXuazdd1Jxz/qFh1+lnfPhFUx9n
1kphNp0U7im10g8f+ZfNeRf8Qdj59b6zd848v7RSmM51BNxTaqXnHv3K5jN/
+4th59feS++rk8IENzz61Oy9xxjTf254zLty//iA0Vjl66/9+/c3W7Zs8VxS
wqzyfq2C1Elf+4Fnhl2n/8Uxb5r5OLNWCtPppLDZxz9wQnPS2U8PO79ecNRb
O51fWim0cx0Bm31sz3HNuz7zn8LOr5MueIBOChPsf+eXsvceY0z/ueXNX8j9
4wNGY5Wvv9peb3fbtm25bxqVWOX9WgWpkz7/rIPCrtN/8w9mP8aslcJ0Oils
9vFr3tm8+Jy486vr2aWVQjvXEbDZ+Ve/rTnsnP8cdn6lazudFCa4/Y7svccY
03+a227P/dMDRmNVr7927NgxsZGm2bt3b+6bRyVWdb9WxVonfcMHdwx+jf6y
Y07q9TizVgqT6aSwWeqk6fx645l/NPj5dcRru70WglYK07mOgM1SJ03n12mf
ud/g59fbLnyATgpT3HLC57M3H2NM97nlpEty/9iAUVnF669pjTT9NxjKKu7X
KlnrpGned95wrfS0M1/a+zFmrRQm00lhs7VOmubsvcO9/u5b33Pk3OeXVgr3
5DoCNlvrpGkuuGzrYOfXuZfc966Pq5NCu2897YPZ248xZvb8/ZPel/vHBYzO
Kl1/pfcjndZI03uVpt8DQ1ml/VpF6ztpmnd/6NkLX6N/6GN/0jzi6fM9xqyV
wmY6KWy2vpOm1y/8+Gcfv/D59aZTj17o7NJK4Z5cR8Bm6zvp4ece1Fx8+X0X
Pr/O/vx973FNp5PCdN9+1tnZG5Axpn2+8Rtva+744Y9z/6iA0VmV66/0Wrrp
fUfbGqnX2yXCquzXqtrYSdOc/pFnzX2N/p4zj2ge8YeLPcaslcI96aSw2fpO
utZKz/740+Y+v3a/56hBzi6tFO7mOgI2W99J11rpJy6bv5V+6JL7brqe00lh
tm8948zsLcgYs3n+/omnNxopzKf266/02Oi055Cuze7du3PfVCpU+36tukmd
NM2udx/e+xr9lcedONhjzFop3E0nhc02dtK1OfY9h/U+v146x/uRaqUwm+sI
2GxjJ73rdX0+07+Rvv3CX5r4sXRS6OaWN16SvQkZY+6e9B7CwPxqvv46+OCD
Z/bRNDt37sx9U6lUzftFeydN89hXva550at3N3vOfUlz5Ve3bbou/8qVD2nO
/MgLm5cdc1LzsKcN+/iyVgp300lhs7ZOmuZ3jzq2ecXr3ticdd7zmyuvevCm
8+uKK3+1ed/ZO5sXHPXWsLNLKwXXETBJWydN8+JzDmpO/fT9m0996b7N1yZ0
0auuvl/z8Uvv27zpgge2fgydFPr7/nu+3Pzdb5/WfPVnjszeiYxZpfnqzx3V
3PCoU5tb3vSF5o4f35b7RwGMXs3XX9u3b/c8UrKqeb+Y3kl/2kqPu+vx3if9
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
llbKNHRSaNJJu6WVMg3XEdCkk0J+9i+IY74gjvmCOOarbjpp97K00iO10rR0
UmjSSbunlbIe1xHQpJNCfvYviGO+II75gjjmq246aQ5aKZPopNCkk+aglTKJ
6who0kkhP/sXxDFfEMd8QRzzVTedNA+tlHF0UmjSSfPQShnHdQQ06aSQn/0L
4pgviGO+II75qptOmotWylp0UmjSSXPRSlmL6who0kkhP/sXxDFfEMd8QRzz
VTedNB+tlK3ppNCkk+ajlbI11xHQpJNCfvYviGO+II75gjjmq246aU5aKavp
pNCkk+aklbKa6who0kkhP/sXxDFfEMd8QRzzVTedNC+tlBU6KTTppHlppaxw
HQFNOinkZ/+COOYL4pgviGO+6qaT5qaVUuik0KST5qaVUriOgCadFPKzf0Ec
8wVxzBfEMV9100nzy9JKnTV3RyeFJp00P60U1xHQpJNCfvYviGO+II75gjjm
q246aT9opcOmk0KTTtoPWumwuY6AJp0U8rN/QRzzBXHMF8QxX3XTSftDKx0u
nRSadNL+0EqHy3UENOmkkJ/9C+KYL4hjviCO+aqbTtovWukw6aTQpJP2i1Y6
TK4joEknhfzsXxDHfEEc8wVxzFfddNL+OdpZ8+DopNCkk/aPVjo8riOgSSeF
/OxfEMd8QRzzBXHMV9100n7SSodFJ4UmnbSftNJhcR0BTTop5Gf/gjjmC+KY
L4hjvuqmk/aXVjocOik06aT9pZUOh+sIaNJJIT/7F8QxXxDHfEEc81U3nbTf
tNJh0EmhSSftN610GFxHQJNOCvnZvyCO+YI45gvimK+66aT9p5XWTyeFJp20
/7TS+rmOgCadFPKzf0Ec8wVxzBfEMV9100nroJXWTSeFJp20Dlpp3VxHQJNO
CvnZvyCO+YI45gvimK+66aT10ErrpZNCk05aD620Xq4joEknhfzsXxDHfEEc
8wVxzFfddNK6aKV10kmhSSeti1ZaJ9cR0KSTQn72L4hjviCO+YI45qtuOml9
srTSI9/xV10/FdXQSaFJJ62PVlof1xHQpJNCfvYviGO+II75gjjmq246aZ20
0rropNCkk9ZJK62L6who0kkhP/sXxDFfEMd8QRzzVTedtF5aaT10UmjSSeul
ldbDdQQ06aSQn/0L4pgviGO+II75qptOWjettA46KTTppHXTSuvgOgKadFLI
z/4FccwXxDFfEMd81U0nrZ9W2n86KTTppPXTSvvPdQQ06aSQn/0L4pgviGO+
II75qptOOgxaab/ppNCkkw6DVtpvriOgSSeF/OxfEMd8QRzzBXHMV9100uHQ
SvtLJ4UmnXQ4tNL+ch0BTTop5Gf/gjjmC+KYL4hjvuqmkw6LVtpPOik06aTD
opX2k+sIaNJJIT/7F8QxXxDHfEEc81U3nXR4tNL+0UmhSScdHq20f1xHQJNO
CvnZvyCO+YI45gvimK+66aTDpJX2i04KTTrpMGml/eI6App0UsjP/gVxzBfE
MV8Qx3zVTScdLq20P3RSaNJJh0sr7Q/XEdCkk0J+9i+IY74gjvmCOOarbjrp
sGml/aCTQpNOOmxaaT+4joAmnRTys39BHPMFccwXxDFfddNJ0Urz00mhSSdF
K83PdQQ06aSQn/0L4pgviGO+II75qptOSqGV5qaTQpNOSqGV5uY6App0UsjP
/gVxzBfEMV8Qx3zVTSdlhVaal04KTTopK7TSvFxHQJNOCvnZvyCO+YI45gvi
mK+6Ze2kL3/5y0d3u9vdQhdNWmlOOik06aSsppXm5DoCmnRSyM/+BXHMF8Qx
XxDHfNUtayd9ylOeopN2RCvNRyeFJp2UrWml+biOgCadFPKzf0Ec8wVxzBfE
MV91y9pJoxupTjqZVpqLTgpNOilr0UpzGcp1xI9+9KNf/f+bN2/u8JHQBzop
5DeU/Qu6YL4gjvmCOOarbjop42ileeik0KSTMo5Wmkeb1xGXXnrpmqsL11xz
zejII48c7bzzzqN73OMejZ8xf+M3fmP0sIc9bLRhw4bR5z//+U4eI3nppJCf
czCIY74gjvmCOOarbhk76Y033qiTJqGV5qCTQlOWTvoXf/EXS9mz7Gez0Upz
aOM64u1vf/vEP/+f+tSnWnq06/vc5z43etrTnjbzjJaeeskllyztcZKbTgr5
OQeDOOYL4pgviGO+6paxk15++eXOlRPRSrunk0KTTmo/W49W2r1FriPOPPPM
qf78L6uTvuY1r1l4Vl/2spct5bGSm04K+TkHgzjmC+KYL4hjvuqWsZOefvrp
Y8+XTjnllNYW09NKu6WTQpNOqpNOQyvt1jzXERdeeOHo4Q9/+NR//qM7afm8
0cc85jGtzWu5rVtvvTX0MZObTgr5OQeDOOYL4pgviGO+6paxkx522GFrnis9
61nPCnoWmEaWs+YhtlKdFJp0Up10Wln2ryG20lmuI/7qr/5q9OQnP3nmP/+R
nfSWW24ZPehBD2p9Znfcccewx0x+Oink5xwM4pgviGO+II75qlvGTvqc5zxn
zTOl0k/pVpaz5qG1Up0UmnRSnXQWWfavobXSaa4jvv71r4/92a/rTrrTTjut
e///+l//69GjHvWoLX+fb5dddhn93u/93lSP+3nPe17Y4yY3nRTycw4GccwX
xDFfEMd81S1jJx13nnTGGWcEPQvMIstZ85BaqU4KTTrpHWu//fZbwrNdhyz7
15Ba6XrXEfvvv//CMxDVSQ888MB1++jxxx8/+vnPf974vV/4whdGz372s9d9
7KeeemrIYyc3nRTycw4GccwXxDFfEMd81a1PnfSv/3q22yFOlrPmobRSnRSa
snTS4hOf+ETomtRZrrrqquBnui5Z9q+htNL1riPa+LsCEZ20fEbqpPv8n//z
f46+8pWvrHs7p5xyysTb+a3f+q0tn3/KsOikkJ9zMIhjviCO+YI45qtu2Trp
rbfeOvYs6cc//nHgM8Gsspw1D6GV6qTQlKmTRjrxxBO9b2fLsuxfQ2il611H
7L333hM7YnlN50033bT0TjrpM0lL2yzvFTytY445ZuLjf9WrXtX64yc3nRTy
cw4GccwXxDFfEMd81S1bJ/3yl7889hyJfLKcNdfeSiM76Y9+9KPR3/zN34wu
vvji0TnnnDM677zztpw5X3311SH3B20ZSied1FfKe3synyz7V+2tdL3riPe9
731r/tl+7nOfe5fXSi+zk5522mkT7+/MM8+c+Taf+tSnjr29f/Ev/sXolltu
afVrIDedFPJzDgZxzBfEMV8Qx3zVLVsnLZ1mrTOkRz7ykYHPAovIctZccytt
u5OWFvriF794y/sGTjoL/mf/7J9teU3NIYccMrriiitau39owxA66aT37Nx9
9907fWw1yLJ/1dxK17uOuP766+/y5/rJT37y6P/+3+bzscxO+sAHPnDsfe26
665z3eYXv/jFiV/D0Ucf3erXQG46KeTnHAzimC+IY74gjvmqW7ZOetxxx615
frTPPvsEPgssKstZc62ttK1Oevzxx4/++3//7xPPaietHXbYYfEvBloyhE46
aR4vv/zyTh9bLbLsX7W20mmuI1b+TF9wwQXr/proTnrJJZdMvK9F/s7QHnvs
MfZ2t99++9a+BvLTSSE/52AQx3xBHPMFccxX3bJ10pe+9KVrnh+Vz3Yityxn
zTW20kU7aXlP3fvd735z99Gt14te9KL2vjiYU+2d9B3veMfYGXziE5/Y2eOq
UZb9q8ZW2tZ1xLI66aTPS91pp50Wuu2LLrpo4tfxpS99qaWvgux0UsjPORjE
MV8Qx3xBHPNVt2yd9PGPf/yaZ0fnnntu4LNAW7KcNdfWShfppOU1pG310dXr
wQ9+8Og73/lOu18ozKD2Tjpp/srffaBdWfav2lpp3zrpb/3Wb429n3e9610L
3/6kr+Ooo45q4SugD3RSyM85GMQxXxDHfEEc81W3bJ103NnRVVddFfgs0KYs
Z801tdJ5O+mRRx4Z0khXVvnsUuhKzZ303e9+99i523HHHTt5TEOQZf+qqZX2
qZNedtllE+/npptuWvg+9tprr7G3/9jHPraFr4I+0EkhP+dgEMd8QRzzBXHM
V9360knPOeec0SmnnLLl79ofeuihW9Zb3vKW0Xvf+94t52M//OEPA58lZpXl
rLmWVjpPJz3zzDPX7ZwPeMADtrTUz3zmM1teG/q9731vy/8t/7vM2v3vf/91
b2O//faL+aJhHTV30kkzV/ZD4mTZv2pppX3qpOVny+i/F7Rx48ax9/Ebv/Eb
rdwH+emkkJ9zMIhjviCO+YI45qtumTrptddeu/Dr2/bdd9/RBRdcEPysMY0s
Z801tNJZO+nNN9+87qxM+/6BJ5988rq3deGFF875lcH8au2kp59++sR5I16W
/auGVtqnTrrzzjuPvY8DDjiglfv467/+64lfi/dPGQadFPJzDgZxzBfEMV8Q
x3zVLVMn/cQnPrFwJ11Z22233ejYY48NfvZYT5az5r630lk76YEHHjhxPq64
4oqZ7v/888+feHvlbBmWrdZOOmnWPvCBDyz98QxVlv2r7620T530P/2n/zT2
Pt7znve0ch+33XbbxK/lwx/+cCv3Q246KeTnHAzimC+IY74gjvmqW6ZOOunz
2BZZH/zgB4OfRSbJctbc51Y6Sye99dZbR//yX/7L1s9gjzjiiIlzdvXVV891
uzCvGjvpGWec4bWkiWTZv/rcSvvSSW+88caJ93HllVcufB8rfud3fmfs/ZT3
vKd+Oink5xwM4pgviGO+II75qlumTvq6170upJOW9bKXvSz4mWSSLGfNfW2l
s3TS8nqzcXPwuMc9bu7H8Itf/GLijL31rW+d+7ZhHjV20kkz9s53vnOpj4U7
ZNm/+tpK+9JJP/3pT0+8j1tuuWXh+1ixww47jL0fn/k9DDop5OccDOKYL4hj
viCO+apbpk66xx57hHXSsp71rGcFP5tMkuWsuY+tdJZOWj6jd9wMlM89XMQL
XvCCsbf9whe+cKHbhlnV1knPOussryVNKsv+1cdW2pdO+v73v3/s7W+zzTYL
3/5qe+6559j72mWXXVq9L3LSSSE/52AQx3xBHPMFccxX3TJ10nI+tPvuu49e
8YpXjI477rgtr50588wzR+edd97osssuG1100UVbzpFPPvnkLb+mfCbiv//3
/36mVvqa17wm+BllkixnzX1rpbN00oc//OFj//x/4xvfWOhxvOMd7wh5rSrM
o7ZOOmnvOvHEE5f2OFhblv2rb620L530LW95y9jb/x//438sfPurHXDAAWPv
62EPe1ir90VOOink5xwM4pgviGO+II75qlumTjqvv/zLvxw9//nPn7qVbtrk
3KBLWc6a+9RKZ+mkv/u7vzv2z/5PfvKThR7H+eefP/a2H/WoRy102zCrmjrp
Rz/6Ua8l7YEs+1efWmlfOumrX/3qsbf/4Ac/eOHbX+3QQw8de19/+Id/2Op9
kZNOCvk5B4M45gvimC+IY77qVkMnXfH1r3999JSnPGWqVnrzzTcv5TGxtixn
zX1ppbN00kl/7hf9fLWPfexjY297t912W+i2YVY1ddJJrwN/85vfvJTHwHSy
7F99aaV96aTlc0HH3X55/5I2HXXUUWPv6973vner90VOOink5xwM4pgviGO+
II75qltNnXTFq171qnU76cEHH7zUx0RTlrPmPrTSWTppeS3KuD/3V1xxxUKP
o7zn9bjbLq/FgWWqpZOW95aftF8t+jpw2pdl/+pDK+1LJ33e85439vbb/szQ
E044Yex93ete92r1vshJJ4X8nINBHPMFccwXxDFfdauxkxYveclLJp6p/eZv
/ubSHxNNWc6as7fSWTrp05/+9LF/7v/sz/5socfxzGc+c+xtn3vuuQvdNsyq
lk5a3rN63Fxt2LAh/P6ZT5b9K3sr7Usn3XPPPcfe/jOe8YyFb3+1SX/nqCzq
p5NCfs7BII75gjjmC+KYr7rV2kmL+973vhPPoc4555xOHhd3leWsOXMrnaWT
nnTSSSHv5/e9731vdPe7393fOyCNGjrphRdeOHGf8h7xuWXZvzK30ho66R57
7LHw7a82aZ/edtttW70vctJJIT/nYBDHfEGccfM17vrj4osv7uBRQj/Zv+pW
cyc9/fTTJ56rHXjggZ08LpqynDVnbaWzdNIbbrhh4p/78r7U89h3333H3uZB
Bx00123CImropI95zGPGztUrX/nK0PumHVn2r6yttC+d9LnPfe7Y2y/v09Cm
4447bux9bbfddq3eFznppJCfczCIY74gjk4Kcexfdau5kxb/4T/8h7F7wSMe
8YjOHhdNWc6aM7bSWTpp8YIXvGDimfLhhx8+0/2feOKJE2/vxhtvnPErgsX1
vZNecsklE+fq2muvDbtv2pVl/8rYSvvSSSd9XsOTn/zkhW9/tSOOOGLsfZXP
GKd+Oink5xwM4pgviKOTQhz7V91q76RPe9rTxu4F97znPTt7XKwty1lztlY6
ayctv3bSmXJZu+222+jv/u7v1r2tI488cuLtvPWtb13gK4P59b2TPuEJTxg7
V6XZ0C9Z9q9srbQvnfSQQw4Ze/s77rjjwre/2mtf+9qx9/XQhz601fsiJ50U
8nMOBnHMF8TRSSGO/atutXfSww47bOLZGvlkOWvO1Epn7aTFxo0b122lZb3i
Fa8YXXPNNY3f/7WvfW206667Tvy93ruaLvW5k37yk5+cOFt/+7d/G3K/xMqy
f2VqpX3ppEcdddTY27///e+/8O2vNum1q095ylNavS9y0kkhP+dgEMd8QRyd
lK6V8+htt922yg5j/6pb7Z30bW97m07aQ1nOmrO00nk6aXHooYdO1UrL2mmn
nba8v+473/nO0XOe85x1f3157Q10qc+d9KlPferY2Sqfk0h/Zdm/srTSvnTS
0047beztt/3+I5Pe6+TFL35xq/dFTjop5OccDOKYL4ijk9KV8mfpkY98ZNUd
xv5VtyF30n/7b/9tZ4+L9WU5a87QSuftpMUxxxwzdSuddr33ve9t9wuEOfS1
k15++eUT5+vzn/986/fJcmXZvzK00r500ksvvXTs7d/97ndf+PZXe8hDHjL2
vt74xje2el/kpJNCfs7BII75gjg6Kcv2uc99bt0+qpPSB7V30sMPP3zsbN77
3vfu7HExnSxnzV230kU6aXHZZZeNHvCAByzcR5///OePbrjhhva+MFhAXzvp
pNeSPf3pT2/9/uhGlv2r61bal07693//9xPvo/z7tvzX//pfx97P+973vtbu
h7x0UsjPORjEMV8QRydlWco59d577z3TuXLf2b/qVnsnfcYznjF2Nh/3uMd1
9riYXpaz5i5b6aKddMV6n9e73nrTm940+vGPf7z4FwQt6GMnvfLKKyfO2Gc+
85lW749uZdm/umylfemkxb/5N/9m7H1ccMEFrdzHD3/4w4lfy2c/+9lW7ofc
dFLIzzkYxDFfEEcnJdrmzZtn7qM6KX1Qeyf9L//lv4ydzQ0bNnT2uJhNlrPm
rlrpop30u9/97uhP/uRPFmqkK+s3f/M3R8cdd1x7XxzMqY+d9JnPfObY2Xr8
4x/f6n2RQ5b9q6tW2qdO+r//9/8eex9HHnlkK/dRHuukr+WnP/1pK/dDbjop
5OccDOKYL4ijkxJp06ZNo2222WbuM+W+s3/VreZO+qEPfWjibH7yk5/s5HEx
nyxnzV200kU66dvf/vbRr//6r7fSSFevHXfccXT11Ve3+4XCDPrWScvnjk6a
qYsuuqi1+yKXLPtXF620T530pS996dj72GWXXVq5j2OPPXbsffyv//W/WrkP
8tNJIT/nYBDHfEEcnZRI5c/LpGvz8jrTcn6tk9JHNXfSSXP7O7/zO508JhYz
1LPmeTtp+TzRaZrn6173ui099eCDD565l/qZiq70rZPutddeY+dohx12aO1+
yGmo+1efOumZZ5459j7+43/8j63cR+mt4+5jv/32a+U+yE8nhfycg0Ec8wVx
dFKirfXn6JGPfORd/izppPRRrZ30kEMOmXim9qd/+qdLf0y0Y4hnzfN00vL5
u+v9XYF3vetda/7eSy+9dOL7g269Lrnkkha+SphNnzrpl770pYkz9JGPfKSV
+yG3Ie5ffeqkN91008T7ueyyyxa+j0m3X94HhWHQSSE/52AQx3xBHJ2UaKWJ
rvz52X777df8M6ST0kc1dtLyGVKTzqHucY97jG699dalPibaNbSz5lk76aTX
q5T14he/ePTzn/983dv53Oc+N3riE584VSv99re/vcBXCLPrUydd77XdDMfQ
9q8+ddLiEY94xNj7eclLXrLQbX/4wx8ee9t3v/vd/Ww6IDop5OccDOKYL4ij
kxLtzW9+82jbbbcdbdy4ceyvqfXsy/5Vtwyd9O///u+3zMrJJ588uv322+f+
Wsr50j777LNuzynvL0r/DemseZZO+vrXv37in//DDjts5vs//vjj152rpzzl
KTPfLiyiL530a1/72sTZef/723tvX/phSPtX3zpp+Vl00n396Ec/mvu2n/rU
p4693ac97WmtfQ3kp5NCfs7BII75gjg6KdE2b9687q/RSemjDJ30uOOOu8vM
7LvvvqOPf/zjU38NZT7f8pa3TPWatz322GPRp4xEhnLWPG0n/cIXvjDxz/8i
r4Up7wu63nyde+65c98+zKovnfRFL3qR15LSMJT9q2+d9Ic//OHo137t18be
1xve8Ia5bvezn/3sxK/hox/9aGtfA/nppJCfczCIY74gzrI7aXkfuvL6wr33
3nvL+7GW1xlufR/ln5d/v3HjxqkaWw3K17lp06bRQQcdtOXr32abbX71fJTn
qPyz8u/Kr1m2cr5c/putfv/ctpt5redf9q+6Zeikk86Ndtppp9ErXvGK0Vvf
+tYtn9tU+mlZZ5xxxujwww9f9zMYV68HP/jBo9tuu21JzyzLMoSz5mk76bOf
/eyxf/7/23/7b6Nf/OIXCz2OMoeTZuwJT3jCQrcPs+hDJ73mmmsmzsypp57a
0rNBHw1h/+pbJy3222+/ifd31VVXzXybT3rSk8be3u///u+3+vjJTyeF/JyD
QRzzBXGW0UnL+WRpfGs10WlWaaazfLZY+QzMcbc1y+2s9zWNu4/ytU6r9NHy
9a3uouut8jyWbjmv8t9wmv+25bGVryWqma+mk9JHXXfSb33rW3N9T511PehB
Dxp997vfXeIzyzLVftY8TSf9wQ9+MHEGTjrppFYey0Mf+tCJ93PLLbe0cj+w
nj500vIa7knzArXvX33spFdfffXE+yt/h28Wxx577MTbe9e73tXq4yc/nRTy
cw4GccwXxInspOVcsjTANs7pS0fcOOHzLVcrv27c7SzSF1crtzPuPqZtseU2
ZumjW6/Sg8vrc2c1TSctjXRSb571z8J6aj0Ds3/VretOuvV77kasXXbZZfSP
//iPS3xW6ULNZ83TdNL3ve99E+egdNQ2nHbaaRPvx3vvsizZO+nKZ2+PWyec
cEKLzwZ9VvP+1cdOWrzyla+ceJ/Petazprqdd7/73RNv54//+I9bf+zkp5NC
fs7BII75gjiRnbStRrp6TdNKS+Mb1x/LazHbMK4hln8+zeNrsx/P2krX66TT
NNJZ/yysZ9x99J39q25dd9K99tqr9e+xq1f53FKGo9az5mk66Utf+tKxc3D/
+9+/tcdy0003TZy5o446qrX7gkmyd9IDDjhg4qzAarXuX33tpD//+c9H2223
3cT7fchDHjK69NJL1/z9N9xww8R9eWVdfvnlrT928tNJIT/nYBDHfEGcyE5a
Pktz0rVNaXHlMy9Xr2nO7qd5DJM65DyvwVxt0nvurtdxp2mQ5XkorzVdWes9
L/O00knP66677traf4dFHk8N52D2r7p13UmLcsY07cxOu8p7HX77299e0rNI
JjWeNU/TSXfeeeex81BeU92mSbNXPk8YliFzJ73uuusmzskRRxzR8rNBDWrc
v/raSYuPf/zjU/3MWf4uUvm5s1zvlj3w0Y9+9FS/z2vKh0snhfycg0Ec8wVx
oj+fdPXrOstrOcvnXa53G6U1TmqJ5XZKb5ykdMNxv7801EVMes/d9R7XpH5b
bnfc7y//fNL79Jbna737Xm2t2yjP+7jXmuqk87F/1S1DJ11RzpXLmdGk3jNp
lb/Xf/TRR49uvPHG4GeN7Go7a56mk5Zz2nGzUV633aZJc7j//vu3el8wTuZO
WlrJpDm59dZbW342qEVt+1efO2lxyimnzPUz6XqrvN6c4dJJIT/nYBDHfEGc
6E5aumDpmhun/GzRrX/vuMcxze2Na62lNS5i3O2u11/H9dVZXg9aft24VjrL
Z6+O+/1rfW3ln5Xne/U5c2mys3TZeR6PTkp2mTrp1sr3ive+972jww47bLTP
PvuMdt9999GTnvSk0ROf+MTRM57xjC3vZ3bMMceMLrzwwtEtt9zS8jND39V0
1jxNJ73f/e43dh965jOfufBjWG3S2e/rX//6Vu8LxsnaSb/73e+aERZS0/7V
905alL/D12Yj9b4L6KSQn3MwiGO+IE50Jy1n9Yv0tHHvJznN54yWtjfu6yjv
CTyPSe+5O+m5Kb9vrb45z3vmjmul5Z9N+1yv9fjXen/fWdrrInRS+ihzJ4VF
1XLWPE0nffjDHz52H/qjP/qjhe5/a5POf0899dRW7wvGydpJDz744Ikz8v3v
fz/g2aA2texfNXTS4uyzzx7d4x73WKiP/qt/9a/m+nvX1Ecnhfycg0Ec8wVx
ojvpoiZ1yfX6YmmG4157WfrrPMa9JnS9bjvutbHzXu+NexzTds1prkeX+d9a
J6WPdFJqV8NZ8zSddNL7V5T1ve99b+77X+2LX/zixPu58sorW7kfWE/GTnrz
zTdPnA+vI2MWWfavo991xdxfQy2dtCivFX/Ri140VyMtv+/b3/72Uh4n+emk
kJ9zMIhjviBO9k5ajHtN6TRNcNLZ5zyvcx33nruTHsu41ltevzmvcQ24PL5p
rHc9uqzXka73ePrO/lU3nZQhyHLWPG8rnaaTltdxTtoTjzzyyLnue2uvfvWr
x97Hf/7P/7mV+4BpZOykxaQ51EmYVZb9a95W2tZ1xFvf+taxa9muueaa0YYN
G0YPfOADx856ucZ99KMfPTr22GNHN9xww9IfI7nppJCfczCIY74gTh866cYx
75+73ueBFuU1p221wEmvbZ10BjvutZ+LPpfjGvB658HFpHOoaVtrm3RS+kgn
ZSiynDXP00qn6aTf+c531v37Q+XXLKI8hn/+z//52Nvff//9F7p9mEXWTgpt
y7J/zdNKa7+O+MlPfjL60pe+NLrsssu2/O8rrrhidO2113b8qMhOJ4X8at+/
oEvmC+L0oZOW+1zk9ZjjXgM6aw8c1zvXew/f8p68W/+eaT5fdT3j+vHGKd7L
d9JZ8DS/v206KX2kkzIkWc6aZ22l03TSYs8995y4Nz7ucY+b85m7w0477TTx
9r/2ta8tdPswC52UIcmyf83aSl1HQJNOCvnZvyCO+YI4fe6k07bGcT1x2tde
rhjXWyd1xXGvQT3ooIOmvt9xxj0v07zOdtzzUd7nqAs6KX2kkzI0Wc6aZ2ml
03bSL3zhC+u+pnTnnXceXXfddTM9Z+U9Ax/72MdOvN2Xv/zlM90mLEonZWiy
7F+ztFLXEdCkk0J+9i+IY74gTp876bQdbdxnec7SK8e9f+96XXHca1A3bWrn
Z++1bnua19mOez7Xe21sFJ2UPtJJGaIsZ83TttJpO2nxhje8Yd1WWtbRRx+9
7vf2m2++ecvnmq53W494xCOmemzQJp2UIcqyf03bSl1HQJNOCvnZvyCO+YI4
XXfS0jDLbZaeWJplaXxljXvt5rwdbdxneU77mtTy2OZ57ea43zfL61gnmfdr
Gvd8zvqZrW3RSekjnZShynLWPE0rnaWTFk9/+tOn+vlj5fWlhxxyyOjkk0/e
8vPA8ccfv+W1oTvssMPUtzHr61OhDTopQ5Vl/5qmlbqOgCadFPKzf0Ec8wVx
uuik5bWZpR9O20Lb6KTjXg9a1jSv7VzrM0bLKrc7SWm+i36NEc/LIs9FBJ2U
PtJJGbIsZ83rtdJZO2mxyy67hO/T97znPUdXXnnlAv8FYH46KUOWZf9ar5W6
joAmnRTys39BHPMFcZbZSTdu3Di2N0Z30mJcl13vNaHjGmu5vfW0/fVGd9Iu
3ld50uPpO/tX3XRShi7LWfOkVjpPJy1e+cpXhu3Rj370o0ff+ta3FnjmYTE6
KUOXZf+a1EpdR0CTTgr52b8gjvmCOMvopKUzRvXCWZROO+52yvv/jjPuvXOn
eY/aLhqpTpqH/atuOinkOWse10rn7aTFBRdcMPqjP/qjVvfn4447boFnG9qh
k0Ke/WtcK3UdAU06KeRn/4I45gviRHfSSW1y61Vaanmf2vL6ztIgV682Olpp
odtss82at1Me5zjjGu+ktrqii0a6yOeT6qTtsn/VTSeFO2Q5a16rlS7SSVec
ccYZW14DOu++fN/73nd01FFHLfQYoE06Kdwhy/61Vit1HQFNOinkZ/+COOYL
4kR20kl9s6zSLMtrNae5zbY62rjXhpY+u5Zx77m73nv1rve4t+7Aba5JzXe9
x6WTtsv+VTedFO6U5ax561baRiddccMNN4xOO+200b777jt66EMfOvrt3/7t
0a/92q/dZd/6d//u343uc5/7jHbbbbctbXS9zzGHLuikcKcs+9fWrdR1BDTp
pJCf/QvimC+IE9VJy6+b1Eenec/aaR7PrMpZ6bjbWuscdVxX3bRpup+ds/Y/
nXQ57F9100nhrrKcNa9upW120nFuvfXWLf/3Zz/7Wej9QFt0UrirLPvX6lbq
OgKadFLIz/4FccwXxInqpOPeq7Y00nleW9FmRyuvHR33Gs9pvo5p3td2xfbb
bz91k10mnXQ57F9100mhKctZ80orXUYnhb7RSaEpy/610kpdR0CTTgr52b8g
jvmCOBGddOOEzySd9/3n2uxo4x7f1v1z3HvulteYTmtck+2qR67QSZfD/lW3
aTvpAR9+4Og1m540OmzTM0ZvPGv30Zs/+rjRcR+/3+i4i39v3fXNG08d/eM/
fsqyerXe86HzR3u/9l1LX8875N2jp+1/2uhhe95x1nzMn108+sZpn9myfnzh
NZZl/b912f85dar962UfecDotWc9aXT4WbPvX1d+Y0Pn34ssa9bV9v71gtdM
t1b2r4fuccf+dewRF4++99EvbVk/vugay7L+37r48rdP3Ttf+IFHj573nqeP
nvvnzxjt/f7H6aQQ7Pbbfzb62c/+dvT971/yy3XRL/fVT1uW1fIqs/X971/6
y1m76pcz9/Ouxx6qEtFJd91114X74rSPZ17lda3rddxxn686y+tSxr1v76zv
O9w2nXQ5dNK6TeqkLz/7j0cnn/3C0YWX7Tm6+up7W5a15PWxi/YZHXr8SaOj
d3vb6Kt322BZ1qp13mEbxv/dng89ZHTih15s/7KsDtbfXvV7ow+de+DowD99
++iox5/S+fcKy8q2Pvam109snM9820tGO73mxNFDn39a47XaD93rvaNHHfzW
0dNPOkAnhZb84hc/HN1yyztH1173jM73UMsa3tpudN11zxxt3vye0e23/6Tr
bwfQexGdNKLBtd3RpumXa71nbnl96CzGvXa1tOQu6aTLoZPWbVwnPeXsFyX4
ecmyrJX15+98U+fnepaVaY3rpMduesnoC198WOcza1nWHevUtx3R+fcLy8q0
xnXSPd627+gRL33XTO9xveuxr9ZJYQE/+MHbOt8nLcu6c91yy7u6/rYAvdZ2
Jx33XrWLNK/Nmze3fpvlNaFr3V5po5P+femebdzPrK9LbZtOuhw6ad227qSv
+NDDRx+7+Lmd/2xkWVZzXfDx54++eq/DOj/fs6wMa+tOus8HHzE67SP7dz6n
lmU114c/9iedf8+wrCxrrU76+De9ee7PA37064/XSWFGP/+n74+uv965h2Vl
XDfc8KLRL37xo66/TUAvtd1Jy79vu3lN+rzTRYz77NDSL9d6z93yXr2l2c5q
rdelbv3a1WXTSZdDJ63b6k5aGukln3565z8TWZY1fn3ylzP61d9+Q+dnfJbV
9VrdSff54MNH7zn7lZ3Pp2VZ49emD7+88+8blpVhbd1Jd3798XM30pX1mDe8
RSeFKf3TP908+va3n9j5vmhZ1vh17bW7jX7xix93/e0CemeZnXSexliM65mL
drRx/bX0y7U+Y3Xvvfdu9X7KWv15qMukky6HTlq31Z30HK8jtaxerPMvfGHn
Z3yW1fVa3UnPOG/fzufSsqz114c++rLOv3dYVtdrdSd91KtPWriRrqydNxyn
k8IUrr/+eZ3vh5Zlrb9uuGGfrr9dQO+03Uknvc/spk2z/7y51us62+xo5TWi
W9/muC47b9MsfXit+ymrvNZ03n68CJ10OXTSuq10Up9Haln9Wqeffkjn53yW
1eVa6aTHbdqn83m0LGv69d73vLrz7x+W1eVa6aS7HPPa1hrpytrt+IN1Upjg
B7ec2vk+aFnW9Gvz5tO6/rYBvdJ2Jy3GNcHSH2dRuuS422qrox100EETb39l
bbvttgvdz6TXlHbRSnXS5dBJ61Y66cvP/uPOf/axLGv2dcYpB3R+1mdZXa3S
Sfc96yGdz6FlWbOvM048sPPvIZbV1SqddL8Pb996I11ZOimsrXzeYdf7n2VZ
s6/bb7+t628f0BsRnbS8P+243z/tZ3KWrrheI22jo016/es8j3uSSe8fXDrs
vI2yNNZZH59Ouhw6ad1KJz3Za0ktq5frpI88a/SBk72HoTXMVTrpmz/wks7n
0LKs2deRm56rlVqDXaWTPu2EV4Z10mecvL9OCmvwWlLL6ufavPn0rr99QG9E
dNLyOtBJzbF89mfpk2sp7827Vk8c10zbMKlfrtx3G6/3nPT+u6tfW1oa8bjn
Z0X577D156jO0jh10uXQSetWOumFn9ij8597LMuafZ13ybO2vGZAK7WGuEon
PefjPl/Ksvq4PnLR8+74bGGt1BrgKp10h1e8PayTPupVp+iksIZrr9u98/3P
sqzZ1/XXP6frbx/QGxGdtJj0mtLVr6EsjXJljft15bbGfU7pvJ8Zutqk98Rd
uf+2TPNewqvX6udnvZ47y2tKddLl0Enr9uXrP935zzyWZc23vvb1P9hyzqyV
WkNc5xx+6Oiqq3638zm0LGv29ZWvPuBX+5dWag1tnX34hrBGWtb/9+z3jj79
dzoprHb77T/rfO+zLGvOdc19uv4WAr0R1UnLayfLayOn7YHrNcpxLbOtrjep
XbbRYlcrt9fGc7P1Kq8tnZZOuhw6ad0+9aXzu/+Zx7KsudfBmx6vlVqDXO85
6k87nz/LsuZfB5/1OK3UGuQ64TVHh3bSst5z4TldX2ZCKj/96Vc73/csy5p/
3Xbbt7v+NgK9ENVJi0Vb6erXR5b7XevXlPfpbcO412qWfx5h5TNF2+ykpfVO
SyddDp003spz3MU6/zMf6PznHcuy5l8bNj39V+fMWqk1pPWO4/6s8/mzLGv+
tWHTbnfZv7RSayjrjQcdF95Jjz5tU6fXmJaVbX3/+xd3vu9ZljX/+sEP/qrz
7yOW1Yd10003bVlb//Nx3eqcc86Z6favu+660WGHHTb69V//9al733Oe85zR
l7/85bvcTvnfa/3actttPA/3vOc917z90047LfT5L19X+XpneX62Xve73/22
PA9bP2eTVlv/fdta4x5Pl7PRxho3X1Yd67xP66SW1ee1dSfVSq2hrI3HHNH5
/FmWNf/aupNqpdZQ1htffkJ8J323TmpZq9f3v//xzvc9y7LmXzffrJNa1jRr
WR2n9NITTjhh9OQnP7nRJEvnK/+8/PtZWl9bq7TBtRpdeZzLfhyldz784Q/f
srZ+PCv/vHTV8uvKry/Pa9d/hqzxSyeNX136y89+ovOfdyzLmn8dfNZjG+fM
Wqk1hLXxdcd3Pn+WZc2/Dj7rMWvuX1qpVfs6+sUnhXfSjWde0uk1JmTz059+
pfN9z7Ks+ddtt13b9bcR6IUMraFr495zt3wmKizCfNXtii9eP/rbq36v8595
LMuafX31a3+45hmzVmoNYb37USeMvvb1P+h8Di3Lmn19+SsPmrh/aaVWzesd
O8e/nvQjF1/V9WUmpHL77beNrrlmu873P8uyZl/XfOP3u/4WAr0x9I5TWuha
jXTbbbft+qFRgaHPV+2u/NJ3Rh8698DOf+6xLGv2de4le048Z9ZKrZrXu3c4
frTpYy/vfA4ty5p9nX3R89fdv7RSq9Z16o46KXTh+uuf2/n+Z1nW7Ov665/X
9bcP6I0hd5zNmzePttlmG68lJcyQ52sISid92Zve3vnPPZZlzb5O+uge654z
a6VWrat00gPetLHzObQsa/Z1xFl7TbV/aaVWjUsnhW78wz98uPP9z7Ks2dfm
H76/628f0BtD7jjj3m93++237/qhUYkhz9cQlE5arqW7/rnHsqzZ1wEf/YOp
zpm1UqvGVTqp/cuy+rmm3bu2tNKTtFKrrqWTQldu73z/syxr9jUa/VPX3zyg
N4bacfbee+81G2lZF198cdcPj0oMdb6GYqWTvvaYt3b+s49lWdOvE85e/z0L
tVKr5rXSSV/zFvuXZfVpHXPW7PuXVmrVtHRS6M7mzad1vg9aljX92rz5fV1/
24BeGWLHmdRIy7+DtgxxvoZkpZOW9Z5Nr+/8ZyDLstZfZ398uvcr1EqtmtdK
Jy3rzz9o/7KsPqzTz33h3PuXVmrVsnRS6NaNN/p8e8vqw/rOd/br+tsF9M6Q
Ok75PNJJjbR8Vmn5NdCWIc3XEK3upGVtfN9hnf8sZFnW+HXRp546OvCc+c6Y
tVKrprW6k5b19vcd3vl8WpY1fp32sRcvtHdppVYtSyeF7n33u4d0vi9aljV+
XXfdM0a33/6zrr9VQO8MpeOU99Itnzs6rpF6v10iDGW+hmrrTup1pZaVd5XX
kS7aSLVSq5a1dSct65TT/rTzObUsq7ned978ryPVSq3alk4KOdx440Gd74+W
ZTXXd77zJxopzKn2jvPNb35z4mtIV9bGjRu7fqhUqPb5Grq1OmlZhx5/Uuc/
G1mWdefa7fhXtXbGrJVaNay1OmlZrzzibaO/uvIJnc+sZVl3rGPOekHr+5dW
avV56aSQR/nsw673Scuy7lybN5/e9bcF6LWaO84jH/nIdftoWQcddFDXD5VK
1TxfjO+kv+qlx500+thF+3T+s5JlDW195asPGJ17ybNGJ35kz9EBH/2D1s+Y
tVKr72tcJ11Zhxx1yujs83755/tr23c+z5Y1pPXlrzxo9OELnzd686bnhO1d
WqnV56WTQj7/8A/njK6/Ye/R1dfcp/N91LKGtK75xn1H11//3NHmH75/dPvt
/9T1twLovZo7zq677up1pHSq5vli/U66sh625+mjXf7ktNGzXvHno2cfNNv6
0tc/P/rJTz5nWdZW64Iv7Tc66qL7bFlv/Mhjtvzf12/adXTwWTuHni1vvT74
6Q2jWz/zbcvq1Trz1P8z9XnxU15y2mjPOfav8y/9dOffJyyr+/XZxvqLL77k
V/vXmz766NGhZ+022rBpt1/uX49d6v616dOHjW799Lcsq1fr/Rsv10khsdtu
++bo5ps//cv1yTX3QMuyFltltm6++fJfztq3uh53qE7NHefNb37z2D66zTbb
aKSEq3m+mL6TLrL+5uvf6/rLhLTO/MIbl3qmPPZ1pZ9/Q9dPBczkA+d+NXz/
+tAFX+/6y4S0yr7R9d5VVtlHoU9O++iXdVJIzjkYxDFfEKfm+SqfTbpWIy3v
x1v+HUSreb7QSSEDrRRmp5NC97RSmJ1OCvk5B4M45gvi1D5f22677a/66Pbb
bz+6+OKLu35IDEjt8zV0OinkoJXCbHRSyEErhdnopJCfczCIY74gTu3zVd57
96CDDhp97nOf6/qhMEC1z9fQ6aSQh1YK09NJIQ+tFKank0J+zsEgjvmCOOYL
4pivuumkkItWCtPRSSEXrRSmo5NCfs7BII75gjjmC+KYr7rppJCPVgrr00kh
H60U1qeTQn7OwSCO+YI45gvimK+66aSQk1YKk+mkkJNWCpPppJCfczCIY74g
jvmCOOarbjop5KWVwng6KeSllcJ4Oink5xwM4pgviGO+II75qptOCrlppbA2
nRRy00phbTop5OccDOKYL4hjviCO+aqbTgr5veNTr+r8nFkrJRudFPI77YrX
dr53aaVko5NCfs7BII75gjjmC+KYr7rppJDfN7/5Ta0UtqKTQn7lGkIrhbvS
SSE/52AQx3xBHPMFccxX3XRSyK900rK8By/cSSeF/FauI+xfcKf3L2H/0klh
Mc7BII75gjjmC+KYr7rppJDfSictnDXDHXRSyG/1dYT9C+6gk0J+zsEgjvmC
OOYL4pivuumkkN/qTlo4awadFPpg6+sI+xfopNAHzsEgjvmCOOYL4pivuumk
kN/WnbRw1szQ6aSQ31rXEfYvhk4nhfycg0Ec8wVxzBfEMV9100khv7U6aeGs
mSHTSSG/cdcR9i+GTCeF/JyDQRzzBXHMF8QxX3XTSSG/cZ20cNbMUOmkkN+k
6wj7F0Olk0J+zsEgjvmCOOYL4pivuumkkN+kTlo4a2aIdFLIb73rCPsXQ6ST
Qn7OwSCO+YI45gvimK+66aSQ33qdtHDWzNDopJDfNNcR9i+GRieF/JyDQRzz
BXHMF8QxX3XTSSG/aTpp4ayZIdFJIb9pryPsXwyJTgr5OQeDOOYL4pgviGO+
6qaTQn7TdtLCWTNDoZNCfrNcR9i/GAqdFPJzDgZxzBfEMV8Qx3zVTSeF/Gbp
pIWzZoZAJ4X8Zr2OsH8xBDop5OccDOKYL4hjviCO+aqbTgr5zdpJC2fN1E4n
hfzmuY6wf1E7nRTycw4GccwXxDFfEMd81U0nhfzm6aRFnrPmQ9t/Uhg8nRTy
m/c6Is/+pZXSPp0U8nMOBnHMF8QxXxDHfNVNJ4X85u2kRZ6zZq2UdumkkN8i
1xF59i+tlHbppJCfczCIY74gjvmCOOarbjop5LdIJy3ynDVrpbRHJ4X8Fr2O
yLN/aaW0RyeF/JyDQRzzBXHMF8QxX3XTSSG/RTtpkeesWSulHTop5NfGdUSe
/UsrpR06KeTnHAzimC+IY74gjvmqm04K+bXRSYs8Z81aKYvTSSG/tq4j8uxf
WimL00khP+dgEMd8QRzzBXHMV910UsivrU5a5Dlr1kpZjE4K+bV5HZFn/9JK
WYxOCvk5B4M45gvimC+IY77qppNCfm120iLPWbNWyvx0Usiv7euIPPuXVsr8
dFLIzzkYxDFfEMd8QRzzVTedFPJru5MWec6atVLmo5NCfhHXEXn2L62U+eik
kJ9zMIhjviCO+YI45qtuOinkF9FJizxnzVops9NJIb+o64g8+5dWyux0UsjP
ORjEMV8Qx3xBHPNVN50U8ovqpEWes2atlNnopJBf5HVEnv1LK2U2Oink5xwM
4pgviGO+II75qptOCvlFdtIiz1mzVsr0dFLIL/o6Is/+pZUyPZ0U8nMOBnHM
F8QxXxDHfNVNJ4X8ojtpkeesWStlOjop5LeM64g8+5dWynR0UsjPORjEMV8Q
x3xBHPNVN50U8ltGJy3ynDVrpaxPJ4X8lnUdkWf/0kpZn04K+TkHgzjmC+KY
L4hjvuqmk0J+y+qkRZ6zZq2UyXRSyG+Z1xF59i+tlMl0UsjPORjEMV8Qx3xB
HPNVN50U8ltmJy3ynDVrpYynk0J+y76OyLN/aaWMp5NCfs7BII75gjjmC+KY
r7rppJDfsjtpkeesWStlbTop5NfFdUSe/UsrZW06KeTnHAzimC+IY74gjvmq
m04K+XXRSYs8Z81aKU06KeTX1XVEnv1LK6VJJ4X8nINBHPMFccwXxDFfddNJ
Ib+uOmmR56xZK+WudFLIr8vriDz7l1bKXemkkJ9zMIhjviCO+YI45qtuOink
12UnLfKcNWul3Eknhfy6vo7Is39ppdxJJ4X8ut6/oGbmC+KYL4hjvuqmk0J+
XXfSIs9Zs1bKHXRSyC/DdUSe/Usr5Q46KeSXYf+CWpkviGO+II75qptOCvll
6KRFnrNmrRSdFPogy3WE/YtMdFLIL8v+BTUyXxDHfEEc81U3nRTyy9JJC2fN
ZKGTQn6ZriPsX2Shk0J+mfYvqI35gjjmC+KYr7rppJBfpk5aOGsmA50U8st2
HWH/IgOdFPLLtn9BTcwXxDFfEMd81U0nhfyyddLCWTNd00khv4zXEfYvuqaT
Qn4Z9y+ohfmCOOYL4pivuumkkF/GTlo4a6ZLOinkl/U6wv5Fl3RSyC/r/gU1
MF8Qx3xBHPNVN50U8svaSQtnzXRFJ4X8Ml9H2L/oik4K+WXev6DvzBfEMV8Q
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
SSE/+xfEMV8Qx3xBHPNVN50U8tNJ+8tZcxydFPJzHdFf9q84OinkZ/+COOYL
4pgviGO+6qaTQn46ab85a46hk0J+riP6zf4VQyeF/OxfEMd8QRzzBXHMV910
UshPJ+0/Z83t00khP9cR/Wf/ap9OCvnZvyCO+YI45gvimK+66aSQn05aB2fN
7dJJIT/XEXWwf7VLJ4X87F8Qx3xBHPMFccxX3XRSyE8nrYez5vbopJCf64h6
2L/ao5NCfvYviGO+II75gjjmq246KeSnk9bFWXM7dFLIz3VEXexf7dBJIT/7
F8QxXxDHfEEc81U3nRTy00nr46x5cTop5Oc6oj72r8XppJCf/QvimC+IY74g
jvmqm04K+emkdXLWvBidFPJzHVEn+9didFLIz/4FccwXxDFfEMd81U0nhfx0
0no5a56fTgr5uY6ol/1rfjop5Gf/gjjmC+KYL4hjvuqmk0J+OmndnDXPRyeF
/FxH1M3+NR+dFPKzf0Ec8wVxzBfEMV9100khP520fs6aZ6eTQn6uI+pn/5qd
Tgr52b8gjvmCOOYL4pivuumkkJ9OOgzOmmejk0J+riOGwf41G50U8rN/QRzz
BXHMF8QxX3XTSSE/nXQ4nDVPTyeF/FxHDIf9a3o6KeRn/4I45gvimC+IY77q
ppNCfjrpsDhrno5OCvm5jhgW+9d0dFLIz/4FccwXxDFfEMd81U0nhfx00uHJ
c9b8+q6firF0UsjPdcTw5Nm/NnT9VIylk0J+9i+IY74gjvmCOOarbjop5KeT
DlOes+acrVQnhfxcRwxTnv1rQ9dPxZp0UsjP/gVxzBfEMV8Qx3zVTSeF/HTS
4cpz1pyvleqkkJ/riOHKs39t6PqpaNBJIT/7F8QxXxDHfEEc81U3nRTy00mH
Lc9Zc65WqpNCfq4jhi3P/rWh66fiLnRSyM/+BXHMF8QxXxDHfNVNJ4X8dFLy
nDXnaaU6KeTnOoI8+9eGrp+KX9FJIT/7F8QxXxDHfEEc81U3nRTy00kp8pw1
52ilOink5zqCIs/+taHrp2ILnRTys39BHPMFccwXxDFfdRtyJz3vvPPGLshE
J2VFnrPm7lupTgr5uY5gRZ79a0PXT4VOCj1g/4I45gvimC+IY77qNtROuvvu
u4/udre7jV0ve9nLun6I8Cs6KavlOWvutpXqpJCf6whWy7N/bej0edBJIT/7
F8QxXxDHfEEc81W3IXbSU045ZWIj1UnJRidla3nOmrtrpTop5Oc6gq3l2b82
dPYc6KSQn/0L4pgviGO+II75qtvQOulXv/rVdRupTko2OilryXPW3E0r1Ukh
P9cRrCXP/rWhk69fJ4X87F8Qx3xBHPMFccxX3YbWSXfccUedlN7RSRknz1nz
8lvpkDvpDTfcMLr88stHZ5999ujUU08dnXjiiV0/JFiT6wjGybN/bVj6166T
Qn72L4hjviCO+YI45qtuQ+qkhx9++FSNVCclG52USfKcNS+3lQ6lk1566aWj
ww47bPT4xz9+dK973WvsvnX77bd3/VChwXUEk+TZvzYs9evWSSE/+xfEMV8Q
x3xBHPNVt6F00k9+8pNTN1KdlGx0UtaT56x5ea205k56/vnnj/baa6/RNtts
M/W+pZOSkesI1pNn/9qwtK9ZJ4X87F8Qx3xBHPMFccxX3YbSSWdppDop2eik
TCPPWfNyWmmNnfTkk08e3ec+95l5z9JJycp1BNPIs39tWMrXq5NCfvYviGO+
II75gjjmq25D6KT777//mmfK5T0MdVL6QCdlWnnOmuNbaU2d9PTTTx9tt912
c/VRnZTMXEcwrTz714bwr1UnhfzsXxDHfEEc8wVxzFfdau+kZ5999tgz5Un/
TiclE52UWeQ5a45tpTV00v+fvTuBtqwq70WfO/Beb/JuQu4zIyZqDJr7hvfZ
oJZm2CAqFqIkVwQsIiaKgCJiriCCJUoPAQRpbGjkULSCUJQgPUgVoID0JT2I
gAqUCIoCF0QUqPWcxTtwqHXW2t2ae8019++X8Y0kxam9197nfPs7c/5rrXX3
3XcXG2644Uj5qJyUlFlHMIh05teuUV+nnBTSZ35BPPoL4tFfEI/+ylvOOemv
f/3ryv3krbfeurjyyivlpHSCnJRBpbPXHC8r7XpOGv6tzgte8IKhc9H3ve99
xaabblpstdVW0Y4RRmUdwaDSmV+7RnuNclJIn/kF8egviEd/QTz6K28556T/
9m//Vrm/fN999xUXX3yxnJROkJMyjHT2muNkpV3OSQ888MC+89BVVlllxTmn
hx12WHHjjTdGOR6IxTqCYaQzv3aN8vrkpJA+8wvi0V8Qj/6CePRX3nLNSaem
pir3nPfdd98VX7N48WI5KZ0gJ2VY6ew1N5+Vdjkn7ScfXX311YtDDz20eOSR
R6IcA4yDdQTDSmd+7dr4a5OTQvrML4hHf0E8Vf1Vte+wZMmSFo4Susn8yluO
Oeltt91Wu/c87ayzzpKT0glyUkaRzl5zs1lpF3PS/fffv6+MdMGCBY0+L7TF
OoJR5Dq/5KSQPvML4tFfEI+cFOIxv/KWY076nve8p/Lz/5RTTnnm68K94eSk
dIGclFHluNfctZx00aJFPfPRD3/4w8WDDz7Y2HNC26wjGFWO80tOCukzvyAe
/QXxyEkhHvMrb7nlpHvvvXflZ/+mm276nK898cQT5aR0gpyUJuS219ylnPQn
P/lJ8Zd/+Ze1Gek+++zTyHNBSqwjaEJu80tOCukzvyAe/QXxyEkZp4ceemjF
OQHhHodz584t5syZ85yfr1VXXXXFn2+xxRYr7pEYvr7LzK+85ZST/uAHP6jd
g3700Uef8/VyUrpCTkpTctpr7lJOut5669XOp/D7IuTIOoKm5DS/5KSQPvML
4tFfEI+clHEIPzfz5s3r675SK1fITLu6x21+5S2nnLSuB88///zS18tJ6Qo5
KU3KZa+5KznpUUcdVTufvv71r4/8HJAq6wialMv8kpNC+swviEd/QTxyUmIK
Py+rrbbaUPnoyjV//vy2X87AzK+85ZKThlyzqu922223Wf+OnJSukJPStBz2
mruQky5fvrx46UtfatYwsawjaFoO80tOCukzvyAe/QXxyEmJIVwvd9jzR+sq
XKe3S9fiNb/ylkNOetppp1X22zrrrFP59+SkdIWclBi6vtfchZw03KOh7ndC
yJ11BDF0fX7JSSF95hfEo78gHjkpTVu6dOmK+4w2nZHOzEq7wvzKW9dz0gcf
fLC2126//fbKvysnpSvkpMTS5b3mLuSkL3rRiyrnzGzXg4fcWEcQS5fnl5wU
0md+QTz6C+KRk9K0sB9dl72E6/CGe46G8wTCz9N0TU1Nrbi2bj/X6e3KNXjN
r7x1PSf9yEc+Utljxx57bO3flZPSFXJSYurqXnPqOemRRx5ZOWM22mijoR8X
usQ6gpi6Or/kpJA+8wvi0V8Qj5yUGGa75m7IRvv9+Vm0aFHPvDSct5o68ytv
Xc5JFyxYUNlbW265Zc+/LyelK+SkxNbFvebUc9I111yzcsZccskls/6dX//6
18XixYuLww47rNh9991X/NnOO+9cfPWrXy3OOOOM4p577hn6eKAN1hHE1sX5
JSeF9JlfEI/+gnjkpMQQfk6mf2bmzp07VKYZ7kMarrFb9bMYstjUmV9562pO
Gq6nW/dvEJ588smejyEnpSvkpIxD1/aaU85Jb7311sr5ssYaazznax9//PEV
OWj4817XIgn12te+tviP//iP4r777hvq2GCcrCMYh67NLzkppM/8gnj0F8Qj
JyWWkI+Ga+uOImSldeeVpr73bX7lras56brrrlvZUxdffHFfjyEnpSvkpIxL
l/aaU85Jw++OVfPla1/72jNfF/LRfrLRqtppp52GOj4YF+sIxqVL80tOCukz
vyAe/QXxyEmJJWScTZiamqr8eQz/LWXmV966mJN+6Utfquyn8N/6JSelK+Sk
jFNX9ppTzknXXnvtyvnyk5/8ZEU/r7POOiNlpNP1hje8obj22muHOk6IzTqC
cerK/JKTQvrML4hHf0E8clK6oOqc0tSvvWt+5a1rOenll19e+dm+3nrrDfRY
clK6Qk7KuHVhrznVnHT58uXFf/7P/7lyvlx22WXFi170okYyUusbUmcdwbh1
YX7JSSF95hfEo78gHjkpXbDFFlvM+vMYru2bMvMrb13LSev2iO+5556BHktO
SlfISWlD6nvNqeakV1xxReVs+ad/+qfiBS94QeMZ6XQ5r5TUWEfQhtTnl5wU
0md+QTz6C+IZd066dOnSFfcdCrlXyLhmO08w/Hn471NTU41duzV14XUuWrSo
mD9//orXv+qqqz7zfoT3KPxZ+G/ha8Yt7C+H71k4hrYy86maa++mzPzKW5dy
0u23376yhxYuXDjw48lJ6Qo5KW1Jea851Zy07ve9utp5552LxYsXF3fddVdx
9913F8uWLSsuvfTS4sADDyzWWmutvh4jfB2kxDqCtqQ8v+SkkD7zC+LRXxDP
OHLSsD8ZMr6qa6f2qpCZDrLHOWfOnMrHamqvNDxO1XOE19qvkI+G1zczF+1V
4X0MueWwwvewn+9tOLbwWmJl5k0cs5yUNnUlJz3zzDMr+2ebbbYZ6jHlpHSF
nJQ2pbrXnGpOut122w20RliwYEFfj3vRRRcVb3nLW3o+3j777DPwMUMs1hG0
KdX5JSeF9JlfEI/+gnhi5qRhX7LqeqmDVsgRw78x70fdv0UfJV+cKTzOqFls
eIxB8tGVK+TB4fzcQfWTk4aMtC5vlpP2x/zKWxdy0vDzV9fHw5KT0hVyUtqW
4l5zqjnphhtu2NfvwGuvvXbx85//fODH32STTXo+9p133jnw40IM1hG0LcX5
JSeF9JlfEI/+gnhi5qRNZaQzq5+sNGR8VfljOBezCVUZYvjzfo6vyfx40Ky0
V07aT0aaSk7a1PczFvMrb13ISTfddNPKHg7n1zz88MND1VFHHSUnpRPkpKQg
lb3m43+484rjSTUnfdOb3tTz98/3vOc9I30vwn1O6x4/nNMKKbCOIAWpzK/p
rFROCukzvyAe/QXxxMxJw7006/YhQhYX7nk5s/rJBvs5hroccphzMGequ+Zu
rxy3nwwyvA/hXNPp6vW+DJOV1r2v8+bNa+z70JSq83fDe5My8ytvqeekRx99
9Mj/FqPp2mqrrRr8DkBvclJSkcpec8hKU81J/+Ef/qHnHHnggQdG+j7ccccd
tY//whe+cKTHh6ZYR5CKVOZXyErlpJA+8wvi0V8QT+z7k848rzOc+xfud9nr
MULWWJclhscJeWOdkBtW/f2QoY6i7pq7vY6rLr8Nj1v198Of112nN7xfvZ57
pqqMt+76tm3mpFXv2yD3gm2D+ZW31HPSf/mXf2k9F5WT0jY5KSlJZa/5M0fG
nV3D5qR/9Vd/VTtDwr/BbEKv+6BeeOGFjTwPjMI6gpQkM78WxJ9fclIYjfkF
8egviCd2ThryrZBrTvV5b9GV/27VcfTzeFVZa8gaR1H1uL3y16p8dZDzQcPX
VWWlg9x7tervz/bawp+F93vmPnPIZAfJZUcVfoZi7pfFYn7lTU4qJyV9clJS
k8Je84b775pkTlo3P9797nc39j24/vrra59rjz32aOy5YFjWEaQmhfm1wRjm
l5wURmN+QTz6C+KJnZOGXG+UPK3qGrD93JcyZHtN/3v0umvu1r034e/Nlm8O
c83cqqw0/Fm/7/Vsxz/b9X0HyV5jqTs3eJxZ7TDMr7zJSeWkpE9OSora3mvu
Yk56yCGHNPo9qLvG74Ybbtjoc8EwrCNIUdvzS04K6TO/IB79BfHEzklHVZdL
9soXQ4ZWde5lyF+HUXVOaK/cturc2KkhzrOtO45+c81+8oxxf6+rVL13o14/
eRzMr7zJSeWkpE9OSqra3GtONSet+r091OLFixt9/zfaaKPK53rta1/b6HPB
MKwjSFWb80tOCukzvyAe/QXxpJ6TBlXnlPaTCdZdu3eYcxGrrrlbdyxVWW84
f3NYVRlwOL5+9MoyUjiPNBj2/N1UmF95Sz0nDcLnTIx69atfXdmbL33pSyv/
HoybnJSUtbXXnGpO+pKXvGRsv/eFe9xXPdcLX/jCRp8LhmEdQcraml9yUkif
+QXx6C+Ipws56VTF9XP7OZ+w7pqtg2aBdZld3R5s1bmfo76XVRlwP/vBdRlp
v1nrOFRl5F3JW8yvvHUhJ43lxBNPrPwM2Xbbbds+PHiGnJTUtbHXnGpO+rrX
va5ytpx66qmNvu9Vv59PF7TNOoLUtTG/5KSQPvML4tFfEE8XctLwnKNkZVXn
gA6aB1btp/S6hm+4Ju/Kf6ef+6v2UpUfT/VxLd+6faF+/v44VH3fu3IuaWB+
5U1OKiclfXJSumDce82p5qTve9/7KmfLoYce2uh7fuCBB8pJSZp1BF0w7vkl
J4X0mV8Qj/6CeLqck/abNVblif2eezmtKm+tyxWrzkEN1/oaVdX70s95tlXv
R7iWbwpi3Fu2DeZX3uSkclLSJyelK8a515xqTvrZz362craE/9akPffcs/K5
wvV/oW3WEXTFOOeXnBTSZ35BPPoL4ulyTtrvv/Wuy9z6zSurrt/bK1esOgd1
0aJFfT1vL7M9dj/n2Va9n6lkkFXX2w3vd5f2u82vvMlJ5aSkT05Kl4xrrznV
nPSYY46pnC1N33Ph05/+dOVzvfnNb270uWAY1hF0ybjml5wU0md+QTz6C+Jp
OycNGWZ4zJAnhswy7IGEqjp3c5icNKi6l2e/56SGYxvm3M2qv9fUnu2wr6nq
/Rz0nq0x1N0vaiqRawL3y/zKm5xUTkr65KR0zTj2mlPNSW+55Zba3/uXL1/e
2Pv8nve8p/J5PvrRjzb2PDAs6wi6ZhzzS04K6TO/IB79BfG0kZOGczNDfthv
FtpETlp1Pmi/53bOdo/RUOFx64TMd9TXGON9GeW9iCk8f9Wx9XM94dSYX3mT
k8pJSZ+clC6Kvdecak4avOxlL6ucL2eccUZj7/ELXvCCyuf5+te/3tjzwLCs
I+ii2PNLTgrpM78gHv0F8YwzJ52amqrMG2PnpEFVLtsrf6vKWMPj9dL0642d
k7ZxXeVp4X2uuj5yeK/DucddY37lTU4qJyV9clK6KuZec8o56dZbb105Xzbe
eONG3tuLLrqo9vfoG2+8sZHngVFYR9BVMeeXnBTSZ35BPPoL4hlHThryr1h5
4SBCTlv1OHUZXNW1c/u5Rm0bGWkXc9Kwh12VkYY/73XebqrMr7zJSeWkpE9O
SpfF2mtOOSe99NJLa3/Hvemmm0Z+XzfffPPKx1999dVHfnxognUEXRZrfslJ
IX3mF8SjvyCe2DlpXTa5coUsNVynNpzfGTLImdVEThqy0KosbqrmvpdVGW8/
5ze2kZGOcn/SNnLS8D7WXYO5zXNcR2V+5U1OKiclfXJSui7GXnPKOWlQ93vu
RhttNNL7ed1119U+fj//DhLGwTqCrosxv+SkkD7zC+LRXxBPzJy0Lt+cPk8w
nKvZz2M2kZMGVeeGhnx2NlXX3O33Xpl1ezCxqi7z7XVc484ke2Wk/byWlJlf
eZOTyklJn5yUHDS915x6TnryySfXriFGuX/o2muvXfvYDz744NCPDU2yjiAH
Tc8vOSmkz/yCePQXxBMrJw1fV5ePDvpvtZvKScNeadVjzbaPWpWrLlq0aKzH
3bQUctLcM9LA/MqbnFROSvrkpOSiyb3m1HPSoFeeeeyxxw78mOHfOdY95u67
7z7SMUOTrCPIRZPzS04K6TO/IB79BfHEykmrrlU77L0mm8wbw7mjVed49vM6
+rmu7bSqHLDtPdu2c9JeGWm/5+umzvzKm5xUTkr65KTkpKm95i7kpFdffXVt
phlqp5126uux7rrrrmKDDTaofazXve51Ix0vNM06gpw0Nb/kpJA+8wvi0V8Q
T4ycdKrmnqTDZKR1xzOMquNbOf+suuZuOMe0X1WZbNv33GwzJ52UjDQwv/I2
SE663lbfLP71s8cW/7rtscX7PvlNOSmMiZyU3DSx1zxITjrs/Bo1Jw0OOuig
nlnp3/3d3xW77LJLcdlllxWPPfbYM3/3kUceKS688MLi05/+dLHKKqv0fJxL
L7105OOFJllHkJsm5pecFNL11PInimUP/7i47q7vFdfedWFx2y8vV0o1XKG3
Qo/d89Ctxe+eeLTttoesxMhJ582bN3K+2O/xDCuc19orx626v+og+61V1+0d
9LrDTWsrJ52kjDSwv5G3XjnpZ/c+vFh4+vzihpvWKG6//f95Tl13wzuKb31n
h+Ize051MicNwr85ma0gJXJScjTqXnOvnDTMr5PC/LqxPL+uv+HtxYmn7VBs
u1f9/GoiJw0+85nP9Mw4R61vfetbjRwrNMk6ghyNOr/kpJCWp5Y/VVx59xnF
IZdtWWxz+usau8a2Uqq/OvDijxQX3XF82x8FkIUYOWmMDK7pnLSf/HK2PC+c
HzqIqnNXQ5bcpjZy0knLSAP7G3mrykl3+8rBxTXXrlPaW66qK6/552KnAw7p
XE4KXSAnJVej7DVX5aS7HvTH+fXD9/Q9v65e+t5i5wNnn19N5aRBzKx0wYIF
jR0nNMk6glyNMr/kpJCOC+84rvWMSCn1bIWeBIbXdE5ada3aUTLNkK81/Zhh
z3S2xws5Xt1/H/RcqarHCdXmvu24c9JJzEgD+xt5my0nPe7bO/a9v7xyHXNy
ed0vJ4XRyEnJ2bB7zbPlpMd9e6eh59exJ+8cNScN+rkG76B19tlnN3qM0CTr
CHI27PySk0Iajr56+9YzIaVUuY5b+oW2Px6gs5rOScN/bzrTrDonc5THDKru
HRr2U2e75m64Vm/I+wZVlQ+2ee3dceakk5qRBvY38rZyTnrsol2G3mOeLjkp
NEtOSu6G2WteOSc95uTm51fTOWkQ/j3muuuuO3I+uummmzZ+bNA06whyN8z8
kpNC+469ZofWsyClVHWddN0ebX9MQCeNMycdJmMMqvLMUXPSqvw15Jez3WN1
2DyvLuedeT/UcRpXTjrJGWlgfyNvM3PSUc4jXbmOPGk3OSk0RE7KJBh0r3lm
TjrKeaQr11ELn33cGDnptPPOO6/YaKONBspG/+t//a/FZpttVlxxxRXRjgua
ZB3BJBh0fslJoV1HXrVd6xmQUqp3Hb90p7Y/LqBzms5J664zu2jRooGPb7bz
OpvKSYNwjujKj1mVyw6baYascLbnCRUyxGHz41GMIyftlZG2eT7tuNjfyNt0
TrrbV77e2B7zylmpnBRGIydlUgyy1zydk4b7kTY9v6az0pg56bRHHnmkOP30
04uddtppRW66xhprFKuvvvqKWnPNNYuNN9642G233Ypzzz23eOKJJ6IfDzTJ
OoJJMcj8kpNCey6645utZz9Kqf7rsp+d0vbHBnRK0zlpUJUJhvxxECGXrHqs
pnLS+fPn9/Vv0FdbbbWRnqfunNI2stLYOWmvjHRqwPu8dpX9jbyFnPTt/3Z8
8cPr5ja+zzydlcpJYTRyUiZJv3vN0znp0mvXiTK/QlY6jpwUcmYdwSTpd37J
SaEdTy1/ovXMRyk1eAH9i5GThmupjnoOYcjRemWkTeSkdee/Nn3uY931g0MO
O2xGGTLJQY8vZk7az7V2w/M0WW2ck9sP+xt5Cznp9l/6RpQ95um65Ud7tv0y
odPkpEyafvaaQ0663T6HR51fVy79j7bfCug06wgmTT/zS04K7bjiru+0nvco
pQavpcvOafvjAzojRk4azgOtyxzDvT+r9izDtXlnyxOrMtMm1OWX08/dRA5X
d/3dmeeWhoy4155u+D6sfB/VQTLOWDlpr4w0VjV9X9Wm2N/IW8hJv33WZ6Pu
M4e6//7Pt/1SobPkpEyiXnvNISdddOb2Y5hf89t+K6CzrCOYRL3ml5wU2vH1
H2zRet6jlBq8pq7Ypu2PD+iMGDlpUHdO6cxzKENGOV115x9W3ad02HuGzlR3
Tdzp529KP9cSnlkz359eee4g55TGyht7HaOclJxcc83dxa0/Wj36PrOsFIYn
J2VS1e01b7j/bsUtt84Z0/ySlcIwrCOYVHXz6wP77y4nhTF74qnHW896lFLD
1fZnvbntjxDojFg5aVPnFU5nlFVZZlP5WF122UQWO1N4vBjnXIZzS/slJx0P
+xt5u+YHS8eyxywrheHJSZlkVXvNO399tzHPL1kpDMo6gklWNb8+tdc+0XPS
RUd+r+2XD0m556FbW896lFLD168evbvtjxHohFg5aTBqVjrz/MjwvLN9TbhO
bxOq8r3w5zFM31O0yawwZL39kpOOh/2N+Kbf4zbq8vPPG+s+c6hlyz7b6mtW
qmt1++23r6i2j0OptuqEa3YrrZUPPGy8OenT82vb1t8LpbpUv/rVr1ZU28eh
VFt1/NW7lubX5/b4cvSc9Fv7n976a1cqpfrhzy5oPedRSg1ftyy7svXPEaW6
UFXrr6o86owzzhjo8ZctW1bssccexV/8xV/0nXltuummxU033fScxwn//2xf
Gx67iffhpS996ayPf9xxx0V9/8PrCq93kPdn5Xrta1+74n1Y+T2rq6a+vyvX
O9/5zlZy0lGPe9z9pfKoK847d+z7zLJSpQYrOalS5az0q98Yf04qK1VqsLKO
UKqcle6wx37Rc9KFXz6t9detVEp17V0Xtp7zKKWGLzmpUv3VuNZfIS/92te+
Vqy//vqlTDLkfOHPw38fJOtrqkLGNlv2Fo5z3McR8s6QNc6WN07/echVw9eF
rw/va9s/Q6q67G/Erzb96KIrW9lnDuUavNAf192Fp828huFB3/hCi/PLNXih
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
zqgtt9yyOOOMM4rf/OY3s/69p556qjj33HOLD3zgA33NvFNPPXXoY4RByUkh
ffbBIB79BfHoL4hHf+VNTso0WWm6RslJL7/88uL973//wNcilJOSuq7mpKGX
r7rqquLCCy8sLrroouKaa64pli1b1vjzTBJZabpGXUfcfffdz8ylv//7vy++
8pWvFI8//vhAj3HyyScXz3/+82tnXjgPFcZFTgrpsw8G8egviEd/QTz6K29y
UmaSlaZpmJz01ltvLT760Y8Ofc82OSmp60JO+thjjxUnnXRS8YlPfKJ47Wtf
W6yyyiqVPfdnf/Znxdve9rbii1/8YnHFFc5jHZSsNE1NrCPe8573FLvssstI
jxHOLe01937yk5+M9BzQLzkppM8+GMSjvyAe/QXx6K+8yUlZmaw0PYPmpFtv
vfXQ+aiclK5IOScN53F/7GMfG6kHQ2b6ne98p+F3LW+y0vSktI749Kc/Xdtz
xxxzTNuHyISQk0L6UppfkBv9BfHoL4hHf+VNTspsZKVpGTQnHTUjlZPSBSnm
pOEauhtuuGEjPThdm2yySfHb3/420ruYH1lpWlJaR1x33XW1vfb5z/ueMR5y
UkhfSvMLcqO/IB79BfHor7zJSakiK03HoDlpuMZn3V7w5z73ueI3v/mNnJRO
Sy0nDdfLbTIfnVnhmr233XZbxHczL7LSdKS2jqjrs3AOOIyDnBTSl9r8gpzo
L4hHf0E8+itvXc5JQ87z3e9+tzj44IOfuW/V7rvvXkxNTRWXXHJJ8cQTT0R5
3kkiK03DoDnpCSecULkHfMcddzzzdXJSuiyVnPRnP/tZ8c53vjNaRjpd/+N/
/I/i7rvvHsM7mwdZaRpSW0fU9djHP/7xtg+PCSEnhfSlNr8gJ/oL4tFfEI/+
ylsXc9KQg6611lo995Sf97znFRtssIH7u41IVtq+QXPSZcuWPacXQh9cddVV
pa+Tk9JlqeSkp512WvSMdLre9a53jeGdzYestH2prSPq+usLX/hC24fHhJCT
QvpSm1+QE/0F8egviEd/5a1LOemCBQuKv//7vx9qb/ltb3tbcdFFFzVyHJNI
VtquQXPSYPpn/7zzzuv5NXJSuiiVnDToNYP22GOPFdc5ePjhh0t/9+abby4O
PfTQ4u1vf3tf8+yQQw5p+q3Mmqy0XamtI+p665vf/Gbbh8eEkJNC+lKbX5AT
/QXx6C+IR3/lrSs56Qc/+MFGzsXZe++9G3jXJlMqe82TmJUOk5P2Q05Kl6WU
kx5++OGznvt59tlnD/Sajj/++L5mGYNJZX5NYlaa0jri6quvru0r17VmXOSk
kL6U5hfkRn9BPPoL4tFfeUs9Jw33fZszZ06j1y3cbrvtGnwHJ0sqe82TlpXK
SaEspZw0aOq8tGuuuab4q7/6q9r+POCAA4Z+/EmVyvyatKw0pXXE5ptvXtlT
6667btuHxwSRk0L6UppfkBv9BfHoL4hHf+Ut5Zz0V7/6VfGa17ym0Yx0unbZ
ZZeG38nJkcpe8yRlpXJSKEstJw3X1t1www2LBx54YOTXdvrpp9f25xvf+MaR
n2MSpTK/JikrTWUdEf7tQl1PnXvuuW0fIhNETgrpS2V+QY70F8SjvyAe/ZW3
lHPS9773vT3zzvXXX7844ogjigsuuKD43ve+Vxx99NHFJpts0ldWevLJJzf8
bk6OVPaaJyUrlZNCWWo5adPCfKvr0bvuaube35Mmlfk1KVlpCuuII488sraX
Nttss1aPj8kjJ4X0pTC/IFf6C+LRXxCP/spbqjnprrvuWrun9cpXvrK46KKL
Kv9+yJTmzZtX+xgvetGL/GyPIJW95knISuWkUJZ7Tnrqqaf6tz6RpDK/JiEr
bXMdEe7d8LGPfay2j17/+tcXjz/+eCvHx+SSk0L67INBPPoL4tFfEI/+yluK
Oem1115bu6f1j//4j8Uvf/nLvh7rU5/6VO1juVfpaFLZa849K5WTQlnuOenv
fve72h4N1/lleKnMr9yz0nGvI+67777ipJNOKv71X/+153VFXvWqVxV33nnn
2I4NpslJIX32wSAe/QXx6C+IR3/lLcWcNNzfrW5f68c//vFAj/fud7+79vHu
vvvugR6P50plrznnrFROCmW556TB6quvXtmj4d8BMZpU5lfOWWmsdcQ666zz
TIXf897ylrcUL3nJS/q670Ko9dZbr5F7CcMw5KSQPvtgEI/+gnj0F8Sjv/KW
Wk4aspm6fa0FCxYM/Bqvv/762sf84he/OPBj8lyp7DXnmpXKSaFsEnLSdddd
t7JH3VOxGanMr1yz0hjriJCN9puHrlx//dd/XRxyyCGNHg8MSk4K6bMPBvHo
L4hHf0E8+itvqeWkH/nIR2r3t4ZVd/3dF7/4xUM/Ls9KZa85x6xUTgplk5CT
brDBBpU9utVWW7V6bDlJZX7lmJWmkpO+4hWvKL70pS8Vv//97xs9FhiGnBTS
Zx8M4tFfEI/+gnj0V95Sy0nr9rgWLVo09Ou84YYbah/7nHPOGfqxeVYqe825
ZaVyUiibhJx07ty5lT26yy67tHpsuUllfuWWlaaSk07XRhttVJx11lmNHg8M
Sk4K6bMPBvHoL4hHf0E8+itvKeWkhx56aOW+1t/93d+N/Frf9ra3VT7+Jz/5
yZEfn6elstecU1YqJ4WySchJ/+Ef/qGyR48++uhWjy1HqcyvnLLS1HLS6XrH
O95RfP/732/0uKBfclJIn30wiEd/QTz6C+LRX3lLKSetuw/bNttsM/JrDddb
q3r8l7/85SM/Ps9KZa85l6xUTgplueekDzzwQG2PLl26tLVjy1kq8yuXrDTV
nHS6dt1110aPDfohJ4X02QeDePQXxKO/IB79lbdUctI//OEPxSqrrFK5j3Xu
ueeO/FqvvPLK2r2yO++8c+Tn4Fm/TGSvOYesVE4KZbnnpAsXLqzsz7/8y79s
7bgmgay0OeNeR4RZecoppxRbb71131np5ptvPrbjg0BOCumzDwbx6C+IR39B
PPorb6nkpBdccEHtHtZjjz3WyOute44TTzyxkefgWbLSZshJoSz3nPSDH/xg
ZX9uvPHGrR3XpJCVNqPtdUS4t/0b3vCGnlnppz/96daOkckjJ4X0tT2/IGf6
C+LRXxCP/spbKjlp3TVx58yZ09jrffOb31z5PDvssENjz8OzZKWjk5NCWc45
6V133VXbn9/+9rdbOa5JIysdXSrriPA7Xq+s9Nhjj237MJkQclJIXyrzC3Kk
vyAe/QXx6K+8pZKTfuhDH6rct9p0000be73h2mpVz7P++us39jw8l6x0NHJS
KMs5J912220re3O11VZr5Zgmlax0NCmtIw488MCeWSmMg5wU0pfS/ILc6C+I
R39BPPorb6nkpK9//esr96z22Wefxl7vXnvtVfk8r3nNaxp7HspkpcOTk0JZ
rjnpLbfcUtubBxxwwNiPadLJSoeX2jqi7t8ghArXN4HY5KSQvtTmF+REf0E8
+gvi0V95SyUnXXXVVcdy39Djjjuu8nn++3//7409D7OTlQ5HTgplueakG2yw
QWVfvuxlLxv78fA0WelwUltH/OEPfyhe+MIXVvbYq171qrYPkQkgJ4X0pTa/
ICf6C+LRXxCP/spbCjnpQw89VJvXXHzxxY293vPPP7/2uX73u9819lzMTlY6
ODkplOWYk05NTdX25dFHHz3W4+G5ZKWDS3Ed0etepbfddlvbh0jm5KSQvhTn
F+RCf0E8+gvi0V95SyEnDftRdftVP/rRjxp7vddcc03tc917772NPRfVZKWD
kZNCWW456c0331w8//nPr+zJf/7nfx7bsVBNVjqYFNcRF1xwQe38O+mkk9o+
RDInJ4X0pTi/IBf6C+LRXxCP/spbCjnp5ZdfXrtfdf/99zf2en/84x+PLZOl
XipZaRf2muWkUJZbTrrGGmtU9uMqq6yy4r6lpEFW2r8U1xHh98q6+ecepcQm
J4X0pTi/IBf6C+LRXxCP/spbCjlpr2vhPvbYY4293mXLltU+13XXXdfYc9Gb
rLQ/clIoyykn/fjHP17bj4cccshYjoP+yUr7k+I6Yvny5bX99oUvfKHtQyRz
clJIX4rzC3KhvyAe/QXx6K+8pZCTnn766bX7VU3qdQ7B1VfbUxg3WWlvclIo
yyUn3XPPPWt7cdNNN41+DAxHVtpbiuuIxx9/vLbndtxxx7YPkczJSSF9Kc4v
yIX+gniq+qtq7bNkyZIWjhK6yfzKWwo56SmnnDK2nPRXv/qVnDRBstJ6clIo
yyEnnZqaqu3Df/zHfyyefPLJqMfAaGSl9VJcR9x00021fXfQQQe1fYhkTk4K
6UtxfkEu9BfEIyeFeMyvvKWQk37nO99J5nzSa6+9ttHno3+y0mpyUijrek56
zDHH1PZgqFtvvTXa89McWWm1FNcR4TrWdX135plntn2IZE5OCulLcX5BLvQX
xCMnhXjMr7ylkJOee+65tftVTz31VGOv95577ql9rltuuaWx52JwstLZyUmh
rMs5aT8Z6QUXXBDluYlDVjq7FNcR73jHO2p77xe/+EXbh0jm5KSQvhTnF+RC
f0E8clLGKfz87LvvvsW8efOKuXPnFnPmzHnmZ2u11VZb8WdbbLHFiq+Jsa89
buZX3lLISS+55JLa/apHH320sdd722231T7XXXfVHyvxyUrL5KRQ1tWctJ+M
9Lzzzmv8eYlPVlqW2jrinHPOqe29t771rW0fIhNATgrpS21+QU70F8QjJyW2
cP+okIv22tearUJuumjRorZfwtDMr7ylkJPeeOONtT107733NvZ6w/1H657r
4Ycfbuy5GJ6s9LnkpFDWxZy0n4zUNT+7TVb6XCmtI8I96l/xilfU9t/BBx/c
9mEyAeSkkL6U5hfkRn9BPHJSYgnnhIZzRIfJR2fLSx966KG2X9LAzK+8pZCT
huub1fVOyFGbEs7RqXqe5z//+Y09D6OTlT5LTgplXctJjz766J6/K5566qmN
PR/tkZU+a5R1xNZbb11sttlmxY9+9KORjyPM0Le85S21/ffiF7+4WL58+cjP
Bb3ISSF99sEgHv0F8chJaVrIM5vKR2fWqquuWixdurTtlzcQ8ytvKeSkwSqr
rFLZN4sXL27s9dadyxN6nrTISp8mJ4WyLuWk/WSkCxcubOS5SIOs9GmjrCNm
9sdGG2009LnWRx11VF/rtHD9IBgHOSmkzz4YxKO/IB45KTHEyEmns9IunVdq
fuUtlZz05S9/eWXPhP2tpuy5556Vz/P2t7+9seehObJSOSnMpis5aT8Z6Te/
+c0G3hFSIysdfh1x1llnVfbLpptuWixYsGDFvz2d7bEfeOCB4sILLyx22WWX
4pWvfGVf67OtttqqiZcLfZGTQvrsg0E8+gvikZMSw/z582f9+Qn3KQ3X4w0/
RzPzzrBWD/ch3WKLLVZkoXVr8fAYXWF+5S2VnHSdddap7Jcdd9yxsdcb9taq
nidc2400TXpWKieFsi7kpP1kpE3+WyDSM+lZ6bDriE022STKv1edrdZcc80I
rxyqyUkhffbBIB79BfHISYkh7EnPPAc0ZKP9ngcavi7cj7RuTd6Vn0PzK2+p
5KSf+cxnKntlgw02aOz1vulNb6p8nv3226+x56F5k5yVykmhLPWctJ+M9PDD
D2/wHSFVk5yVDrOO+P3vfz+2jDT8O72HH3440quH2clJIX32wSAe/QXxyEmJ
Zc6cOQPloysL55ZW/RyG/9YF5lfeUslJx3Xf0Lq9svPPP7+x5yGOSc1K5aRQ
lnJO2k9GevDBBzf8jpCySc1Kh11HjCMj3XbbbSO8YuhNTgrpsw8G8egviEdO
Siyj3kc0/P2q+5yGc1S7wPzKWyo56a233lq7l9VERhTuZVX3HA8++ODIz0F8
9/9yl9b3mce91ywnhbJUc9ITTjihZz5z0EEHRXhHSN0kZqXDriN+/OMfF5/4
xCei5KPhfvT2A2iTnBTSZx8M4tFfEI+clJSF81GrfhZHzWHHwfzKWyo5afDS
l760sleOOOKIkV/rPvvsU/n4b3zjG0d+fMZn0rJSOSmUpZiTTk1N9cxoXGt3
sk1aVjrqOuL+++8vDjzwwOJtb3vbyPnoBz7wgeLMM89s8NXBcOSkkD77YBCP
/oJ45KSkbOnSpZ3+WTS/8pZSTlp3ner11ltv5Ne65pprVj7+F77whZEfn/Ga
pKxUTgplqeWkhx56aM+c5qSTTor4jtAVk5SVNrmO+PnPf15861vfWnFP+7XX
Xrt42cteVjz/+c8v9dl/+S//ZcV/C/ce3X777YtTTjnFWoakyEkhffbBIB79
BfHISUldl38Wza+8pZSThn/jX7e/fM899wz9Ontd1/eyyy4b+rFpz6RkpXJS
KEspJ/3qV7/aMyM955xzIr8jdMmkZKXjWEc88sgjK847DWXNQhfISSF99sEg
Hv0F8Yw7Jw3nB4ZrqYZzn+bOnTvr/SfDn4f/Hq6/1YVrqzYhvM5FixYV8+fP
X/H6w/03p9+P8B6FPwv/LXzNuIX95fA9C8fQRk5Z9bMYfpZSZ37lLaWcNHjx
i19c2S877bTT0K8znE9Q9bivfvWrh35c2jcJWamcFMpSyUkPOOCAnhlpzKK7
JiErtY6AMjkppM/8gnj0F8Qzjpw07E+GjG+2TLSfCpnpIHucc+bMqXyspvZK
w+NUPUd4rf0K+Wh4fTNz0V4V3seQWw4rfA/7+d6GYwuvJVZm3o+697kLzK+8
pZaT7rjjjrWfHffee+/ArzGch/q85z2v8jH333//gR+TtOSelcbKSQ8++ODK
gtSlkJPW3YNeTko/cs9KrSOgTE4K6TO/IB79BfHEzEnDvmTdPfMGqZAjhvNL
+xG+rupxRskXZ6rb2+l3PzY8xiD56MoV8uBhzqnsJycNGWld3jyunLTqexnO
be0C8ytvqeWky5Ytq+3ZTTbZZODXGP5O3efyo48+OvBjkp6cs9JYOSl0WQo5
6frrry8nZWQ5Z6XWEVAmJ4X0mV8Qj/6CeGLmpE1lpDOrn6w0ZHxV+WM4F7MJ
VRli+PN+jq/J/HjQrLRXTtpPRjqunHTla/0O8nOQAvMrb6nlpEHdNXJDDXL+
Z697xu21116DvmUkLNesVE4KZXJSOWlOcs1KrSOgTE4K6TO/IB79BfHEzEnD
vTTr9iZCFhdysJnVz55GP8dQl0OOel/LumvB9srv+skgw/sQzjWdrl7vyzBZ
ad37Om/evMa+D6OoOme3qax7HMyvvKWYk4aft7/927+t7d2999675+Pst99+
tY/xmte8Zti3jYTlmJXKSaFMTionzU2OWal1BJTJSSF95hfEo78gntj3J515
XmfIt8L9Lns9Rsga67LE8Dghb6wTcsOqvx8y1FHUXXO313HV5bfhcav+fvjz
uuv0hver13PPVJXxVp1rOu6ctO7aySF/7wrzK28p5qTBCSec0LN/3/WudxXf
/va3i9/+9rfP/L3wGbJw4cJirbXW6vn3v//97zf5VpKQ3LJSOSmUyUnlpDnK
LSu1joAyOSmkz/yCePQXxBM7Jw25YMg1h7lOal2m2M/jVWWtIWscRdXj9spf
q/LVQc4HDV9XlZUOcu/Vqr8/22sLfxbe75n7zCFPGSSX7Vd4jrrzWUPO3iXm
V95SzUmD7bbbzr4yQ8spK5WTQlkKOWlw/vnnt1rk55cZZaXWEVAmJ4X0mV8Q
j/6CeGLnpCHXGyVPq8rM+rn2aoxzEuuuuVv33oS/N1u+Ocw1c6uy0vBn/b7X
sx3/bNf3HSR7HVY45vD96HXP1q5lpIH5lbeUc9Jgk002aTwj3XHHHRt8B0lZ
LlmpnBTKUslJIYZcslLrCCiTk0L6zC+IR39BPLFz0lHV5ZK98sWQv1Wdexny
12EMe8/MqgxwmPNs646j31yznzyk6e/1yveiDRXet17HEb6HXbrW7kzmV95S
z0mDrbbaqrGM9Mtf/nJD7xxdkUNWKieFMjkpucshK7WOgDI5KaTP/IJ49BfE
k3pOGlSdU9pPJlh3juIw57lWXXO37liqst6QEw6rKgMOx9ePXnlIjPNIB81k
wuuru2drF5hfeetCThocdthhxX/7b/9t6Hz0DW94Qyuf/aSh61mpnBTK5KRM
gq5npdYRUCYnhfSZXxCP/oJ4upCTVl0/t9f9QINwzmlTWWDdua11e7BV536O
+l5WZcD97AfXZSL9Zq2DGjQjDd/3LmekgfmVt67kpMF999234p6lf/EXf9F3
H77pTW8qFixY0Mjz021dzkrlpFAmJ2VSdDkrtY6AMjkppM/8gnj0F8TThZw0
POco52NWnQM6aB5YlXf2uobvbNeW7ef+qr1U5cf9XMu3LhsZ9lrAozxnXV4a
8uCu7nGbX3nrUk467cknnyxOPfXUYtttty3WWWed4tWvfvWKXnvlK19ZvOMd
7yg233zz4uCDDy5uvvnmRp+X7utqVionhTI5KZOkq1mpdQSUyUkhfeYXxKO/
IJ4u56T9Zo1VeWK/515Oq8pb63LFqnNQ58+f3/fzVql6X/o5z7Yul4xlmJx0
ZsW4FnBs5lfeupiTwii6mJXKSaFMTsqk6WJWah0BZXJSSJ/5BfHoL4inyzlp
qH5U3ctzkLyy6vq9vXLFqnNQFy1a1Nfz9jLsebZV72evc2ObFr434fsb3qeq
+9DOrJBVd+lavOZX3uSkTKKuZaVyUiiTkzKJupaVWkdAmZwU0md+QTz6C+Jp
OyedmZOFzDJkfKGqzt0cJicNqu7l2e85qeHYhjl3s+rvNbVnO+xrSvWczfDz
UJUtdzErNb/yJidlUnUpK5WTQpmclEnVpazUOgLK5KSQPvML4tFfEE8bOWk4
NzPkh/1moU3kpFXng/Z7buds9xgNFR63Tsh8R32NMd6XUd6LcQh72nU/H/3e
m7Zt5lfe5KRMsq5kpXJSKJOTMsm6kpVaR0CZnBTSZ35BPPoL4hlnThru41mV
N8bOSYOq3K3XOaFVGWt4vF6afr2xc9I2rqtcJZwzWpeV1t0XNhXmV97kpEy6
LmSlclIok5My6bqQlVpHQJmcFNJnfkE8+gviGUdOGnLGWHnhIEKuVvU4dddx
rbp2bj/XqG0jI80lJw3q7i3b7zWT22R+5U1OCulnpXJSKJOTQvpZqXUElMlJ
IX3mF8SjvyCe2DlpXTY5W+4Vrqcazu8MGeTMaiInrcvc6s5NrMp4+7lHZhsZ
6Sj3J00tJw3qvv+pXCe4ivmVNzkpPC3lrFROCmVyUnhaylmpdQSUyUkhfeYX
xKO/IJ6YOWldvhUqZJbhXM1+HrOJnDSoOje06n6XVdfc7XWt3l7HvXIO3GT1
cz3aLuWkIY+uOt7w/UyZ+ZU3OSk8K9WsVE4KZXJSeFaqWal1BJTJSSF95hfE
o78gnlg5afi6uny0n2vW9nM8gwp7pVWPNds+alWu2u95jE0dd9O6lJMGIcce
JN9OhfmVNzkpPFeKWamcFMrkpPBcKWal1hFQJieF9JlfEI/+gnhi5aRV16oN
GWk4R3NQTeaNVZnbbNntbK9jkPtizpkzp+9Mdpy6lpM2de3lcTO/8iYnhbLU
slI5KZTJSaEstazUOgLK5KSQPvML4tFfEE+MnLTunqTDZKR1xzOMquNbOf+s
uubuINd6rcpk284j5aTjYX7lrd+c9Kbn7VZc8tJ9iu++at/ivNfsN1BdffoN
xdKb7lOqU7XkkhOL08/79NjrjO/+e3HRpR8ubvvx/7tir/mOuzYrLr7x9BV1
26+uVEr9//Xjk87tf369ZO+h5tcVX/te659FSg1aF1yazvy67q7vrai2Py+U
SqpOPFtOCol64smnijvvebC47JqfFpde/ZNi6c33KaUartBbocd+uuyh4qnl
y9tue8hKjJx03rx5I+eL/R7PsMJ5rb1y3KpsbpDzUqqu2zvodYebJicdDzlp
3upy0uv+dI/imHd9tdh63pHF2/71eKXUGOvt/3Z88YmdjiqOOXmX4uyrXl5s
fdprlVIz6rDjPmJ+KZVgzZxf55hfSpXqG8dtIieFhDz51PLinO/fWXx2nwv+
OMNOaH2OKjVpte3eS4rTlvy4EJnC6GLkpDEyuKYzsn7yy9mumTvo/TCnKs5d
DVlym7qWk1Zl74NcA7kNctK8VeWkR839Wuu/Kymlnq2dD9+z9X09pVKqqpzU
/FIqrTK/lHpuyUkhHSeedUvrc1Ip9XRt8O+nFmd97462Pxag05rOSauuVTtK
pvnQQw81/pjhnNDZHi9ko3X/fWpqqpHnGfS81KZ1LSetut/toLn1uMlJ87Zy
TnrNn+9ZfG7DBa3/fqSUKtfH9jis9b09pVKplXPSH/5xfs03v5RKsswvpZ4t
OSmkYZevXtL6fFRKleuAo69q++MBOqvpnDT896Yzzama+52OoureoSG/nO06
r+FavSGzHdRs56WufO7quHUpJ637mWr7+sW9yEnzNjMnDRnpFhsd3frvREqp
6tpyr4Nb399TKoWamZMu/eP8+oT5pVTSteXeh7T+uaFUCiUnhfbtccgPWp+L
Sqnq+vKRV7b9MQGdNM6cdJiMMajKM0fNSacq8teQvc12ndctttii0ecJNfN+
qOPUpZy07vvf1vvXLzlp3mbmpJ/7gPNwlOpCbbHnoa3v8SnVds3MSZ1HqlQ3
aos9nVeqlJwU2vX5L1/U+jxUSvWuvb5xWdsfF9A5TeekddeZXbRo0cDHN9t5
nU3lpEE4R3S2a7k2mcmFfHi25wkVzjUdNj8eRVdy0rrvf+rX3A3kpHmbzkkX
rO1+bkp1qbb7xi6t7/Mp1WZN56RHuh+pUp2q7b6xc+ufH0q1WXJSaM/Uyde1
PgeVUv3XeZf+pO2PDeiUpnPSoCoTHDTXCrlk1WM1lZPOnz+/9vGnK9wfcxRT
NeeUtpGVxsxJw3m3Id8c9TX1yshTy3RnIyfNW8hJr/2/9mj9dx+l1ODV9j6f
Um1WyEmv+1PzS6kuVtufH0q1WXJSaMevH3ys9fmnlBq8gP7FyElDTlb19/u9
n+TU1FTPjLSJnLTu/NdhjrtO3fVjQw47bO4X8shBjy9m9jj9fQv/O/wsDHoe
bvie1L1XocJ1kbtATpq3kJMe5VwcpTpZ2x0xv/W9PqXaqpCTHjP3q633oVJq
8NpugfmlJrfkpNCORef9qPX5p5QavELvAv2JkZOGXKxXxhWysNmEa/POlpFV
ZaZN6JXJhedu4nzPuuvvzjy3dGpqqvL9mRa+DyvfR3WQjDNWTjpVcd5syIFD
Zhr+e3iOme9neK3Tr6fX96Kt82+HJSfNW8hJ//e8o1r/vUcpNXh9ZMcjWt/r
U6qtCjnpNh84svU+VEoNXpuYX2qCS04K7dhunwtan39KqcFr6/9Y3PbHB3RG
jJw0qDundGZ2FnKx6ar6uunruM7234a9Z+hMUzXXxJ1+/qb0cy3hmTXz/emV
IQ5yTmmsnHRmbhujupSRBnLSvD20+PbWf+dRSg1Xa33EtQvV5NYhx25avD2B
PlRKDV7ml5rkkpPC+D3y6O9bn31KqeHq7R/5VtsfIdAZsXLSkGWFTGvUXGw6
o5yqyDKbukdlXXbZRBY7U3i8Jt6blWuQa9HGyEnD9zxmRhpeX5cy0kBOmrfb
zrqx9d95lFLD1/YnbdD6fp9SbdQ+h3629f5TSg1f2y80v9Rk1jhy0p9/+9K2
l5mQlLt/8X9an3tKqeEr9DDQW6ycNBg1K515fmR43tm+JlyntwlV52qGP49h
+p6iTeaIIevtV4ycNAh/v59r5w5S4bzjpr7P4yYnjS9ct7mtWrzgwtZ/31FK
DV+fP36z1vf7lGqjdv3KF1vvP6XU8DX/hE1b/xxRqo0aR0563bGntbrGVCq1
Ou9717c+95RSw9eSi29o/XNEqS7U7bffvqJW/vOqzOr4448f6PFvuOGGYocd
dij+/M//vO9cbOONNy4uueSS5zxO+P9n+9rw2E28Dy95yUtmffxDDz006vsf
Xld4vYO8PyvXq1/96hXvw8rvWV019f2te11bbrll5fvaT62xxhrFPvvsE/X9
j11V/aXyqMVHXdT67ztKqeFr/vH2mdVk1i5f2bH1/lNKDV9yUjWpdeg3Pxw9
J732eDmpUjPrrCXXtj73lFLD1wWX3Nj654hSXahx5TghLw2Z17rrrlvKzkLO
F/48/PdBsr6mKmSDs+V04TjHfRwh7wz5YKjZcsNQIVcNXxe+Pryv436/Bq3w
PQ1588zXNvNnIPzf038eviZ8bRdeVz8lJ41fbbrjsp+0/vuOUmr42n7h+q3v
9ynVRu14xCdb7z+l1PC1/cL3t/45olQb9eWT1ouek9539Y2trjEhNXfc9WDr
c08pNXwtu++Rtj9GoBNcF7T6mrtTU1NtHxodp7/y9tQTTxZrJfA7j1Jq8Frr
o8e3vtenVJv1rg+134dKqcHrXeaXmuDa5rTXFTf/6W7RMtIb/mb3tpeYkJw/
/OHJ1mefUmq4Wnuzk9r+CIHOmPQcZ2pqqvKemDCqSe+vSbDDZie0/nuPUmrw
+ujOU63v9SnVZv3vjx7Zeh8qpQavTc0vNeF18Sf2ipaTXrnJvm0vLyFJ/77H
+a3PP6XU4LX9vhe2/fEBnTHJOc5DDz1UrLrqqs4lJZpJ7q9J8d2DLmz99x6l
1OC1/ZGfbX2fT6k2a9c99229D5VSg9f2R23b+ueHUm3WcVP/Hi0nvWlqUdvL
S0jSyefc2vr8U0oNXmdedEfbHx/QGZOc41Rdb3fOnDltHxqZmOT+mhjLl7f+
e49SavBqe49PqRSq7T5USg1ebX9uKJVCxcpJgdn99ndPtD7/lFKD1b985vS2
PzqgUyY1x9liiy1mzUhDLVmypO3DIxOT2l+T5jTnlCrVqdru8B1b399TKoXa
fs/9Wu9HpVT/td3hX2z9c0OpFOqIoz/WeEZ63YHHtb2shKSddPYtrc9BpVT/
tfiyn7b9sQGdMok5Tl1GGv4bNGUS+2tS7f2pha3/DqSU6l2f3Pvrre/tKZVS
fWbLI1rvS6VU79pyn4Nb/7xQKqX67k67N3df0k8d0PZyEjph/n4XtT4PlVK9
65ATlrb9cQGdM0k5TrgfaV1GGu5VGr4GmjJJ/UVRHPDxb7X+u5BSqrq22vdr
re/pKZVizf/k4a33p1Kquj5lfik1a313xz1Gzkiv2vqgtpeR0Bn/59HfFx/f
6dzW56JSqrq+dtw1bX9UQCdNSo4TrqUb7jtalZG63i4xTEp/8ayv/PvJrf9O
pJQq1xbOI1Wqtr64paxUqRTr43uZX0rV1eId9hzhPNID214+QueErNR5pUql
WV+RkcLQcs9xfvrTn9aeQzpdU1NTbR8qGcq9v5jd2V+5qJi38bGt/36klHq6
tnE/N6X6qt133b/4lw+aX0qlUtsc/oXWPxeU6kKdeOhnBs5Il3756LaXjdBp
J57lfqVKpVJb/8fi4uobf9H2xwJ0Ws45zty5c3vmo6Hmz5/f9qGSqZz7i3pP
PrW8+M6BFxSf3dy1eJUad73ro8cXm+0yVXzh6M+2vm+nVBdrh932L7b86JGt
97JSk1bml1Kj1bFHbFVc/Mm9iptW3a2Ui974f+9eXPXhfYsbD1tonQ4N+d3j
TxTf/u5txTZ7LSneuYm9D6XGXfsdeWVx6dJlbX8UQBZy/v1w3rx5ziOlVTn3
F/1bvrwofvbDe4rrz725uO7sm4rrv397cd2t9z9Tly396Yqa+WdKqf7rgmuu
Kc65bHFx1jXXFpfe9L3ijgeWPlOX3HT2ipr5Z0qpfuuHxWVnfb9YvODcYvER
5xXfP+Wy5/Se+aXUaLXk6quKs6++dtb5dcPdl6yo9j8HlOpm3XnZD4o7TltS
3PmdJcUvrrjuOesz63SI4+5f/J/iymt/5vdDpSJV6K2rrr+ruP+B37bd7pCd
nH8/3HfffSvz0VVXXVVGSnQ59xfN8XMC8YTr74cCmmd+QTz6C+LRXxCP/oJ4
9BfEk3N/hX3R2TLScD1ee6aMQ879RXP8nEA8clKIx/yCePQXxKO/IB79BfHo
L4gn9/5abbXVnslH58yZUyxZsqTtQ2KC5N5fNMPPCcQjJ4V4zC+IR39BPPoL
4tFfEI/+gnhy769w7d358+cXS5cubftQmEC59xfN8HMC8chJIR7zC+LRXxCP
/oJ49BfEo78gHv0F8egv+uHnBOKRk0I85hfEo78gHv0F8egviEd/QTz6C+LR
X/TDzwnEIyeFeMwviEd/QTz6C+LRX/9fe3ZMAwAAwzCMP+tS6JPPxrCox6Cj
L+joCzr64uFOoONPCh37BR19QUdf0NEXdPQFHX1BR1883Al0/EmhY7+goy/o
6As6+oKOvqCjL+joi4c7gY4/KXTsF3T0BR19QUdf0NEXdPQFHX3xcCfQ8SeF
jv2Cjr6goy/o6As6+oKOvqCjLx7uBDr+pNCxX9DRF3T0BR19QUdf0NEXdPTF
w51Ax58UOvYLOvqCjr6goy/o6As6+oKOvni4E+j4k0LHfkFHX9DRF3T0BR19
QUdf0NEXD3cCHX9S6Ngv6OgLOvqCjr6goy/o6As6+uLhTqDjTwod+wUdfUFH
X9DRF3T0BR19QUdfPNwJdPxJoWO/oKMv6OgLOvqCjr6goy/o6IuHO4GOPyl0
7Bd09AUdfUFHX9DRF3T0BR198XAn0PEnhY79go6+oKMv6OgLOvqCjr6goy8e
7gQ6/qTQsV/Q0Rd09AUdfUFHX9DRF3T0xcOdQMefFDr2Czr6go6+oKMv6OgL
OvqCjr54uBPo+JNCx35BR1/Q0Rd09AUdfUFHX9DRFw93Ah1/UujYL+joCzr6
go6+oKMv6OgLOvri4U6g408KHfsFHX1BR1/Q0Rd09AUdfUFHXzzcCXT8SaFj
v6CjL+joCzr6go6+oKMv6OiLhzuBjj8pdOwXdPQFHX1BR1/Q0Rd09AUdffFw
J9DxJ4WO/YKOvqCjL+joCzr6go6+oKMvHu4EOv6k0LFf0NEXdPQFHX1BR1/Q
0Rd09MXDnUDHnxQ69gs6+oKOvqCjL+joCzr6go6+eLgT6PiTQsd+QUdf0NEX
dPQFHX1BR1/Q0RcPdwIdf1Lo2C/o6As6+oKOvqCjL+joCzr64uFOoONPCh37
BR19QUdf0NEXdPQFHX1BR1+9AU/4w1Y=
    "], {{0, 493.}, {933., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlgdUVMcax+fe7Y22C9JZekc6C0hdqoD0KirL7rLUBZaOXQlGIKKoiIAi
SKgKllAkFsSChSCggD0gQUCJwYIooLy7EmPy3jnvnfed8935zXdnvpk735xz
/8qRiX5RMAAgBY88/FgZDgIBK8tfDOkE8lNieHwux52fyuVxBYxICAlGk5AH
IEWzkpLiYWRUAj9V4OfqSA8JDaPjRgEMxIEYUANyLHZKkoOPj6dw9Nf2n/Z+
CAgTgrv6wlz/+f6/mjiHm8IGAPJBOJGTwk5AuBNhJ3aSIBUAGI2wakZqkpC1
EKYJkA0ivErIvGUWzqVFLjPny5gAPybCmQDgySyWgAcAMQeJ09PZPCQPsRph
Qz4nho/wPYRt2dEsZB6JhrBeQkKikO0R1or8Wx7eP3JG/pWTxeL9xcvf8sUk
mYnxiQK6J9OJzmTFx0QKWKlczv95Nv/TEuLTvq4nrACZyw/0F+4bcXnABIkg
HnEBoANPpOeEtEzAQmIxIBKJskAq4AJOKjczVZiAmZiUJYjhRafSHZAqcunu
fLaBHt3Y0MgCAOGdWF7m4+JyrduLv8V23kBmdwGAUvsW8zMF4LQJADLK32L0
h8i5IreudZKdJkhfjgnLCzCACEQBDcgARaCK7F4fGANzYA3sgTNYDbxBAAgF
6wEbRIMEZN8ZYBPYDnJBPtgLDoJSUAGOgzpwEpwBbeA8uAyug9ugDwyCR2AE
jIOXYAa8BwsQBOEgCkSFZCAlSB3ShYwhBmQLOUOekB8UCkVAPIgPpUGboJ1Q
PlQElUKVUD10GjoHXYZuQv3QA2gUmoLeQPMwCibDNFgB1oBXwgzYAfaAA+B1
MA9OhrPhHHgPXAJXwSfgVvgyfBsehEfgl/AsCqBIKCmUMkofxUAxUd6oMFQU
SoDagspDFaOqUE2oDlQ36i5qBDWN+ojGoqloOlofbY12Qwei2ehk9BZ0AboU
XYduRV9F30WPomfQnzEUjDxGF2OFcceEYHiYDEwuphhTg2nBXMMMYsYx77FY
rBRWE2uBdcOGYmOxG7EF2CPYZmwnth87hp3F4XAyOF2cDc4bx8Kl4nJxh3En
cJdwA7hx3Ac8Ca+EN8a74MPwfPwOfDG+AX8RP4CfwC8QxAjqBCuCN4FDyCIU
EqoJHYQ7hHHCAlGcqEm0IQYQY4nbiSXEJuI14mPiWxKJpEKyJPmSYkjbSCWk
U6QbpFHSR7IEWYfMJIeT08h7yLXkTvID8lsKhaJBsaeEUVIpeyj1lCuUp5QP
IlQRAxF3EY7IVpEykVaRAZFXogRRdVEH0fWi2aLFomdF74hOixHENMSYYiyx
LWJlYufEhsVmxaniRuLe4gniBeIN4jfFJyVwEhoSzhIciRyJ4xJXJMaoKKoq
lUllU3dSq6nXqOM0LE2T5k6LpeXTTtJ6aTOSEpKmkkGSmZJlkhckR6RQUhpS
7lLxUoVSZ6SGpOZXKKxwWMFdsXtF04qBFXPSctL20lzpPOlm6UHpeRm6jLNM
nMw+mTaZJ7JoWR1ZX9kM2aOy12Sn5Why1nJsuTy5M3IP5WF5HXk/+Y3yx+V7
5GcVFBVcFZIUDitcUZhWlFK0V4xVPKB4UXFKiapkqxSjdEDpktILuiTdgR5P
L6Ffpc8oyyu7KacpVyr3Ki+oaKoEquxQaVZ5okpUZahGqR5Q7VKdUVNS81Lb
pNao9lCdoM5Qj1Y/pN6tPqehqRGssUujTWNSU1rTXTNbs1HzsRZFy04rWatK
6542VpuhHad9RLtPB9Yx04nWKdO5owvrmuvG6B7R7dfD6Fnq8fWq9Ib1yfoO
+un6jfqjBlIGngY7DNoMXq1UWxm2ct/K7pWfDc0M4w2rDR8ZSRitNtph1GH0
xljHmG1cZnzPhGLiYrLVpN3ktamuKdf0qOl9M6qZl9kusy6zT+YW5gLzJvMp
CzWLCItyi2EGjeHDKGDcsMRYOlputTxv+dHK3CrV6ozVH9b61nHWDdaTqzRX
cVdVrxqzUbFh2VTajNjSbSNsj9mO2Cnbseyq7J7Zq9pz7GvsJxy0HWIdTji8
cjR0FDi2OM4xrZibmZ1OKCdXpzynXmcJ50DnUuenLiouPJdGlxlXM9eNrp1u
GDcPt31uw+4K7mz3eveZ1RarN6++6kH28Pco9XjmqeMp8Ozwgr1We+33erxG
fQ1/TZs38Hb33u/9xEfTJ9nnZ1+sr49vme9zPyO/TX7d/lT/Df4N/u8DHAMK
Ax4FagWmBXYFiQaFB9UHzQU7BRcFj4SsDNkccjtUNjQmtD0MFxYUVhM2u9Z5
7cG14+Fm4bnhQ+s012Wuu7ledn38+gsbRDewNpyNwEQERzRELLK8WVWs2Uj3
yPLIGTaTfYj9kmPPOcCZ4tpwi7gTUTZRRVGTPBveft5UtF10cfR0DDOmNOZ1
rFtsRexcnHdcbdxSfHB8cwI+ISLhHF+CH8e/mqiYmJnYn6SblJs0kmyVfDB5
RuAhqEmBUtaltKfSkJ9vT5pW2ndpo+m26WXpHzKCMs5mimfyM3uydLJ2Z01k
u2T/uBG9kb2xa5Pypu2bRjc7bK7cAm2J3NK1VXVrztbxba7b6rYTt8dt/2WH
4Y6iHe92Bu/syFHI2ZYz9p3rd425IrmC3OFd1rsqvkd/H/N9726T3Yd3f87j
5N3KN8wvzl8sYBfc+sHoh5IflvZE7ektNC88uhe7l793aJ/dvroi8aLsorH9
XvtbD9AP5B14d3DDwZvFpsUVh4iH0g6NlHiWtB9WO7z38GJpdOlgmWNZc7l8
+e7yuSOcIwNH7Y82VShU5FfMH4s5dr/StbK1SqOq+Dj2ePrx59VB1d0/Mn6s
r5Gtya/5VMuvHanzq7tab1Ff3yDfUNgIN6Y1Tp0IP9F30ulke5N+U2WzVHP+
KXAq7dSL0xGnh854nOk6yzjb9JP6T+Ut1Ja8Vqg1q3WmLbptpD20vf/c6nNd
HdYdLT8b/Fx7Xvl82QXJC4UXiRdzLi5dyr4025nUOX2Zd3msa0PXoyshV+5d
9b3ae83j2o3rLtevdDt0X7phc+P8Taub524xbrXdNr/d2mPW0/KL2S8tvea9
rXcs7rT3WfZ19K/qvzhgN3D5rtPd6/fc790eXDPYPxQ4dH84fHjkPuf+5IP4
B68fpj9ceLTtMeZx3hOxJ8VP5Z9W/ar9a/OI+ciFUafRnmf+zx6Nscde/pby
2+J4znPK8+IJpYn6SePJ81MuU30v1r4Yf5n0cmE693fx38tfab366Q/7P3pm
QmbGXwteL70peCvztvad6buuWZ/Zp+8T3i/M5X2Q+VD3kfGxez54fmIhYxG3
WPJJ+1PHZ4/Pj5cSlpaSWALWFymAQhyOigLgTS0AlFAAqH2IrhJZ1mx/ahzo
b2rnK4PR+G/ccWxZ130xcwBq7RH5uw0Az04AjiKujjAZaYWSMcAewCYmf/mf
lhJlYrxM85lLS4vTAOC4SCsLIKEWhbcgCyP9Ty0A0tBd1opCwyIK+piOkO6s
ktn27zrtX+aSzgg=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> Association["XMP" -> Association[]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{243.59843749999936`, Automatic},
  ImageSizeRaw->{933., 493.},
  PlotRange->{{0, 933.}, {0, 493.}}]], "Output",
 CellChangeTimes->{3.81775021344886*^9, 3.8177511500745497`*^9, 
  3.817753094103483*^9, 3.8177915335749197`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"292fe082-5088-4c73-8fa5-50419f2e0732"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitLayerKagome12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "10", ",", "2"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer0Kagome12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "3"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer1Kagome12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "2"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer2Kagome12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "11"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Layer3Kagome12", "=", "InitLayerKagome12"}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arrays", " ", "start", " ", "at", " ", "1"}], "..."}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitLayerKagome12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InitLayerKagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"InitLayerKagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "InitLayerKagome12", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer0Kagome12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer0Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer0Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer0Kagome12", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer1Kagome12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer1Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer1Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer1Kagome12", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer2Kagome12", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer2Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer2Kagome12", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer2Kagome12", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer3Kagome12", "=", "InitLayerKagome12"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplGraphKagome12", "=", 
    RowBox[{"Union", "[", 
     RowBox[{
     "Layer0Kagome12", ",", "Layer1Kagome12", ",", "Layer2Kagome12", ",", 
      "Layer3Kagome12"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HamiltonianKagome12", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "ComplGraphKagome12", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"HamiltonianKagome12", "+=", 
    RowBox[{"termat", "[", 
     RowBox[{
      RowBox[{"ComplGraphKagome12", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"ComplGraphKagome12", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "12"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EnergyKagome12", "[", "state_", "]"}], ":=", 
   RowBox[{"ExpVal", "[", 
    RowBox[{"state", ",", "HamiltonianKagome12"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.817708498147676*^9, 3.817708739485591*^9}, {
  3.817708858369487*^9, 3.8177088584306717`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"029af117-5709-4ebb-b753-8769781238bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defs for Kagome 18", "Subsection",
 CellChangeTimes->{{3.817706682291711*^9, 
  3.817706682658547*^9}},ExpressionUUID->"5cddc79d-753c-48a7-a181-\
7543eb6d997a"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
kCyPS3ph+ThZyWvydPratFW1vK+n7+6w5euSz+98z+TvpTtP+/0FeR17mrTu
P2sHmLzmzbhx41LzJ603l58PyGPt9PByn/JY0j4uz/Mnz0nycdHTo0no6aFB
/kCD+YEG8wMN5gcazA80mB9oMD/QKLOn774eivSmaa+Lls9Ju4bLoA4q7zXd
Q36v1ryPrdPND5LWv/d7bXrye9C5ZtEgyc+75JJLUvMn+Zp9189i0n4Hw3Ut
nuTz193Ry+PLcp3+qpHT0KCnhwb5Aw3mBxrMDzSYH2gwP9BgfqDB/ECjzJ4+
6+vj5XXvWV/7XeRxFfn4Klk+tmQ/3q/vTl4zXl7TPkjymjfyOWn5k/w4ea3/
IMnr5rseT7+5k44+z/vRVomchgY9PTTIH2gwP9BgfqDB/ECD+YEG8wMN5gca
Zff0WfpekbxOyaDPo6fPJvma+n4dedr7yQ56zX7yeyavW0/Ln+Rr44teU6df
596vp5efD4SKnIYGPT00yB9oMD/QYH6gwfxAg/mBBvMDDeYHGmX39K7rlXRL
ez9SF3r6bJK/q5Dn/WQH/R5E8po3MjfJ/Enef5b3HuhIzkS/37FIe/4GXdPe
N3IaGvT00CB/oMH8QIP5gQbzAw3mBxrMDzSYH2iU3dNn7ZLyvp6bnj67rLed
fO299PD9JDv0Ti+ezJ/k+/fmeY1793vmurp3zc+HfCGnoUFPDw3yBxrMDzSY
H2gwP9BgfqDB/ECD+YFG2T19HvT0xR6b9NnSf0snLl22rLT35s1y28nP69d3
J69J0/m4ZP7IdXaK/NymI8vPDdKev1CvS99BTkODnh4a5A80mB9oMD/QYH6g
wfxAg/mBBvMDDXr66hV9bNKNJ69Vk2W5JN9Ptt/17Lv7fPnf8rMCkcyf5LXp
tavM588nchoa9PTQIH+gwfxAg/mBBvMDDeYHGswPNJgfaNDTVy/vY5PXihfp
57Pcdtr1h5J9YPKaN93XnE/mT5kdPT09EKOnhwb5Aw3mBxrMDzSYH2gwP9Bg
fqDB/ECDnr56eR6bdPRp17SR163LdW/ktjqvbe/I+3UnfwYgt9stec2b7u+T
ZU+f57o3oSOnoUFPDw3yBxrMDzSYH2gwP9BgfqDB/ECD+YEGPX31sj426d+T
Hb30867nSeT9upPvJyv30a37Mayyyioj/m5QT28h5O9tP+Q0NOjpoUH+QIP5
gQbzAw3mBxrMDzSYH2gwP9Cgp69e1seWvHa89OfJ186nKfJ1J38e0JmJ5DVv
kq+1H3R9eotuMeTvbZo/LHk1mvvIrGjOQ7Oih598/qO1mMXKvO6e9VR0+RU3
Rlf8+oZo9qNzo/lLWazsa84zt0a3zb4wumXmxdHdD831Ps+seq27Zz4ZXXvd
jOi66TM+yp8HvM8zq15r7jPXR7fN+uVH61fR3fNmep9nVr3WrHuein5zz33R
lffMimbPm+N9nln1Ws+/9tvoyRcviJ5+6eJo2Z+e8H06iJpZvPTPH+XO76NZ
D77gPQtZ9VwyO/c99GK0eNmffY8zaoievnpZH1uyO5fOPIsiX3fyZwKdPj55
zZtk757s6eV9aLs/Xl6rX7aQv7cdK1a8F90x86Jo1v3bRM899+URa+b9Y6LJ
554ajdrhsuj/bsti5V+b/+LYaJ/rVmexUtd+164VXXz93tFds3rzZ8Zd46Lj
z5oSfXs7/3PMqucif1iuNWH6GtGVN+8a3T/3h+x/WKUv8oflWvtd/7Xo8llf
juY8vmpP/sifPTh/XPThh+/7Pk1EoN5//4PosuufiHaYcKP3rGM1a4095Mbo
sulPRh98+KHvMUdN0NNXL8tjS3t/1yzk9fZFPi95f51r33T/rEA6+KRkTy/9
fvftdL/nbFlC/t6KJ+c/0rM3TFv3PbBZtMsRF3o/brDqu3a6aBvv50SssNbP
rxqXKX9kbXfgxd5nmFXftfPFW3mfd1ZY679vGhPdP/dHA7NnNvsflnLtfPFP
vM87K6z189tXy7z/Wbhsuu/TRQTmiflLvecaqx3rqQXLfI87aoCevnpZHlvR
xz+UuNZ8nq87+X6yyWveDKW8Nj7Z06f9fEHeC7dMIX9vs3b03WuXwzlXZRVf
dPWszvrFVWNz5892B9DVs4qv/7pkjPe5Z4WxpKPPv/+5wPsMs+q72P+wOitP
R99ZLy+9xvdpIwLxxHN09Kxq19N09RigqT192u1nvW6MtSxfi3TbeftueS29
vM9r0e/JUKLj774teV19mrT3x0heKyfrdfWzCrWnl2vd5N0jypp1/xbRd7b3
f7xg1Xf5Pj9i+V97Xf2tQvkjy/f8suq7Rv30Au+zz/K/Dpn+zUyvo+95Xf2c
zbkGDku19rnuG97nn+V/Fd3/ACtWfOA9x1jtXFwDBy5N7umTnXXnWi6+Fb0+
vbzevR/pwZPv4Vrke5K8z86S69enSevpZZ6StyPfC9f3t9ugjwu1p59x74WF
94knnXua92MFq75rzOmHeT9HYvldv7p6v8L5c8TJ53ifYVZ916a/mOh9/ll+
l1yPvvj+51TvM8yq79ri5GO8zz/L77rk3q8Uzp8H5u/q+/QRnsn16H3nGKud
6/Ibn/I9/ghYk3v65Ou6O32xXEO9s4YM3ud0kKxfS/Ja752uXn4voPP6dLkt
+bjuXjzZkeeRfD/Zzkq+f2xHWk8vhlKuv9P5WYk8Xnnc3Uv+TO6787MV1+8O
hNrTz56zdeF94j2zt/J+rGDVd43am9e0tn3dM3vLwvlzxz07eJ9hVr2X7/ln
+V1zHty4cP7ce9+W3ueXVd/F7/Sw5j7xpcL5I+8ti3bjPWNZvtbYQ2/yPf4I
WJN7+rTXdaf13lXL+rW4XiPfbw0NDfX8fCKPtOvtuJ6jfj29kMcy6Pnvt6S3
1z5/VVq46JXCe8TO+uFul3o/XrDqu3a94vvez5VYftZx1/2A/GF5XbtesaH3
fwcsX/mzIfnD8rrY/7R3/ezmf1Pnz+t/esz3aSQ8WfTan73nF6vda8myt3z/
M0CgmtzTC3ntuasrDrmnF9LVjxkzZmCvLX1+5zXoydfhZ73eTEfytl3X9Xf1
9EJmK/n+tKH39J2vKc+a+8hM9T5xh4Mu8n6sYNV3jbtgB+/nSyw/64zrt1Hn
z44TyB9W8UX+tHedcd22+vw5mPxhFV/kT3vXKb/N//6xyTX/lUsKnfux6r9m
zfu99/xitXvd//CL3v8dsMJczz333PDq/Pf06dN7OtB+n5vnY9NW8nPl9izu
64knnoj222+/6Atf+MKIzx81alQ0ceLEyp/zIl+LfI58DfKYP/OZzwwv+d/j
xo3red7ka8r6vA56bPKcuT5+6dKlwyvL90AeV+fxJ+9D/ly+vilTpkQLFy4s
/fmzXnMfuUe9Txx3yIXejxWs+q6dLtra+/kSy886a3rxa2511k7kD0uxxl2w
o/d/Byxf+aP/OeFOh5I/rOKL/U9716kl9PRPv3S+9/NIlqfz90df8p5frHYv
enpWv5Xs6VntXtKXd/ff0pu7Pj5rT1+nVcTCPzxIT8/yuvi97/au827fgJ6e
5XWNv3wj7/8OWH7W+WXkDz09S7HY/7R3ldHTL33z1lJ/Lxv1wXVvWL7Xkte5
7g3SJa97g/aS69t0d/Tynq6DaLrtJlm+/D56epbX5ftcieVvXTZTlz309CzN
+s7uF3n/N8Dyt6bO/D/09Cyvy/e/AZa/VUZP//bbc32fRsIj3/nFau8ax/vI
woGeHkKubZ+8jr/ruvQd9PQxenqWz7XJ5OO9nyux/C16epbPtclJk7z/G2D5
W/T0LJ+L/U+7Fz09tC67/gnvOcZq57puxnzf44+A0dPH5H1LLVfI5L1q5X1o
i7y/Lj19jJ6e5Wt9e/zF0Z5XreP9XInlb9HTs3yt7+wm+fOf3v8NsPwtenqW
rxXnD/ufNi96epTBd5ax2rkAF3r6WPJ9ScteoUp7Hb38d9aZoKeP0dOzfK3t
h8Z7P09i+V309Cxfa9yF23uff5bfRU/P8rXIHxY9Pcrw7O9f955nrHatZ154
3ffYI3D09LG29fTyGvoJEyakPtYs17vpoKeP0dOzfCzOUVmy6OlZVa9RP70g
+q9Lf+x99ln+Fz09y8fa5bJNvc8+y/+ip0dZnnp+mfdcY7VjvbyI7gyD0dO3
z4wZM/r+PGFoaCjXbdHTx+jpWVWtUXtfEG1xytHR3td+0/v5ESuMRU/PqnJt
/otjvc88K5xFT8+qcsn16Pe+Zk3vc88KY9HTo0zvf/BhNPWGJ6Oxh9zoPetY
zVsXXP1YtGLFB77HHDVBT98+8v1O9vNyrZuhnB29oKePldHTP/rUg9HDTy5m
seL122ei21abHE3f8ORo2vanRtPGnhLdvuPkaPaOk0pZzz07O5q/dC6rAWvB
q0ep8+fBR2/wP/OscNbtT5M/rGz5s/CIEvJnuv+ZZ4WzUvY/t479OfnD6s2f
RefT08PE4mV/ju576MVo1oMv+M9EVi2XzI7M0KtL/uR7nFFD9PTt1P2+sfKe
sUVngJ4+VkZPv3z5A76/DATmnUcXR0+tdLTZeufxJb6/RJTgjTf056lvvHGJ
7y8DgXn7kUW2+fME+dME//PGeer8efPNi31/GQgM+x9k8VYJ51/09OiHngMa
zA806OnbSV47P378+OFr4GiQPzF6eljhXBWD0NPDCl09BqGnhxX2PxiEnh6W
6DmgwfxAg54eGuRPjJ4elhbc8hDnquiLnh6WXp+1gK4efdHTw9Lrs43zh/1P
rdHTwxI9BzSYH2jQ00OD/InR08OSZDRdPfqhp4clOcbT1aMfenpYGs4funr0
QU8PS/Qc0GB+oEFPDw3yJ0ZPD0udnOZ3wJGGnh6WOsd5roGDNPT0sNTJH/Y/
SENPD0v0HNBgfqBBTw8N8idGTw9L3TnNuSqS6Olhqfs4T1ePJHp6WOrOH/Y/
SKKnhyV6DmgwP9Cgp4cG+ROjp4elZE5zropu9PSwlDzO09WjGz09LCXzh/0P
utHTwxI9BzSYH2jQ00OD/InR08NSWk5zrooOenpYSjvO09Wjg54eltLyh/0P
OujpYYmeAxrMDzTo6aFB/sTo6WGpX05zrgpBTw9L/Y7zdPUQ9PSw1C9/2P9A
0NPDEj0HNJgfaNDTQ4P8idHTw5IrpzlXBT09LLmO83T1oKeHJVf+sP8BPT0s
0XNAg/mBBj09NMifGD09LA3Kac5V242eHpYGHefp6tuNnh6WBuUP+592o6eH
JXoOaDA/0KCnhwb5E6Onh6UsOc25anvR08NSluM8XX170dPDUpb8Yf/TXvT0
sETPAQ3mBxr09NAgf2L09LCUNac5V20nenpYynqcp6tvJ3p6WMqaP+x/2ome
HpboOaDB/ECDnh4a5E+Mnh6W8uQ056rtQ08PS3mO83T17UNPD0t58of9T/vQ
08MSPQc0mB9o0NNDg/yJ0dPDUt6c5ly1XejpYSnvcZ6uvl3o6WEpb/6w/2kX
enpYoueABvMDDXp6aJA/MXp6WCqS05yrtgc9PSwVOc6b5w9dfTDo6WEpyPxh
/xMMenpYoueABvMDDXp6aJA/MXp6WCqa05yrtgM9PSwVPc7T1bcDPT0sBZs/
7H+CQE8PS/Qc0GB+oEFPDw3yJ0ZPD0uanOZctfno6WFJc5ynq28+enpYCjp/
2P94R08PS/Qc0GB+oEFPDw3yJ0ZPD0vanOZctdno6WFJe5ynq282enpYCj5/
2P94RU8PS/Qc0GB+oEFPDw3yJ0ZPD0tl5DTnqs1FTw9LZRzn6eqbi54elmqR
P+x/vKGnhyV6DmgwP9Cgp4cG+ROjp4elsnKac9VmoqeHpbKO83T1zURPD0u1
yR/2P17Q08MSPQc0mB9o0NNDg/yJ0dPDUpk5zblq89DTw1KZx3m6+uahp4el
WuUP+5/K0dPDEj0HNJgfaNDTQ4P8idHTw1LZOc25arPQ08NS2cd5uvpmoaeH
pdrlD/ufStHTwxI9BzSYH2jQ00OD/InR08OSRU5zrtoc9PSwZHGcp6tvDnp6
WKpl/rD/qQw9PSzRc0CD+YEGPT00yJ8YPT0sWeU056rNQE8PS1bHebr6ZqCn
h6Xa5g/7n0rQ08MSPQc0mB9o0NNDg/yJ0dPDkmVOc65af/T0sGR5nKerrz96
eliqdf6w/zFHTw9L9BzQYH6gQU8PDfInRk8PS9Y5zblqvdHTw5L1cZ6uvt7o
6WGp9vnD/scUPT0s0XNAg/mBBj09NMifGD09LFWR05yr1hc9PSxVcZynq68v
enpYakT+sP8xQ08PS/Qc0GB+oEFPDw3yJ0ZPD0tV5TTnqvVETw9LVR3n6err
iZ4elhqTP+x/TNDTwxI9BzSYH2jQ00OD/InR08NSlTnNuWr90NPDUpXHebr6
+qGnh6VG5Q/7n9LR08MSPQc0mB9o0NNDg/yJ0dPDUtU5zblqvdDTw1LVx3m6
+nqhp4elxuUP+59S0dPDEj0HNJgfaNDTQ4P8idHTw5KPnOZctT7o6WHJx3Ge
rr4+6OlhqZH5w/6nNPT0sETPAQ3mBxr09NAgf2L09LDkK6c5V60HenpY8nWc
p6uvB3p6WGps/rD/KQU9PSzRc0CD+YEGPT00yJ8YPT0s+cxpzlXDR08PSz6P
83T14aOnh6VG5w/7HzV6elii54AG8wMNenpokD8xenpY8p3TnKuGjZ4elnwf
5+nqw0ZPD0uNzx/2Pyr09LDkO39Qb8wPNHz3P6g38idGTw9LIeQ056rhoqeH
pRCO83T14aKnh6VW5A/7n8Lo6WEphPxBfTE/0Aih/0F9kT8xenpYCiWn6crC
RE8PS6Ec58mfMNHTw1Jr8oeuvhB6elgKJX9QT8wPNELpf1BP5E+Mnh6WQspp
urLw0NPDUkjHefInPPT0sNSq/KGrz42eHpZCyh/UD/MDjZD6H9QP+ROjp4el
0HKariws9PSwFNpxnvwJCz09LLUuf+jqc6Gnh6XQ8gf1wvxAI7T+B/VC/sTo
6WEpxJymKwsHPT0shXicJ3/CQU8PS63MH7r6zOjpYSnE/EF9MD/QCLH/QX2Q
PzF6elgKNafpysJATw9LoR7nyZ8w0NPDUmvzh64+E3p6WAo1f1APzA80Qu1/
UA/kT4yeHpZCzmm6Mv/o6WEp5OM8+eMfPT0stTp/6OoHoqeHpZDzB+FjfqAR
cv+D8JE/MXp6WAo9p+nK/KKnh6XQj/Pkj1/09LDU+vyhq3eip4el0PMHYWN+
oBF6/4OwkT8xenpYqkNO05X5Q08PS3U4zpM//tDTwxL5Q1fvQk8PS3XIH4SL
+YFGHfofhIv8idHTw1JdcpquzA96eliqy3Ge/PGDnh6WyB+6ehd6eliqS/4g
TMwPNOrS/yBM5E+Mnh6W6pTTdGXVo6eHpTod58mf6tHTwxL5Q1fvQk8PS3XK
H4SH+YFGnfofhIf8idHTw1LdcpqurFr09LBUt+M8+VMtenpYIn/o6l3o6WGp
bvmDsDA/0Khb/4OwkD8xenpYqmNO05VVh54elup4nCd/qkNPD0vkD129Cz09
LNUxfxAO5gcadex/EA7yJ0ZPD0t1zWm6smrQ08NSXY/z5E816Olhifyhq3eh
p4eluuYPwsD8QKOu/Q/CQP7E6Olhqc45TVdmj54elup8nCd/7NHTwxL5Q1fv
Qk8PS3XOH/jH/ECjzv0P/CN/YvT0sFT3nKYrs0VPD0t1P86TP7bo6WGJ/KGr
d6Gnh6W65w/8Yn6gUff+B36RPzF6elhqQk7Tldmhp4elJhznyR879PSwRP7Q
1bvQ08NSE/IH/jA/0GhC/wN/yJ8YPT0sNSWn6cps0NPDUlOO8+SPDXp6WCJ/
6Opd6OlhqSn5Az+YH2g0pf+BH+RPjJ4elpqU03Rl5aOnh6UmHefJn/LR08MS
+UNX70JPD0tNyh9Uj/mBRpP6H1SP/InR08NS03Karqxc9PSw1LTjPPlTLnp6
WCJ/6Opd6OlhqWn5g2oxP9BoWv+DapE/MXp6WGpiTtOVlYeeHpaaeJwnf8pD
Tw9L5A9dvQs9PSw1MX9QHeYHGk3sf1Ad8idGTw9LTc1purJy0NPDUlOP8+RP
OejpYYn8oat3oaeHpabmD6rB/ECjqf0PqkH+xOjpYanJOU1XpkdPD0tNPs6T
P3r09LBE/tDVu9DTw1KT8wf2mB9oNLn/gT3yJ0ZPD0tNz2m6Mh16elhq+nGe
/NGhp4cl8oeu3oWeHpaanj+wxfxAo+n9D2yRPzF6elhqQ07TlRVHTw9LbTjO
kz/F0dPDEvlDV+9CTw9Lbcgf2GF+oNGG/gd2yJ8YPT0stSWn6cqKoaeHpbYc
58mfYujpYYn8oat3oaeHpbbkD2wwP9BoS/8DG+RPjJ4eltqU03Rl+dHTw1Kb
jvPkT3709LBE/tDVu9DTw1Kb8gflY36g0ab+B+Ujf2L09LDUtpymK8uHnh6W
2nacJ3/yoaeHJfKHrt6Fnh6W2pY/KBfzA4229T8oF/kTo6eHpTbmNF1ZdvT0
sNTG4zz5kx09PSyRP3T1LvT0sNTG/EF5mB9otLH/QXnInxg9PSy1NafpyrKh
p4elth7nyZ9s6Olhifyhq3ehp4eltuYPysH8QKOt/Q/KQf7E6Olhqc05TVc2
GD09LLX5OE/+DEZPD0vkD129Cz09LLU5f6DH/ECjzf0P9MifGD09LLU9p+nK
3OjpYantx3nyx42eHpbIH7p6F3p6WGp7/kCH+YFG2/sf6JA/MXp6WCKn6cpc
6OlhieM8+eNCTw9L5A9dvQs9PSyRP9BgfqBB/wMN8idGTw9L5HSMriwdPT0s
cZyPkT/p6OlhifyJ0dWno6eHJfIHGswPNOh/oEH+xOjpYYmc/gRdWS96elji
OP8J8qcXPT0skT+foKvvRU8PS+QPNJgfaND/QIP8idHTwxI5PRJd2Uj09LDE
cX4k8mckenpYIn9GoqsfiZ4elsgfaDA/0KD/gQb5E6OnhyVyuhdd2Sfo6WGJ
43wv8ucT9PSwRP70oqv/BD09LJE/0GB+oEH/Aw3yJ0ZPD0vkdDq6shg9PSxx
nE9H/sTo6WGJ/ElHVx+jp4cl8gcazA806H+gQf7E6OlhiZzuj66Mnh62OM73
R/7Q08MW+dMfXT09PWyRP9BgfqBB/wMN8idGTw9L5LRb27syenpY4jjv1vb8
oaeHJfLHre1dPT09LJE/0GB+oEH/Aw3yJ0ZPD0vk9GBt7sro6WGJ4/xgbc4f
enpYIn8Ga3NXT08PS+QPNJgfaND/QIP8idHTwxI5nU1buzJ6eljiOJ9NW/OH
nh6WyJ9s2trV09PDEvkDDeYHGvQ/0CB/YvT0sEROZ9fGroyeHpY4zmfXxvyh
p4cl8ie7Nnb19PSwRP5Ag/mBBv0PNMifGD09LJHT+bStK6OnhyWO8/m0LX/o
6WGJ/MmnbV09PT0skT/QYH6gQf8DDfInRk8PS+R0fm3qyujpYYnjfH5tyh96
elgif/JrU1dPTw9L5A80mB9o0P9Ag/yJ0dPDEjldTFu6Mnp6WOI4X0xb8oee
HpbIn2La0tXT08MS+QMN5gca9D/QIH9i9PSwRE4X14aujJ4eljjOF9eG/KGn
hyXyp7g2dPX09LBE/kCD+YEG/Q80yJ8YPT0skdM6Te/K6OlhieO8TtPzh54e
lsgfnaZ39fT0sET+QIP5gQb9DzTInxg9PSyR03pN7sro6WGJ47xek/OHnh6W
yB+9Jnf19PSwRP5Ag/mBBv0PNMifGD09LJHT5WhqV0ZPD0sc58vR1Pyhp4cl
8qccTe3q6elhifyBBvMDDfofaJA/MXp6WCKny9PEroyeHpY4zpeniflDTw9L
5E95mtjV09PDEvkDDeYHGvQ/0CB/YvT0sEROl6tpXRk9PSxxnC9X0/KHnh6W
yJ9yNa2rp6eHJfIHGswPNOh/oEH+xOjpYYmcLl+TujJ6eljiOF++JuUPPT0s
kT/la1JXT08PS+QPNJgfaND/QIP8idHTwxI5baMpXRk9PSxxnLfRlPyhp4cl
8sdGU7p6enpYIn+gwfxAg/4HGuRPrG09/YIFC6Lrr78+OvPMM6Pjjjsumjhx
YjRlypThP3vllVd8P7zGIaftNKEro6eHJY7zdpqQP/T0sET+2GlCV09PD0vk
DzSYH2jQ/0CD/ImF1tM//vjj0XbbbRettNJKI9acOXMK3+bcuXOj/fffv+c2
09baa68dXXjhhaV9PW1HTtuqe1dGTw9LHOdt1T1/Qurp77jjjhGrjNsoY6E4
8sdW3bt6enpYIn+gwfxAg/4HGuRPLJSe/uWXX4723HPPvv15kZ5+3rx50Sab
bJKpn0+uDTfcMFq0aJH662o7ctpenbuyUHr6zpyWNavdt1dkoRwc5+3VOX98
9/TLly+PjjrqqNQ9yGuvvZbrtsaPH19orzNoffDBB4W/vrYjf+zVuaunp4cl
8gcazA80OJ+FBvkT893Ty/fg8MMPH3iuWKSn156ffu1rX4tef/31wl8byOmq
1LUr89nTL1myJPX3bDbaaCPV17TNNtuoswfl4Dhfjbrmj8+e/pRTTnFmAD19
/ZE/1ahrV09PD0vkDzSYH2jQ/0CD/In57OknT56c+VyxSE9/yCGHpN7Wmmuu
GW2++ebRVlttFY0ePdp5v3INHhRHTlenjl2Zj57+3XffjY455pi+/+a1PX0Z
3RjKwXG+OnXMHx89/fnnn58pA+jp64/8qU4du3p6elgif6DB/ECD/gca5E/M
V09/zjnn5DpXLNLTP/jggx9//ve+973o8ssv/2hP+3bqx/7qV7/qe9/33Xdf
7vtGjJyuVt26sqp7+tNPP31g1tDTNwfH+WrVLX+q7OmvueaaXBkQSk+P4sif
atWtq6enhyXyBxrMDzTof6BB/sR89fRPPPFE6jnh1KlTh1/nXkZPL+Rzb7nl
lkwfO3PmzNTHJNfGQDHkdPXq1JVV1dNfdNFFmXspTU//xhtv0I0FhON89eqU
P1X29KeeeqppT6+133779TyGq666qtLH0DTkT/Xq1NXT08MS+QMN5gca9D/Q
IH9iPq97030+ePbZZ3/852X29HmlvZftOuusU8l9NxE57UddurKqevo8/Zim
p5f3rk7LrscffzzXQjk4zvtRl/ypsqdPywa5/pZch8t3T79w4UJ+XmiA/PGj
Ll09PT0skT/QYH6gQf8DDfIn5rOn33bbbaNJkyZFH3744Yg/99nTX3fddZyv
loic9qcOXVlVPf1ee+3V82/6jDPOiJ588slSe/pp06aRHQHhOO9PHfKn6uvT
dzLhpz/9abRo0aKeP/fV0x900EE993/JJcXenxufIH/8qUNXT08PS+QPNJgf
aND/QIP8ifns6fvx2dPPmjWr575XW221Su67ichpv0Lvyqrq6X/zm9+MeA3r
O++8M/znZff0J5100ojbWn/99QvfFvQ4zvsVev74eB9ZueZfks+efvHixbw2
wQj541foXT09PSyRP9BgfqBB/wMN8idGTz/SFVdc0XPfP/7xjyu57yYip/0L
uSurqqdfsmRJtM8++4x4Dasou6ffddddR9zW7rvvXvi2oMdx3r+Q88dHT5/G
Z09/6KGH9tz3ueeeW8l9Nx3541/IXT09PSyRP9BgfqBB/wMN8idGTz/4vs87
77xK7ruJyOkwhNqVVdXT91N2T//d7353xG3Je0fCH47zYQg1f9re07/++uu8
lt4Q+ROGULt6enpYIn+gwfxAI9n/zJgxg70mMiN/YvT0n9hhhx167veLX/yi
+f02GT19OELsyprW0ydv68Ybbyx8W9DjOB+OEPOn7T39kUce2XO/p5xyivn9
tgX5E44Qu3p6elgif6DB/ECDnh4a5E+Mnj6K3n333ejwww/ndWUG6OnDElpX
1qSe/v333++5rfnz5xd+bNDjOB+W0PKnzT39H//4x9T7XbFihen9tgn5E5bQ
unp6elgif6DB/ECDnh4a5E+sTT39008/PbxuvvnmaO7cudHUqVN7rifdvU4/
/fQSvpp2o6cPT0hdWZN6eunk2YOEheN8eELKnzb39Mcee2zPfR533HGm99k2
5E94Qurq6elhifyBBvMDDXr68L355pvR5MmTo9GjR0crr7zyx9+XNdZYI5ow
YUI0b948b4+N/Im1pad/6KGH+vbxyfVP//RP0fXXX1/SV9Nu9PRhCqUra1JP
f+utt2bKl7Fjx0Znn3129MILLxR+3MiG43yYQsmftvb0b731Vup9ymvsUR7y
J0yhdPX09LBE/kCD+YEGPX3YpJ/v7ub7rTFjxgz3+VUjf2L09CPXLrvsUtJX
AUFPH64QurIm9fTSvWf9WWBnbbrpptG9995b+PHDjeN8uELIn7b29JMmTeq5
v8MOO8zs/tqK/AlXCF09PT0skT/QYH6gQU8frvHjx+fqKuT19VV39eRPjJ6+
d332s5+Njj/++JK+mnajpw+b766sST39gQcemLun76x999238NeA/jjOh813
/rSxp5f340m7v0WLFpncX5uRP2Hz3dXT08MS+QMN5gca9PRhSuvo5c+mTZs2
/D0aGhoavg5OWldfJfIn1paeXowaNerjtfbaa0df+MIXnN3ZWmutNXw9exRH
Tx8+n11Zk3r6zTffvHBPL2uzzTYr/HUgHcf58PnMnzb29PK7rvycsBrkT/h8
dvX09LBE/kCD+YEGPX140vb/0sunkT9Pfqx8flXIn1ibevo0ixcvjnbfffdo
vfXWSz1X/uIXv8h1pBXo6evB/Fz1yfTOqUk9vZg+fXr08MMPR88///xwtrz+
+uvRiy++GM2aNWv4mLfddttFf/VXf9W3q5f3bUF5OM7Xg6+uvm09/QcffJB6
XwsWLCj9vkD+1IWvrp6eHpbIH2gwP9Cgpw+LXLcmeT36Qb17steXz6/q+jfk
T6ztPX23tJ8dydpggw3M77up6Onrw0dX37SePgt5r8ZDDjmkb1d/4403mt5/
m3Ccrw8fXX3bevpTTjkl9fddYYP8qQ8fXT09PSyRP9BgfqBBTx+WZOe+yiqr
ZPo8+Tgfr6knf2L09CMddNBBqefMU6dOreT+m4aevl6q7urb2NN3XHDBBalZ
I9eFQzk4ztdL1V1923r6tPt5/PHHS78fxMifeqm6q6enhyXyBxrMDzTo6cOS
7Nv7Xe8mqWi/r0X+xOjpe40dO7bn/n/wgx9Udv9NQk9fP1V29W3u6cWhhx6a
2p3xb6YcHOfrp8quvk09/RlnnNFzH3IdLtghf+qnyq6enh6WyB9oMD/QKKun
l/c3la54zJgxw69j6/TN8r6m8t/yd4POmeWassn7znv9luT7r2Z5X1V5XPL4
5HF2X3NG/lse07x58zLff/KaH/J8Jv+++/1fu/9e7qfoz0jka/DRUZA/MXr6
XrfcckvP/f/1X/91ZfffJPT09VRVV9/2nl6ugfOpT32q5zFcfvnllT2GJuM4
X09VdfVt6unT7qPKfVUbkT/1VFVXT08PS+QPNJgfaGh6eunQpd9OXk/dtaT3
7te9p3XNWV9P3pF8LK7Pl8eR9rOBtCU/f8jyM4Pk89fp4eVz5WcGydvt7umT
r4mX+8wjeft5n7siyJ8YPX0vef/HtH9LL7/8cmWPoSno6euriq6+7T292GST
TXoew8SJEyt9DE3Fcb6+qujq29LTn3POOT23v/nmm5d2+0hH/tRXFV09PT0s
kT/QYH6goenp+71f5KDleo1792vNB31skrymP3lf/bp1ee16Wm8+6HEP6urT
enr5nOT1bNJ6+uTXnvca88nfJZCfQVgjf2L09L3+9Kc/pc78/PnzK3sMTUFP
X2/W56pLX7y09T39wQcf3PMYDjjggEofQ1NxnK836/xZ9pI+f+rQ06fd/u9+
97vSbh/pyJ96s86fP770AD09zJA/0GB+oKF9PX13hy29snx+5/bk76U7l9eF
J2+zX4ec1v1n7aeSPbX8d7/HnezNpSOXx9rp4eU+5bGkfZxL8vmT5yT5uPr1
9Mn7Sl4zZ5Dk6/GreB898idGT9/rscceS535pUuXVvYYmoKevv4sz1Wf+fkJ
re/pjzjiiJ7HcNhhh1X6GJqK43z9mebPyZMa39OnnZt8//vfL+W24Ub+1J9l
/jy900n09DBD/kCD+YGG9vr0nW5+kLQ9br/XpievXZP1deXJz5PePU3ydev9
+nyRdr0a1/Vkks9fd0cvj891nX5Xh58FPb0/9PS9kvMo6/Of/3xl998k9PTN
YHWuSk8fRePGjet5DGeddValj6GpOM43g1n+tKCnT7vtm266qZTbhhv50wxW
+UNPD0vkDzSYH2iU9T6yWST78X59d/Ka8fI680GS17zp9znJj8tyDfjkdfNd
jyft+et09K73o027Nn9elt+7fsifGD39SMuXL0/9d7DzzjtXcv9NQ0/fHBbn
qvT0UfTlL3+55zHMnDmz0sfQVBznm8Mkfxre019wwQWpt41qkD/NYZE/9PSw
RP5Ag/mBRpU9ffI19f068rTOetBry5PXlun3Gvzka+OLXlOnX+fer6fv99p+
1+flRU/vT1N7+rfffjvad999c12r5t13340222yz1H8Hd999d94vAxE9fdOU
fa7a9p7+yiuv7Ln/z33uc5Xdf9NxnG+Wdx4rOX8a3tMX2dOjPORPs5S9/6Gn
hyXyBxrMDzSq7Oml2+6+3TzvJ+u6No1IXvMmrdNK3v+g2+yWfB1+v+vrpz1/
Wa4/Q09fb03t6S+99NIRr4UfdA2qtL6ss+S6FCiGnr55yjxXbXNPv3DhwtS8
qeJ91NuC43zzlNnVN7mnv+SSS3gtvWfkT/OUuf+hp4cl8gcazA80quzpRdbb
Tr72Xnr4fpIder9ePHm97Dyvh+l+z1zXfaQ9f67r2bs+Ly96en+a2tNvsskm
qeeoa6+9dvSTn/xk+GddO+64Y7T++uv3/KwsueR19iiGnr6ZyjpXbVJPf889
92T+2EceeST6+te/npo3S5YsKXT/6MVxvpnK6uqb3NOn3ebFF+sfK7Ijf5qp
rP0PPT0skT/QYH6gUXZPL3229N/SiUuXLcvV37kkP69f3528Jk2/j5Pr7HR/
XN7eK8vPDdKeP9d16V2flxc9vT9N7Onl/NbVu2dd3/jGNz76+p4r9WtrG3r6
5irjXLUpPX3nc9dZZ53olFNOiR577LHUj3vooYeiAw44oG/mcE2KcnGcb64y
uvqm9vSXX3557vMWlI/8aa4y9j/09LBE/kCD+YFGWT29dOPJa9VkWS7J95Pt
dz377j5f/rf8rCBN8tr02pWm6PNn8T6yWd5/V4v8iTW1p5fXymv+jey9997R
ihUrSv262oievtm056pN6OnlvSvKOC4fddRRhb8OpOM432zarr6pPX3a7Z17
7rnqx4l8yJ9m0+5/6OlhifyBBvMDDW1PL68VL9LPZ7nttO462VUlr3njuuZ8
mR192T192uPL8jr8bsnr+mS5Lr4W+RNrYk/f8cwzzwx3X1n/Xfz93/99tNde
e0WPPvpoqV9Pm9HTN5/mXLUJPb3r9fFZ1wknnFD4a0B/HOebT9PVN7GnT55b
5N3PozzkT/Np9j/09LBE/kCD+YGGpqeXHjntmjbyunXpjOW2kq9tz7vnTf4M
IPk+lslr3sh99lNmR5/nujdZJZ9L19eSJtnT9/v9gzKRP7EQe3oL8p6NN954
YzRlypToyCOPHO7W5PdeTjzxxGjq1Kl080bo6duh6LlqE3p6uebzV77ylULH
43XXXTf63e9+V/jxw43jfDsU7epD6ek322yznlXm7cEP8qcdiu5/6OlhifyB
BvMDjaI9vfTvyV5Z+vlB3XLeDjv5frJyH926H8Og67xU8boYTU8/6GcSgySv
v5/384sgf2Jt6enhBz19exQ5V21CT98xffr0aJdddhnYzf/N3/xNtO2220Y3
3HBD4ceNbDjOt0eRrj6Unh7NRP60R5H9Dz09LJE/0GB+oFG0p09eO176837X
he9WpMNO/jyg83iTv5c6qJdOXp/eovfS9PTJ18O7ruGTRn5OoXk9fhHkT4ye
Hpbo6dsl77mq757eyqJFi6KZM2dGV1999fDr7S+77LLo5ptvHr4WF6rDcb5d
8nb19PSwRP60S979Dz09rLz3+zeipbc8FS294Ynoz3e8wGLlXjI7S299Knrv
pcEdKZBUtKdPdufSmWdRpMNO/kyg08cnr3kzqMdKvt5cXqtfNk1Pn/y5Q79r
66RJu5Z/lp+baLF/jtHTwxI9ffvkOVdtak+PMHCcb588XT09PSyRP+2TZ/9D
T48yffje+9Gyk+6NFqx2dqHrMLFY/dbz/3zm8GwBWRXp6dM64SykNy7yecn7
61z7pvtnBVmuxa59vXoWmp5eFP35h49r0wv2zzF6eliip2+nrOeq9PSwxHG+
nbJ29fT0sET+tFPW/Q89Pcqy/L5XvHe5rOavBf92zvCsAYMU6emLdtHJa81r
rt2efO15ltfGp/18Qd4Lt0zanj75OwLydQ8iP/9IXvPG4ncF0rB/jtHTwxI9
fXtlOVelp4cljvPtlaWrp6eHJfKnvbLsf+jpUQY6elaV65lPHx8tn/2y77FH
4Ir09NJt5+2707rkPB12suPvvq0814dJ9uBZr6uflbanT/tZwqDX1CdfSz/o
/XTLxP45Rk8PS/T07TboXJWeHpY4zrfboK6enh6WyJ92G7T/oaeHllzrxndv
y2rfWvDVs3yPPgJX1vXpXa/7lh48+R6uZVwTprPk+vVZydeavB3ptbO+5+qg
j9P29CJ5PX55vP3uN+13FLJeK6cM7J9jZfT0C1562PeXgUDR08N1rlpGT//M
c9f7/hIRKI7zcHX1ZfT05A/6IX/g2v/Q00Nr2Yn3eu9sWe1cyybP9D3+CFjR
nj75Gu5OVy8dcef16XJb8nHdvXiyI88j2V93Vt7+Kq3b7ry2Xh6vPO7uJX8m
9915Db/rdwfK6On7/VxDfhdAnl+5D/kaktcC6nxMldg/x8ro6ccdcmH0wiu8
Hzh60dND9DtXLaOn3+mj/Pn9QvIHvTjOQ/Tr6svo6Xc6lP0P0pE/EP32P/T0
0OI9Y1m+lswe0E/Rnt71Gvl+S7rl5HVn8ki73k6W67enkcfS7/X5g5b09v2U
0dOLftcJcq2qO3rB/jn27Iu3l9LT/99tL+NcFT3o6dGRdq5699AxpfT0kj90
9UjiOI+OtK7+rjLy51D2P0hH/qAjbf/zyIQT1fmz5A+/9f2lwZP3fv+G966W
1e61YuEfff8zQKCK9vRCuuQxY8YM7I+lz++8Bj35Ovys15vpKPMaL/J1p70m
PYSeXmR9fuXnDa7HZKmJ++fO15Rn3X7/laX19LIef+bVQo+D1cz13HPPDS/f
j4MVxnp99oIRe7yrzz+qtJ5e1hPPkj+sT9bSpUuHl+/HwQpjvX7fCyPy56oL
SsifQ9n/sNIX+cPqXsn9z9xJx6vz5+lHLvX+dbH8rKW3POW9p2W1ey2b8Yz3
fwesMFey/5k+fXpPDzzoNuRz9ttvv2jUqFHRZz7zmeEl/3vcuHHDf9f9sRMn
Thxx28m/H3Q/3Z/7hS98oZTn4Iknnhh+XJ3Hn7wP+XP5+qZMmRItXLgw12PM
8vxl+brluVx99dU/vs3OcyyPe9Bjslzsn+N1632/Vu8Tdzj4oo/PUzlXZXUv
enpWcnWfq04roadP5g9dPauzOM6zkqu7q/9NCfkzdgL7H1b6In9YydW9/3mg
hJ7+yYfp6du6lv1uvveeltXutewezu9Z6atO/Y/00t39t/Tmvh9T21cT989F
zJ0/Q71P3Hi3S0ecp/I74OjgujdI0/kd8GvOONokf7gGDoTm2Ijm6lwD5+op
P1Pnzw/Z/6AP8gdpOvuf+w6cpM6fBS9x3Zu24ro3LN/rvZfZ6yBdXfofub5N
d0cv126Hf+yfY88unRPdc98WhfeIM+4e23OOyrkqOuqS06ienKvefOzR0d2z
tyycP/fM/knf/KGrB8d59CNd/U0TdfnD/gcu5A/6kf3PrLGTorlPfKlw/sx7
ctXo+WXzfH8p8Mh3T8tq9wL6qUP/I9e2T77nq+a69CgP++eY9PTnXrNb4X3i
sWec2fc8lXNV1CGn4c/vHrowOuOq3Qvnz4nnnObMH7r6duM4D5ffPXT+R/uf
4vnD/gcu5A9c5j8zM7rk3q8Uzp9fz/o/9PQtt/T4u713tax2rmUn3ut7/BGw
0PsfeS9VeR/a7o5e3vsVYWD/HJOeft/r1ii8T/z2dv3PUTlXReg5Db/ufP6S
aJ/rVi+UPbPu3yL6zvaD84euvr04zsNlxnMXR/td/7XC+59B2cP+p93IH7jI
+VfR/c9DT606nF309PDd17LauQCXkPuftNfRy3+H+njbiP1zrLNPPPqqH+fe
J267/8WZzlM5V22vkHMa/nV6+mOv3Sh3/vzX4Rdmzh+6+nbiOA8X6eklf465
5of59z8HsP+BG/kDl875189vXy13/pw2Y7Xhz6Wnx/L7X/He2bLatd6dv8z3
2CNwIfY/8hr6CRMmjOjnud5NmNg/xzr7RFk/u3oTk46ec9X2CjGnEY5OTz+c
P1dtmil7Zs/ZPNrl8Aty5w9dfftwnIdLp6dn/wML5A9cus+/TrrtXzNlz8NP
rfpxR09Pj47lDyz03t2y2rHenvcH3+OOGgit/5kxY0ZqPy9raGjI98NDAvvn
WPc+UdYul46Jjj9rSnTnvTv07A/vuGeHaOKUKbnPTzlXba/Qchph6e7ph/Pn
ki2j4848IzV/7r1vy2jyuadFo3Yonj909e3CcR4u3T29rP+6ZEzf/GH/g7zI
H7gkz7/kOjZTZ/5T9EDKe8vKe8ZeOTu+1k3359DT42PvfxAtmzwzWvBv53jv
clnNWi+sfm607BezfE84aiS0/kceS7Kfl2vd0NGHif1zLLlPlLXzR+eqck75
o90vjcZOuCja8aP1w90uVZ2fcq7aTqHlNMKS7OmH8+fiLUfmz8Hl5g9dfXtw
nIdLsqdn/4MykT9wSTv/6qyjbvpa9IvbVxu+Js6RN32t78fR0yPNey+/GS27
/elo6S1PRW/d/SKLlXvJ7Cz77TPRilf+6HucUUMh9j/d7xsr7xkb2uPDJ9g/
x/rtEzvnqlaLc9V2CDGnEY60nr67q7dadPXtwHEeLmk9PfsflIX8gYurp8+6
6OnRD/kDDeYHGiH2P/La+fHjxw9fAwdhI39irn0i56rQCjGnEY5+PT1dPcrA
cR4u/Xp69j8oA/kDF3p6WCJ/oMH8QIP+BxrkT2zQPpFzVWiQ03Bx9fR09dDi
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
c8Sqwttvvx3ddddd0dlnnx0dfPDB0dZbbx2NHj06Wn/99Su5f3D+BVvsf6DB
/ECD/gca5E+MfWL56Oo/USSnV6xYEV177bUjVhnkvHTatGnRfvvtF22wwQbR
V7/61WillVaKvvKVr0SjRo2K9t577+G/R3Xo6ctHV/8JjvNwoacvH139Jwbl
j+w3ZA+SXFOmTDF5PMuXL49++ctfRt/73vdS71cWPX11OP+CJfY/0GB+oEFP
Dw3yJ8Y+0QZdfSxvTp955pmp546XXHJJ4cfw9NNPR3vssUff89Lk+ru/+7vo
9NNPL3x/yI6e3gZdfYzjPFzo6W3Q1cf65c9vf/vb4T683x6k7J5e+vkjjzwy
0/6Hnr46nH/BEvsfaDA/0KCnhwb5E2OfaIeuPntOX3rppc5zx6I9/WGHHZa5
n0+uTTbZJHrrrbcK3S+yoae3Q1df/Dgvv9MzceLEnky4/fbbDR7lSJI7aXmE
8tHT26Gr782fBx54INpiiy0G7j3K7OmvuOKK6POf/3zmfQ89fXU4/4Ileg5o
MD/QoKeHBvkTY59oq+1d/aCcvuGGGzKdOxbp6dddd93CHT3nrNWgp7fV9q6+
yHG+3+/0VNHTn3rqqX3vG+Wjp7fV9q6+kz+LFy+Odtppp8z7jrJ6+oMOOijT
/e2+++7RpEmTorPOOquU+0U2nH/BEj0HNJgfaNDTQ4P8ibFPtNfmrr5fTj/y
yCPRxhtvnPm8tUhP3++2tttuu2jy5MnRXnvtNXyt1gkTJkTf+ta3+n78EUcc
UcIzgTT09Pba3NXnOc5fdtllA3PIsqefN2+e875RPnp6e23u6jv58+qrr/b9
d/0f//EfJj39uHHj+t7npptuOnxt/HfeeaeErxJFcf4FS/Qc0GB+oEFPDw3y
J8Y+sRpt7er75bRcM77fOeS3v/3tUnr65LV0zj//fOfHy/vV9ntMzz//fO77
x2D09NVoa1ef5Th/0003Zf55oWVPP+i+Ub6qevpbb711+L3Krb+nS5Ysifbf
f/+e+7nqqqtKv6882trVd+dP8nsyZsyY4Z/NnXLKKaX39HvuuWdqhsjvB86a
NauMLw0l4PwLlug5oMH8QIOeHhrkT6yqfaKci5S96qaNXb0rp5PnkHvvvffw
686OOuqoUnr6zn0ceOCBmT/+/vvvTz2/PfroowvdP9zo6avTxq5+0HE+y2vo
q+jpDz/8cHp6D6x7ejmebLbZZubf03fffTc65phj+t6P755etLGr784f2d/I
92K99dYbfh/ZjrJ7erl2TdoMHHrooeqvB+Wip4cleg5oMD/QoKeHBvkTq2Kf
ePPNN+fqQrKu66+/vqJnqTxt6+pdOb3jjjsOfx+33Xbb6PHHH//4z8vs6YtY
a621eu5f/gzlC6Wnf/LJJ6Pf/OY30RlnnBGdfPLJw797cc8990QffvhhCV9l
ONrW1Q86zr/88supx5af/exn0c4771xJT3/bbbdlOt6hfFY9/TPPPBONHTu2
ku/p6aefPvB+QujpRdu6+mT+XHnllT0fU2ZP/9xzz0V/8Rd/0XN7J510UuGv
AXbo6WGJngMazA806OmhQf7E6Omr16auflBO33333T1/5runnzt3bs/9f+pT
n6rs/tvEZ0//2muvDb/3wD/+4z/2zZhPf/rT0S677DLc4zdFm7r6LMf57u+3
vGeF/E6PGD9+vHlPL6+DTt5Hv2tWoHxl9/SLFi2K9t1338x7GI2LLroo8/2E
0tOLNnX1WfKnzJ5eXvOQvK0DDjig0G3BHj09LNFzQIP5gQY9PTTInxg9vR9t
6eqL5LTvnl6kzZv0uiiXr55e3j84b978/Oc/N3gG/GhLV5/lOL/77rtHW2+9
dfTYY4+N+PMqevrddtut5z4WLlxIT1+Rsnv6TTbZJFemFDV9+vRc9xNSTy/a
0tVX2dP3u2YfwkVPD0v0HNBgfqBBTw8N8idW555++fLlFT1LNtrQ1Tepp1+8
eHGlj6ENfPT0++23X+HM2WeffYyeieq1oavXHOete/rLL7+85/ZPOOGE4b+j
b6tG2T19Wuf6gx/8ILrrrrtK/Z7+8Y9/TL09uQZOWr6F1tOLNnT1Vfb0addZ
kvfIRrjo6WGJngMazA806OmhQf7E6rBPvPjii3vOP+T6wU3Q9K6+ST29XKMC
5aq6p5f3FO7Xwe+www7DuTJhwoRoww037Ptxxx13nOEzUq2md/Wh9vRybR1X
b0tPX42ye/oHH3xwxPfsuuuu+/jvyv6edt+OvM/5O++8M/zndenpRdO7+qp6
+v/5n//puY3vfOc7H/+9/FznggsuGH7PjXXXXXf477/5zW9Gm266aXTssccO
X+sP1avD+Rfqi54DGswPNOjpoUH+xOqwT0w7v122bJnpfVapyV19HXv6F154
oef+v/SlL1V2/21SZU8vM5SWJdLLr1ixoufj58+fH2288capnzN79uyynwpv
mtzVh9rT//jHP+657VtvvXX47z744AN6+opYvI+sfK8uvPDCnvsq+3t66KGH
Dv9+j1wTv1udenrR5K6+qp5eOvjkbfzqV78a/jt5D5Z+P3PuXt///vcLf50o
pg7nX6gveg5oMD/QoKeHBvkTC32fOHXq1J7zCXlNbNM0tauvY09/3nnn9dz/
9ttvX9n9t0lVPf17772X2k2cfPLJAz93o4026vk8eb19kzS1qw+xpz/zzDN7
brf798Po6atj0dP3U9X3tG49vWhqV19VT7/NNtv03MYdd9wRrb766pk6+u4l
105CNUI//0K90XNAg/mBBj09NMifWOj7xLTziJdeesns/nxqYldfx55+9OjR
Pff/61//urL7b5Oqenrp45Pf0y222CLTY1ywYEHjX1MvmtjVh9bTy3vVJm/z
u9/97oiPoaevDj19OJrY1VfV06+yyio9t/HZz342d0ffWaeddprmy0ZGoZ9/
od7oOaDB/ECDnh4a5E8s5H3ilVde2XP+sMcee5jcVyia1tXXraeX16DRkVWn
qp7+61//es/3dObMmZkf5957793z+dKHNU3TuvrQevq0bHn22WdHfAw9fXXo
6cPStK6+ip5ergE5qHeX62xNmzZt+DUuS5YsiZ555pnha+Wst956fT/n8ccf
1375GCDk8y/UHz0HNJgfaNDTQ4P8iYW8T0w7d3j66adN7iskTerq69bTr7PO
Oj33/Ytf/KKS+26jKnr6tPcb+Od//udcj/Ouu+5S30ZdNKmrD6mnl/f6TN5e
2nXM6emrQ08fniZ19VX09HPmzHF29Ndee63z80899dTUz/ve976X+TGgmJDP
v1B/9BzQYH6gQU8PDfInFuo+8eqrr+45bxg7dmzp9xOqpnT1derpJ06c2HO/
X/3qV83vt82q6Omlo0p+X3fcccfcjzWty1i8eHHRLz1oTenqQ+np77zzzp7b
kttPQ09fHXr6MDWlq6+ip5cevl9H/8ADD2S6jUmTJqV+ftOu7RaaUM+/0Az0
HNBgfqBBTw8N8icW6j4x7Zxh3rx27Ueb0NXXpae/5ZZbUmdu+vTppvfbdlX0
9GnXppcZy2vNNdfsuR3pX5uqCV19CD39hx9+mJot8t7Gaejpq0NPH64mdPVV
9PTyOzlpsyXXtclDXpOQvI0JEybkug3kE+r5F5qBngMazA806OmhQf7EQtwn
Xn/99T3nC1tuuWWp91EXde/q69DTP/fcc6nnufvvv7/ZfSJWRU//s5/9rOd7
e/zxx+d+rPK+s8nbSbtuSZPUvasPoadPe28DuY5SP/T01aGnD1vdu/oqevpz
zjmn5/P//d//PfdjPeGEE3pu5z//8z9z3w6yC/H8C81BzwEN5gca9PTQIH9i
Ie4T097b6t577y31Puqkzl196D29ZEBaf7L++uub3B9GqqKnT+sfDjjggNyP
deedd+65HXmtftPVuav33dPLezcmb0Pm0YWevjr09OGrc1dfRU8/NDTU8/l7
7rln7scq76uevJ2//du/zX07yC7E8y80Bz0HNJgfaNDTQ4P8iYW2T7zpppt6
zhU23njj0m6/rura1Yfc0//5z3+ORo0aldqfvPLKK6XfH3pV0dNffPHFPd/f
Iu+Rl9bbynsatEFdu3qfPf1rr73W8/k//OEPB34ePX116Onroa5dfRU9/a9/
/euez99rr71yP1Z5r5W0GZXrdsFGaOdfaBZ6DmgwP9BI9j8zZszgvAaZkT+x
0PaJG2ywQc+/41tvvbW026+zOnb1ofb0b731Vt+O/uGHHy71vtBfFT39o48+
mvp9lh41j3XWWafnNqRjaYs6dvU+e/qtt9665/Off/754evSu9Y777xDT18R
evr6qGNXX0VPL9fQSn7+T37yk9yPdenSpakzumLFity3hWxCO/9Cs9BzQIP5
gQY9PTTIn1hI+8Tbbrut59+wdKn4RN26+hB7euno066tJGvOnDml3Q8Gq6Kn
F6uuumrP9/rggw/O/DhPO+201HmR1+q3Sd26el89/S9/+cvUeSlzyUxCh56+
XurW1VfR07/66qs9n7/GGmvkfqxpr6f/9Kc/nft2kF1I519oHnoOaDA/0KCn
hwb5Ewtpn7jhhhv2/Bu+5pprSrntJqlTVx9aT798+fK+Hb1cnxXVqqqnP+64
41K/5xdddNHAz5XOpF9XeuONN5bxNNRKnbp6Xz29/AyInj589PT1U6euvoqe
XvzDP/xDz23Idf3ymD17ds9trLbaarluA/mEdP6F5qHngAbzAw16+np48803
o8mTJ0crr7xyUN8b8icWyj7xjjvuqOw8tgnq0tWH1NO7Ovo777xTffvIr6qe
Xr73n//851O/9/vuu2/07LPP9nyOvFfGRhtt5OxK77//founJXh16erp6eFC
T19Pdenqq+rpx44d23MbV1xxRa7bkPdET96G3C7shHL+hWai54AG8wMNevrw
DQ0NRausskqQ/Sv5Ewtln/ijH/2oZ0Yuu+yyEr7C5qpDVx9KTy897frrr5+a
Rbz/gT9V9fRCuipNL/ov//IvPX/2wgsvGD9D4apDV09PDxd6+vqqQ1dfVU9/
7bXX9tzGd7/73Vy38a1vfUvd9SOfUM6/0Ez0HNBgfqBBTx+uadOm9e3nQ/ne
kD+xEPaJd999d5AzUgehd/Uh9PRvv/12345++vTphW8XelX29OKcc84p1InK
+/KRUb1C7+p9vo/su+++W2hJXqXNWvLjoEdPX2+hd/VV9fQibb6yXNdNyP6K
41v1Qjj/QnPRc0CD+YEGPX145PsxevToTL2Hb+RPLIR94uabb94zH0NDQyV9
hc0Xclfvu6eXa7T2u9aNvAYNflXd0wu5nk2ejn7SpEmp77GX9/WKTRVyV++z
py/qgw8+CHLP1ET09PUXcldfZU9//vnnp87YzTff7Py8WbNmpX7eiSeemPsx
IJ8Qzr/QXPQc0GB+oEFPHx75fiS/B9Lbz5s3L7jvDfkT871P7HeOgHxC7ep9
9vRvvPFG3+6V69GHwUdP3/Hf//3fw8env/zLv+yZj2984xvR0Ucf/fHHnnfe
ean9PWKhdvX09HChp2+GULv6Knt6semmm6bOmeypFi1aNOJj33rrreFrZ6V9
/FprrVXo/pGP7/MvNBs9BzSYH2jQ04epc70b+f/yPekI7XtD/sR87xO33HLL
ntk4/fTTS/wK2yPErt5XT7906dK+Hb28F4K8P1qRhXL57Om7da4zL+8nK+9l
kDRq1KieOXrsscfU99skIXb19PRwoadvjhC7+qp7etn3rLbaan33Pv/6r//a
9xqA3evRRx8tdP/Ix/f5F5qNngMazA806OnDNGHChNRrloT2vSF/Yj73iXPm
zEk9R5CeAsWE1tX76ukHnYcWXShXKD29i7zPcHIOvv3tb5veZ12F1tXT08OF
nr5ZQuvqq+7phfzMec011yy8x5HfcUU16OlhiZ4DGswPNOjp6yW07w35E/O5
T9xmm2165oJrSeiF1NXT08OlDj392muv3TMHU6dm6+baKKSunp4eLvT0zRNS
V++jpxfvv/9+tPfee+fa22y11VbRH/7wB9X9Ih96elii54AG8wONsnr6adOm
RZMnT47GjBkzfK3aznVb1lhjjeH/lr8b1DPJa8iT9/3mm/le95U8J5T7H0Qe
lzw+eZwrr7zyx58r/y2PSa4Ln9XQ0NCI++++Zk3n77vfIzb594OEds5J/sR8
7RMfeuih1HOFP/3pTwZfZfuE0tXT08Ml9J7+iCOO6JmBb37zm2b31xShdPX0
9HChp2+mULr6rPmz+eabj1hlkevXyDysuuqqqfP3uc99bvh6fnfccUdp94ns
6OlhiZ4DGswPNDQ9vXTo0m93d9uDlvTe/br3tPdPHUq59otL8rG4Pl8eR9rP
BtKW/Pwhy88Mks9fp4eXz5WfGSRvl56+GXztE3fYYYeemZBODOUJoasv0tOL
7bfffsTSfn5ZC+UKuac/55xzUo+p06dPN7m/pgmhq6enhws9fXOF0NWHdJ6x
ePHi6IEHHhj+37Nnz45efPFFz48I9PSwFFL+oH6YH2hoevqhxGvHsy7Xa9y7
X2s+6GOT5DX9yfvq163La+TTevNBj3tQV5/W08vndH6/gJ6+mXzsE+X9F9Nm
asmSJUZfZXv57uqL9vRoh1B7+hNOOCE1o/bYY4/S76vJfHf19PRwoadvNt9d
PecZcKGnhyXyBxrMDzS0r6fv7rDltfXy+Z3bk7+X7lxei568TXkde5q07j9r
P5U8H5T/7ve4k725/HxAHmunh5f7lMeS9nEuyedPnpO081R6+mbxsU/caaed
euZh//33N/oK4bOrp6eHS2g9vfwMcdNNN0095q277rql3U+b+Ozqtcf5p59+
esSqSvJ+q7zvNqGnbz6fXT3nGXChp4cl8gcazA80tNen73Tzg6T17/1em568
do3cRxbJz5PePU3yNfv9+nyRdr2aIce1dJLPX3dHL48vy3X6Xejpw1T1PvGp
p55KPV+ly7Xlq6unp4dLCD398uXLo+uuuy71fa27l1w3AMX46uo5zsOFnr4d
fHX15A9c6OlhifyBBvMDjbLeRzaLZD/er+9OXjNeXtM+SPKaN/0+J/lx8lr/
QZLXzXc9nrTnr9PR53k/2n7o6cNU9T4x7Xc0dtttN8OvEB0+unp6erj46Ol3
3XXXj9833tXLd9ZGG23EsaIEPrp6jvNwoadvDx9dPfkDF3p6WCJ/oMH8QKPK
nn4o8Zr6fh152vvJDnrNfrK37Pca/ORr44teU6df596vp+/32v686OnDVOU+
cf78+akz9uSTTxp/leiouqunp4dL1T39Vlttlamb76zDDz/c8Ktvn6q7eo7z
cKmyp3/33Xd7lpWq7qduqu7qyR+40NPDEvkDDeYHGlX29NJtd99unveTdV2b
RiSveZPWaSXvf9Btdku+Dr/f9fXTnr9B17TPg54+TFXvE4855pgRC9Wrsqun
p4dLqD29XAPnoYceMvzK26vKrp7jPFyq7OkRhiq7evIHLvT0sET+QIP5gUaV
Pb3IettDidfeSw/fT7JD79eLy2vsi77Gvfs9c133kfb8DTmuZ///s3cn0HZU
Zd7/7eV616JfW9TV9lLUhfRrdysOKAiIKMiMNEMYAgECIS0EZIYAAQEJhIYw
DwEaCHMAmUMSYgRCSAhkRKYQAiSghNlAgvyRKQHr777VR07q1Nmnqp56au+q
/f2s9SyJueecOufuPHvv361blRc5vZ9YJ4apqqyenB42PuX0G264YXTaaadF
zz//vOI7hlFVVsY8Dxty+jDRf+AD9l/QRP+BBOMHEmXn9CbPNvm3ycRNlm0q
ea571udOPq5b3p28Jk23rzPX2SlyzZuWLD83SPv8yrgufdoxkNP7g3ViuKrI
6snpYePi+vQHHnhgNHTo0GjkyJHRTTfdFM2ZM6fvXrKoVhVZGfM8bMjpw0X/
gWvsv6CJ/gMJxg8kysrpTTae9X5yWZ87eT/Zbtezb8/zzX+bnxWkSV6bXlpp
fPl9hKrQf2KsE8OmndVPn/0UOT26cpHTwx/aWdm8Z15hnkdX5PRho//AJfZf
0ETOAQnGDySkOb05V7xIPp/ludPuJ5vMqpLXvLFdc77MjJ6cPkb/ibFORBVZ
PZCGnB5VZGVAGnJ60H/gCvsvaCLngATjBxKSnN5k9GnXtDHnrZvr3pjnSp7b
njdnTv4MwDxvu+Q1b8xrdlNmRp/nujdlIqf3E+tEGFXeWxZoIaeHUeW9HYEW
cnoY9B+4wP4Lmsg5IMH4gUTRnN7k78mM3uTztpzcyJszj07cT9a8Rrv2Y1hj
jTVKfe0iyOnDxDoRLWT1qBo5PVrIylA1cnq00H9QNfZf0ETOAQnGDySK5vTJ
a8eb/LzbdeHbFcmZkz8PaB1v8po3yXPtk5LXp9e43jM5fZhs68Rht28dnXzb
gGjE7btFZ9y1eXTe5O+k1h9evzZ67705VANq0R9/H/3Xr64ptfYZdm20wy+v
79urLrz7qejdqX+kqL6aNvcaS//5eab+M/f5U53/u6H87T+Dj70m6ncQ/Yfq
rKlzrhKvf+Y+P8L5vxvK7/7D+odKq2cfm961/wz5zX9G+1y1z99qULT/TT8n
p0cuy5e/HC1dOi16882pzvsqVc8yY2fp0unRihWvuR7OqKGiOX0yOzeZeRZF
cubkzwRaeXzymje9cndzH9r2rzfn6peNnD5MyZz+8HHrRJeOPSCaPmuXaNGi
f6eo0urBWf2jMy89P5q+5showaeGU1Q06ZThK/WfI8b/ILrkjgOjqQ8OdD5e
qebV2ZefG01f6wzn457yo347ItF/xv0wGj1uSDRz7vbOxyrVrLr/wb2iUy+6
MJr+/1j/UHHN2Oe0jty9//nHRz87+JqO38f42UHXRjudfQo5Pbr6619XRMuW
jY5eWLyN835HNateWLxV39gCsiqS06fd3zULc759kcclX6917Zv2nxWYDL4X
k++3P4/tnrNFkdOHqT2nH37brs7nAqr5NXPOTtH9p5zlfI9Eua/2nP7kO3Z0
PjapMGrKcWc7H/uU+2rP6U8fu0s0a24/52OTan5NPZr+Q62c0//XtXtkun6S
yfAHX703OT1W8v77jzrva1Tza/Hi//zbWHvM9XBHDRTJ6Ytm0clrzefJmZP3
k01e8ybLufFpP18w98ItEzl9mFo5PRk9VXVNOYm9aujVyunpP1TVde/h5zof
/5TbauX0JqN3PR6psGry0ec4H/+U22rl9IOv3ivXvQ42GnT937N6cnqY3NR1
P6PCqeefX6vv50KATZGc3mTbefNucy69uc9r0Zw5mfG3P5c5rz6r5LVysl5X
Pyty+jC1cnrXfZ8Kr2Y9vF308A7/7XyvRLmrVk7veixS4dXUGQOih7eh/4Rc
Jqc/asJa0eyHuc4NVX09/J/0n5CrldMXuS+xOa+enB5//ety532MCq8WL97G
9dCH58q6Pr05370bk4Mn7+FaJGdOvmarzPXrszLvNfk8JvM37zuLXl9HTh8m
k9OPumN/5z2fCrMuH78fWVnAZXJ6+g/lqi4bN4T+E3CZnP7KuwY7H4dUmHXJ
WPpPyGVy+l3OO6FQTm9qp7NPJqcPnLlmuOs+RoVZy5Zd4Xr4w2NFc/rktd5b
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
6D9u+Z7Vs/+CJvoPJBg/kCD/gQT9J1a3deJzzz0XzZgxo7LXgwx92j2fs3rX
Of0Pf/jDjqx9wYIFmR578skndzx2woQJhY8F5WOed8/nrN7nnP6xxx5bqcp2
5513RkceeWS03XbbRT/72c+ibbbZJjrooIOiMWPGRH/5y19Kf70Q0X/c8zmr
r9v+C/VC/4EE4wcS5D+QoP/EfF0nmu/NjTfe2HcdibXWWqsjD7viiitKf02U
jz7tB1+zetc5/a9+9auO3rLPPvv0fNx7770Xfe1rX1vpcauttlrh44AO5nk/
+JrV+5jTm/tYb7rpph196eyzzy7l+S+44ILoK1/5SurvErVqlVVW4XeDSkD/
8YOvWb2v+y80A/0HEowfSCTzn/vuu6/w768jPPSfmI/rxEGDBln3kOT09UFO
7w8fs3rXOb35/Zy0/rLeeutZH7fbbrt1POacc84pfBzQwTzvDx+zep9y+jlz
5kQ77bRT1zWPNKdftmxZ3//2Wlsl64033ijj7QWJ/uMPH7N6H/dfaA76DyQY
P5Agp4cE/SfmyzrxhRdeiAYOHJh570hOXw/k9H7xLat3ndMbp5xySmqPMdfE
ue2221b62kcffTT1XNd+/fqJjgE6mOf94ltW70NO/+yzz0aDBw/uueaR5PRv
v/12tP766+fO6Fv15ptvit5jqOg/fvEtq/dl/4Vmov9AgvEDCXJ6SNB/Yj6s
E6+77rroM5/5TK59Izl9PZDT+8enrN6HnN7Yd999rf1m9913j/bYY4/Uv+vf
v7/49aGDed4/PmX1LnN6cw34I444IvOaR5LTm58jpj3n3nvvHd16663RxRdf
HF155ZV916hP+7oddtih8GuHjP7jH5+yeh/2X2gu+g8kGD+QIKf315///Odo
9OjR0ZAhQ6LNN998pe/JOuus05drmL83X+cK/Sfmep04fPhw6960NVbmzZsX
ffjhhyW+c1SBnN5PvmT1vuT0Rtp9YTWzM+hjnveTL1m9y5z+1Vdf7dpX1l57
7dJ6zahRo1JfI/m7Qi2XXHJJ6tdfddVVhV4/ZPQfP/mS1bvef6HZ6D+QYPxA
gpzePyZ3P/PMM6PPfe5zmTIO83Xd9gra6D8xl+tEc5+ybmPDXIuC37WuP3J6
f/mQ1fuU0/cdz803RwMGDMg0f22xxRbRxIkTS3ttlI953l8+ZPWur3uT7Cmb
bbZZNHny5L7z28vI6T/44IPoi1/8Yu7fRzzppJM6HvPNb36z6NsMFv3HXz5k
9eT00ET/gQTjBxLk9H4xeXvWfD5Z5rz7qtF/Yq7WiZdddlnqWNhuu+3IdRuE
nN5vrrN6n3L6oUOHFpq/zPVwli5dWsoxoFzM835zndW7zukPOeSQv/cR8zPC
lrJy+nPPPTd1jZXFN77xjY7H3nHHHbmPIWT0H7+5zurJ6aGJ/gMJxg8kyOn9
Yc6jT8vozTVuTAZvzrE3Zf67W5Zv/r5K9J+Yi3Xik08+mToGzJ4VzUJO7z+X
Wb0POf3ChQujddddN7Unmes1m/w+y3WkTV+DX5jn/ecyq3ed0xvmOjNJZeX0
aX3K7JWyOOusszoea+7TgezoP/5zmdWT00MT/QcSjB9IkNP7xeTs7efH27K5
btfGqTLPo//EXKwTt912247v/f7776/0DuESOX09uMrqXef0ixcvTj1v9Mc/
/nE0ffr0jq+/8cYbo+9///tds3r4hXm+Hlxl9T7k9GnKyOkfffRR0bVr/vCH
P9DjhOg/9eAqqyenhyb6DyQYP5Agp/eL+V6sscYamc/VSft+DRs2TPkoP0H/
iVW9Trzzzjs7vu8bbrih4juES+T09eEiq3ed02+11VYd/WjXXXft+TgzV6Vl
WHvuuWfhY0H5mOfrw0VW3+Scvv3cmVYdfvjhuZ4jrcfNmjUr13OEjP5THy6y
enJ6aKL/QILxAwlyev+Y69/kYc67b/9+mZy/KvSfWNXrxE022aTj3+mMGTMU
3yFcIqevl6qzepc5/ZgxY1JzqBUrVmR6/Mknn5z6+EceeaTQ8aB8zPP1UnVW
3+Scfscdd+x4jltuuSXXcwwaNKjjOdKu04N09J96qTqrJ6eHJvoPJBg/kCCn
rz9z79nk9yxv1l8U/SdW5TrRnIeV/H4PHDiw4+vM72uPGzeu778nTpwYLViw
oNT3jOqQ09dPlVm9y5x+s8026+hH11xzTa7nWGuttTqe48QTTyx0PCgf83z9
VJnVNzmn/9d//deO53jmmXzHOnLkyI7nOPTQQ3M9R8joP/VTZVZPTg9N9B9I
MH4gUVZOb7Ji8/uh/fv3jzbffPO+c7rNY809UM2fzd/1ypnSfgdeem65ef1e
zHGZ4zPH2X69d/Nnc0x5zusbPXr0Sq+fvH6N+XvzvN3+vgjzGSU/tzKeNwv6
T6zKdWLavRgfeOCBvr+bMmVKNGDAgGiVVVZJPUd1tdVWiw477LDo2Wef1fw4
UDJy+nqqKqt3ldO/9957qX3m7bffzvU8p512WsdzbL311rmPBzqY5+upqqy+
qTn9hx9+mNrfPvroo1zHcdNNN3U8x/bbb5/37QSL/lNPVWX15PTQRP+BBOMH
EpKc3uTD3e5l2q1M7t0tezfHkfx6k2vnkTwW2+PNcXS7Pm6yzM8fsvzMIPn5
tfJy81jzMwOtPJ2c3q0q14n/9m//ttL32vz5/fffj37xi19k/ndoypzjhXog
p6+vKrJ6Vzn9448/ntpb8po0aVLHc5hz7OEH5vn6qiKrb2pO//zzz5fS36ZO
ndrxHOutt17u5wkV/ae+qsjqyemhif4DCcYPJCQ5/ejEueNZy3aOe/u55r2+
NinP9V/MOfJpuXmv4+6V1afl9OYxrd8vqCqnr+ravvSfWFXrxOeee67je22u
ebPuuusW+rd44IEHVvDpQIqcvt6096qX3vmwk5x++vTppeRYDz30UMdz/OAH
P8j9PNDBPF9v2ln9/4yV9x8fc/o5c+aU0t/Sfp75H//xH7mfJ1T0n3rTXv/c
/funyemhhv4DCcYPJKTn07dn2ObcevP41vOZvzfZuTkXPfmc5jz2NGnZf9Z8
KnnNG/PnbsedzM3NzwfMsbZyePOa5ljSvs4m+fmZzyR5XGXn9C7vKUD/iVWV
0996660d3+tvfOMbHf+fuWbEIYcc0lfbbrtt9H//7//tOgbPOuusCj4hSJDT
15/mXnXnc4c7yekfe+yx1J6S9R6yLTfffHPHc3BdCH8wz9efZla/8zknNzKn
T1tbF1lfm+sMlvE8oaL/1J/m+mfvK/Ylp4ca+g8kGD+QkF6fvpXN95KWv3c7
Nz157RrzGlkkH2dy9zTJc/a75flG2vVqRluupZP8/NozenN8Wa7Tn5d5zvbX
ND8XqQr9J1ZVTn/KKad0zdtNHXXUUdErr7zS8bjly5dHZ5xxRtfHmbwN/iKn
bwatvaqrnP6DDz5I7Sfm54l5pF2z69RTT819PNDBPN8MWll9U3P6tOtxbbLJ
JrmPo6zr54SK/tMMWusfcnpoov9AgvEDibLuI5tFMh/vlncnrxlvzmnvJXnN
m26PSX5dlkw7ed182/F0O//GZPRa16JJnvNv+zlC2eg/sapy+n333bdr1j52
7NiejzfXpE977O67717GxwAl5PTNobFXdZXTG9ttt50og5o9e3bq45988slC
x4PyMc83h0ZW39Sc/u677y4lp1+0aFHH86y++uq5nydU9J/m0Fj/kNNDE/0H
EowfSFSZ049OnFPfLSNPu59sr3P2k9eW6XYOfvLc+KLX1OmWuXfL6bud2y+V
/EzNzwOy3O+2LPSfWFU5/Q477JA6vq6++urMx3r66aenPsfSpUslHwEUkdM3
S9l7VZc5/V133ZXaT3baaafonXfesT72wQcfTH3sXnvtVehYoIN5vlnKzuqb
mtM/8MADHY//8Y9/nPs4zM8ck8/zrW99K/fzhIr+0yxlr3/I6aGJ/gMJxg8k
qszpTbbd/rx57idruzaNkbzmTVqmlXz9Xs/ZLnkefrfr66d9fr2uaV9U2nX2
s14jqCz0n1hVOf2mm27aMb7M+ax5fPjhh9E//dM/VfazJMiR0zdPmXtVlzm9
sc8++3T9PZ/zzjuv77oP7ebOnRsdffTRXR+zZMkS6ceLEjHPN0+ZWX1Tc/on
nngitT/lNWPGjI7n2GCDDXI/T6joP81T5vqHnB6a6D+QYPxAosqc3sj63KNT
zhPvJpmhd8vFk9dxz5NLtt8z1/YaaZ/faKXr0KRdH6jKc+kN+k+sqpx+4403
7hhfd9xxR+7j3XXXXTue58QTTyzy1lEBcvpmKmuv6jqnN7bccsuuuXuegn+Y
55uprKy+qTn9a6+9VkqPGjduXMdz9OvXL/fzhIr+00xlrX/I6aGJ/gMJxg8k
ys7pTU5s8m+TiZss21TyXPesz518XLe8O3lNmm5fZ66z0/51eXOvLD83SPv8
NK5Ln/w5hqks9/MtG/0nVlVO//Of/7zj+z5nzpzcx2vu0Zh8nkGDBhV566gA
OX1zlbFX9SGnN2z3z+hV66+/Pvez9hTzfHOVkdU3Nac3/vEf/7HjOd5///1c
z3HRRRd1PMehhx6a6zlCRv9prjLWP+T00ET/gQTjBxJl5fQmN05eq0Z67lzy
fPFu17Nvz/Nt12dPXpte47w/7d9HMEzun/wZRtXXu2mh/8SqyunNdZuT42vy
5Mm5j/fyyy/veJ6dd965yFtHBcjpm026V/UlpzfMuaMbbbRRrrnUXBsH/mKe
bzZpVt/knP4HP/hBx3M8/vjjuZ7DZPLJ5zDZPbKh/zSbdP1DTg9N9B9IMH4g
Ic3pTWZcJJ/P8txp95NNZlXJa97YrjlfZkbvKqc37z+Z0Xf7+UUV6D+xqnL6
E044oWN85bmHbMtll13W8TwDBgwo8tZRAXL65pPsVX3K6VvMtZ3PPffcaODA
gX33XvzmN7/Z12e+//3vR9tvv31fL3PxO2DIj3m++SRZfZNz+sGDB4vXXGn7
h+nTp+d6jpDRf5pPsv4hp4cm+g8kGD+QkOT0aed1mzLnrZvzu81zJc9tz5th
J38GkDxvPHnNG9u+v8yMPs91b8piPsvk7wSYP1d9Tfp29J9YVTn9TTfd1DG+
jjjiiNzHO2LEiI7nOeyww4q8dVSAnD4MRfeqPub0aA7m+TAUzeqbnNNfccUV
Hc9hsvusPvzww47Hf/rTn46WL1+e9+0Ei/4ThqLrH3J6aKL/QILxA4miOb3J
hpMZvcmMe50flzfDHp24Drt5jXbtx2Duo1rmaxehldOnZfQu7hubRP+JVZXT
v/DCC5l/t8Nmt91263gOcy0c+ImcPhxF9qrk9NDEPB+OIll9k3N66Zrrjjvu
6HjsNttsk/etBI3+E44i6x9yemii/0CC8QOJojl98trxWc/rLrLWTf48oHW8
yWve9LpGezLn1si9NHL6tIzefCYa96fNi/4Ts+X0/Q66PvW/i64T11133Y4x
NmvWrFzH+4UvfKHjOZ566qkibx0VIKcPS969qi2nb+85O1j6Dzk9umGeD0ve
rN6W02dd//ia0xubbrppx/Ncd911mR674447djzWnH+E7Og/Ycm7/iGnh5Y3
3305mvfi9OjxxdOiZ9+YQ1G5y4ydJ196KFr23muuhzNqqGhOn8zOTWaeRZEM
O/kzgVYen7zmTa8cy1zHXXutXHZO73NGb7B+jqXl9KddfEH00Oz+0aJF/75S
PThr1+i/L76w8DrRXPM5Ocby3KPg0ksv7Xj8+uuvX/StowLk9OHJs1dNy+lP
vyRf/yGnRzfM8+HJk9Wn5fR51z8+5/TXXnttoXPqp06d2vGYVVddNfrggw+K
vJ1g0X/Ck2f9Q06PMn381xXRfQuvjkbev3Oh6zBRVLc6bcpO0eSF17ge4qiR
Ijl92v1dszCZc5HHJV+vde2b9p8VZMkpTb7f/jy2e84WVWZO73tGb7B+jrXn
9LsePiaaPO2/Ovanybp36r7RLoeOyb1OfO+996J//ud/7hhnF110Uc/Hpu0b
TV155ZXSjwCKyOnDlHWv2p7T73rYmOi+aYN79p977l+5/5DToxvm+TBlzerb
c/qs659k//E5pzfWXHPNjuey3dNn6dKlqWut4cOHF3w34aL/hCnr+oecHmX5
47InnGe5VPNr5P39/zbW5rke7qiBIjl90Sx6dOJa83ky7OT9ZJPXvMlybnza
zxfKzrzLyunrkNEbrJ9jrZze7Dt77U+TZfa1edeJaftPU+ecc07Xx8ydOzf1
MRtssEEZHwEUkdOHK8tetZXTDzzquvz957Ax5PSwYp4PV5asvpXTF+o//7v+
8T2nv/nmm1PXT7/85S+jZcuWrfS1M2fOjH70ox+lfv3HH39cxlsLCv0nXFnW
P+T0KAMZPVVlHT1xg+iPS59wPezhuSI5vcmK8+bdJnc29z0tmmEnM/725zL5
dVbJa+Vkva5+VmXk9HXJ6A3Wz7FWTn/3lP1y71Nbe9W868QBAwak7gPXWmut
6JRTTonGjRsXXXjhhdE111wTDRw4MPVrTc2ZM0fpU0FZyOnD1muvanL6n+11
Q981JQr1n8PGkNOjK+b5sPXK6k1OL+o/f1v/+J7TGyaTT1tDffrTn4623HLL
vt/rXXvttbuutR544IES31046D9h67X+IaeH1EcfL3ee21Lh1elTdnI99OG5
sq5Pb8537yYtdy6SYSdfs1Xm+vVZmfeafB6T+Zv3nUWvr5Pm9GmfVdk/SygT
6+eYyelHjBpVaI/aqieefjrXa5rzsrbaaquue8Isdcsttyh9IigTOT1se1WT
05trPkv6z11THnb9FuEp5nnYsnqT00v7z4Qpc0s/5rJzemOXXXYptNa68cYb
S3pX4aH/wLb+IaeH1OSFVznPbKkwy9wLAeimaE6fvNZ7K6s316NpZcrmuczX
tefiyYw8j+T9ZFuVN79Ku/5OKw83x2uOu73M/2deu3UOv+28dklO3+3nGea1
zTHkrSqwfo6ZnP6BmbuL9qmmPvxwYe7XTv6OSNaaNGmSwicBDeT0MLrtVU1O
f//0QSX0n0Wu3yI8xDwPo1tWb3L6+x/cy8n6x0YjpzcOP/zwzOus73znO5nP
A0I6+g+MbusfcnpIcc9YylVxTj1siub0tnPku5XJx5OZYh5p19uxncdvY46l
2/n5vcqWgUty+ryfZ6+qAuvn2CMz54n3qJK96vjx46ONN96455hYZZVVoiOP
PDJ66623FD4FaCGnR0vaXvWoC04usf+Q1WNlzPNoScvqj75ghNP1TzdaOb0x
bdq0aNddd+275k3aWsvc98e8PuToP2hJW/+UkdPPmLHA9VuDI0vffcV5VkuF
XX9+n58TIl3RnN4wWb25HmOvbNDkz61z0JPn4ec9zyT53Ob8/aLM+07en9Zl
Tl9mRk9OX1zrPeWp2ffcU9o+1dRbyx4rdByzZs3qG5977713tMUWW/Rl99tv
v3106KGHRtddd130pz/9qdDzUm5r0aJFfeX6OCg/auGrj620xjv30vJy+rj/
PO78PVL+1BtvvNFXro+D8qMWvfr4Sv3nvJL7z7Ia9Z+lS5dGU6dOjW666aa+
P997773R4sWLnR9Xk4r+Q7VXcv1TRk4/fux9zt8X5abmvTjdeU5LhV3zX5rp
/N8B5Wcl858JEyZ05L29nsM85ogjjog22WSTaNVVV+0r89+DBw/u+7v2rx0x
YsRKz538+16v0/7Y1VdfvZTPYP78+X3H1Tr+5GuY/9+8v1GjRkUvv/xyrmPM
8vm1quycvorxw/o5rkcm31vqPlWS1VPNK3J6Klnte9WLRp+g0H/qk5VRusU8
TyWrPau/8LLhpfefOmX1lG7Rf6hkta9/9rlqsDinnzhuivP3RLmpBS/PcZ7T
UmHXM6887PzfAeVn1Sn/MXl5ew5tcnPXxxR6NXH9XMQfHnys9H2qqbKv14p6
4ro3SNP6HfDzLz9aqf9wDRw08/fmINe6Bs4Flw9j/QM19B+kaa1/hvxmW3FO
v3DGk67fDhzhujeU63rrvddc/zOAp+qS/5jr27Rn9OaernCP9XPsL1P+ED0w
Q34fWfaqSFOXPo3qmb3qpdfvHU19SH4fR/oP0jDPoxuT1V86ZlA0vYT7yNJ/
kIb+g25aWf3PDr6mcEa/9YHXRO9Of8H1W4FDrnNaKuwCuqlD/mOubZ+856vk
uvQoD+vnmMnp77rwXJV9KntV1KFPw50XfnNfNPGic+g/UME8D5s/Xj85mnAx
/Qc66D+wefHRR6JdzjuhcE5/5pGjyOkDd8+zVzjPaqkwa/LCq1wPf3jM9/zH
3KvW3Ie2PaM3936FH1g/x0xOv+BTw6PfTRnCXhWl871Pw62l586MFvyf4dH0
mbvRf1A65nnYvHn2jOiJz54SzZhF/0H56D+wMfuvudv+d+Gc3uzdyOnhOq+l
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
zZ49m5w+QL7l9I888kjqOPzrX/9a2mv4pslZvcY8f9ppp3WMj1/84helvgaq
4WtOv/XWWweR0xtNXv9o9J8tt9ySnL4hyOmhiZwDEowfSJDTQ4L+E9NYJy5f
vjz62te+lmt/ecwxx6TuJ3pdV7opmrpXTfbpZB5vrg/dQk4fHt9yeiNtHL7+
+uulvoZvmprVa8zzI0aM6Bgfxx57bKmvgWr4mNN3O2+hqTm90dT1j0b/kWb0
5PT+IKeHJnIOSDB+IEFODwn6T0xjnZi2z9xiiy16Hstxxx3X8biNNtpI6617
p4l71bQ+bb6v119/fcfXktOHh5zeH03M6jXmefP7P8nxcfvtt5f6GqiGbzm9
uZdxr4y1iTm90cT1T9n9x/xeFzl9c5DTQxM5ByQYP5Agp4cE/SemsU5M2xdM
nz6957G888470Wc+85mOx/7+97/XevveadpeNU+fJqcPT11y+hUrVpT6Gr5q
WlZf9jw/c+bMjrHxxS9+sdHXRWoy33L65Njae++9g8npjaatf8ruP88991zH
eGAfXF/k9NBEzgEJxg8kyOkhQf+Jlb1OnDBhQsc+4mc/+1nm4znwwAM7Hv/r
X/9a4Z37q0l7VXJ62PiW06fdv/Hf//3fS3v+OtDP6qvrP2XO83PmzEntUeef
f34pz4/q+ZTTDx06tGNsTZ06Naic3mjS+qfsfca9997LGqlByOmhiZwDEowf
SJDTQ4L+Eyt7nbj//vt37CMuvPDCzMdjrleefPyGG26o8da91pS9Kjk9bHzL
6S+55JKOMTh48ODSnr8umpLVlzHPm/uen3DCCan9aeDAgSUdKVzwJacfP358
x9gy9ys2v0sYWk5vNGX9U/Y+47LLLmON1CDk9NBEzgEJxg8kyOkhQf+Jlb1O
NOeeJvcR8+fPz3w85to3ycf/wz/8QzDXnWjXhL0qOT1sfMvpf/KTn3SMwTvu
uKO056+TJmT1eed583PmVu26667WazwPGTJE8chRBR9y+rfffrvr3PfQQw8F
mdMbTVj/lL3PGDZs2EpjoX///qU9N6pHTg9N5ByQYPxAgpweEvSfWJnrxCVL
lnTsKT//+c/nPqa0Peujjz5a9luvhbrvVcnpYeNTTn/SSScxBhPqntXnmefP
O+88ay7fqu9+97vRTTfdpHrcqIYPOf0+++zTMcZuvfXWvr+77777gs3pjbqv
f8reZ5hcvn0sHH/88aU9N6pHTg9N5ByQYPxAgpweEvSfWJnrxGnTpnXsKX/8
4x/nPqYddtih6741RHXeq5LTw8annD5t/OW5ZldT1Tmr18jp99xzz+i3v/2t
2jGjOq5z+quvvrpjfB155JF///vQc3qjzuufsvcZybFw7bXXlvbcqB45PTSR
c0CC8QMJcnpI0H9iZa4T0/ace+yxR+5jOuiggzqeJ/R79dV1r0pODxtfcvrj
jjuuY+ytvfbaJbzDZqhrVq+R07dqyy23VDlmVMdlTm/ue9BrziOnj9V1/aOd
08+cObO050b1yOmhiZwDEowfSCTzn7T1LNAN/SdW5jrR3PfMdm5YVsOHD+94
HnMfv9DVca9KTg8bH3L622+/PXXs3XPPPSW9y2aoY1afd5439/Ns1Q033BCd
euqpqb/f1V7jxo0r/bhRDZc5/bbbbtsxlh5++OGVvoac/hN1XP+Uuc944403
OsbCU089FT399NN9f79gwYJo6dKlpbwWqkFOD03kHJBg/ECCnB4S9J9YmevE
o446quPfoMk58jrnnHM6nuewww4r+63XUt32quT0sHGd0z/xxBOp4y7ULKyX
umX1Zc3z5v7mI0eO7JrVz507t4SjRdVc5fRnnXVWxxgaNWpUx9eR06+sbuuf
MvcZc+bMyfy7PjvuuGN02WWX9d2jGP4ip4cmcg5IMH4gQU4PCfpPrMx14oEH
Htjxb/Dcc8/NfUwXXXRRx/MccMABZb/12qrTXpWcHjYuc/rXX389dcxts802
Jb/LZqlTVl/2PN8tK9t4441Lew1Ux0VOb36mkxw/u+++e+rXktN3qtP6p8z+
Y+5dnTWnby9zr9kVK1aUcgwoFzk9NJFzQILxAwlyen898sgj0Zlnnhltvvnm
0RprrLHS92SdddaJhgwZEt12221Oj5H+EytznWi+r1nOEevlkksuIafvoS57
VXJ62LjK6ZcsWdI11zDXF4BdXbJ6jXk+ba1p6q677ir1daDPRU6fNna6Xa+E
nD5dXdY/ZfaftOtKZq0111yz72eM8As5PTSRc0CC8QMJcnr/jB49uiOXt5XJ
7E2m7wL9J1bmOvHggw/u+B6be/PldcEFF3Q8D9e96VSHvSo5PWxc5PQmo19v
vfVSx9szzzyj9E6bpw5ZvdY8b64rkRw75ufUqJeqc/pjjz021893yOm7q8P6
p8z+s++++xbO6Vs1b968Uo4F5SCnhyZyDkgwfiBBTu+X/v37F1o3fu5zn+v7
3lWN/hMrc5143HHHdXx/i1yf/vTTT+94HvO7u+jk+16VnB42Vef0JqNff/31
yTBK4ntWrzXPp12b7Yc//GHprwNdVeb0kyZNyp25k9Pb+b7+Kbv/2K43v3jx
4r57X++0007WPRf8QU4PTeQckGD8QIKc3i/mXPpk/m6ye3P9m1aZP5v/Py2r
//Of/1zp8dJ/YmWuE88+++yO7+3QoUNzH9OwYcM6nsfcWxbpfN6rktPDpsqc
3pbRu/q9ribwOavXmucnTJhAv2qAqnL6d999t9B4Iafvzef1j6t9xrRp07rm
9Iwff5DTQxM5ByQYP5Agp/eLydnNZ26uZWMye9vXpZ17X/XvjNN/YmWuE2+8
8caO7+see+yR+5gGDRrU8TzmudGd9l71gw+K7VXJ6WFTVU5vrjnfLaOfPbvY
fWjxCV+zeq153txfJzmOvv71r5f+OtBVVU6fds2S+fPn93wcOX02vmb1LvcZ
L730UvSNb3yjY/ysuuqq0UcffeTkmLAycnpoIueABOMHEuT0/slz/RqT5yfP
qa8S/SdW5jpx1qxZHf8GN9hgg9zHtNFGG3U8z8yZM8t+643jY1ZPTg+bKnJ6
W0Y/ffr0it5p8/mY1WvN8+Y6bMmx9NOf/rT014GuKnL6MWPGdIyVjTfeODrg
gAN61nbbbUdOn5GPWb3rfcbEiRNT5z3z+0Bwj5wemlz3H9Qb4wcS5PT1lnY+
WtY8rwz0n1iZ60Tzeaadu5NX2r7irbfeKvutN5JvWT05PWy0c3qT0Xf7/f8p
U6ZU+E7D4FtWrzXPp42no446qvTXga4qcvpu/afM4rpdMd+yeh/2GWn3TD/p
pJOcHhNi5PTQ5EP/QX0xfiBBTl9/ye9XlfeTpf/Eyl4nfu973+v4vj7++OOZ
j2fhwoUdj19zzTU13npj+ZTVk9PDRjOnf/3117vmWpMnT674nYbDp6xeY54f
MWJE6ph68MEHS30d6COnbx6fsnof9hlHH310x3jZZ599nB4TYuT00ORD/0F9
MX4gUVZOb87rbt3jdPPNN4/WWGONvsea67KYP5u/65Uzpd33Mu99Uc312dsf
b16/F3Nc5vjMcbbfn9X82RxTnrV78j6wyczc/L153jIzdXJ698peJx5yyCEd
31dzf9ms/ud//qfj8eb3v5GPL1k9OT1stHL6V155pWumNXfuXAfvNCy+ZPW2
ef7SSy/tGw/XXntt5vc1fPjw1DG11VZbZX4O+IOcvpl8yep92GdceOGFHeNl
l112cXpMiJHTQ5MP/Qf1xfiBhCSnNxm6ybfbs+1eZXLvbtm7OY7k19vupZom
eSy97sWa9rOBtDI/f8jyM4Pk59fKzM1jk9eSLyNTT/vMqkT/iZW9Tvzd737X
8X0114bOaosttuh4/Pjx4zXeeuP5kNWT08NGI6dfvHhx1/nQ9Jd+/foVKuTj
Q1Zvm+fbzzto/Tz4pptu6ru/p7nO2rvvvtt33SRzn+GzzjrLus568skny/74
UIEqcvozzjijcO23334dY23TTTft+Dp08iGr92Gfcf7553eMocGDBzs9JsTI
6aHJh/6D+mL8QEKS0yfPHc9atnPck3u+LOfDt6Rdq71btm7Om0nLzXsdd6+s
Pi2nN49p/X5B2Tm9+TlJ+/OZ3yeoEv0nprFOTBszp556as9jMfeKTT5utdVW
03rrQXCd1ZPTw0Yjpy8yt2cp5Oc6q+82z7/wwguljYvrr79e6+ODsipyeom0
fQ33kc3OdVbvwz7j0EMP7RhDJ598stNjQoycHpp86D+oL8YPJKTn07dn2CYz
No9vPZ/5e5Odm3PRk89pzmNPk5b9Z82nkte86ZZZp+Xm5ucD5lhbObx5TXMs
aV9nk/z8zGeSPK6ycnrzs4bk81X9e7v0n5jGOnHkyJEd3991112357FsueWW
HY8z1xmAjMusnpweNuT0zecyq+82z59zzjni8fDlL385GjdunOZHB2Xk9M3n
Mqv3YZ/x7W9/u2MMTZo0yekxIUZOD00+9B/UF+MHEtLr07ey+V7S8vdu56Yn
r11jXiOL5ONM7p4mec6+7Rz0tOvV2K6lk/z82jN6c3xZrtOfRfI8+jyfU5no
PzGNdeKHH34YfeUrX+n4PtvuXXX44Yd3fP2XvvSl6C9/+YvyJxAGV1k9OT1s
yOnD4Cqrt83zN954Y/TTn/600Fg47LDDoqVLl2p+ZKgAOX0YXGX1rvcZN9xw
Q8f4+fznP+/seLAycnpoct1/UG+MH0iUdR/ZLJL5eLe8O3nNeHNOey/Ja950
e0zy68y5/r0krwFvO560z6+V0ec91938jMA8X6vM52U+m7TrobjI6A36T0xr
nXjdddeljqcNNtig7xrAL774YvTSSy9FY8eOTT2P3hTXEyiXi6yenB42Gjn9
wQcfrFKQcZHVZ5nn582b1/c7YNtss0301a9+NbUPff3rX4922mmn6JJLLomW
LFmi9RGhYuT04XCR1bvcZ6T93rKpY4891snxoBM5PTSRc0CC8QOJKnP65Dn1
3TLytHuj9jpnP3ltmW65dfLc+KLX1OmWuXfL6bud22/T7bnay/zso+pr3bSj
/8Q014lp58hnrWOOOabiTyIMVWf15PSw0cjp4a+qs/oi8/wHH3wQvfLKK33/
bf7X/H4YmomcPixVZ/Vl7TNMtn7iiSf2nduSxc033xx94QtfSF1Tmf4GP5DT
QxM5ByQYP5CoMqdPnpeQ536yve6PmrzmTVqmlXz9PPdcTZ6H3+36+mmfX69r
2nfTK6dv3ROg171tNdF/YtrrxIMOOih3Rs/5Prr096rP/P21yOlhQ04fniqz
euZ52JDTh6fKrL6s/tP+/Te/f2rurzFt2rS+3N5cG9K8xvz586PLL7882mST
Tbqure+//37xsaA85PTQxPoHEowfSFSZ0xtZnzt57r3J4btJZujdcvHkNd3z
nOPefs9c22ukfX6269nbZDmfvv3nBi7yevpPrIp1otk7mHvu9RoL3/ve96Lb
b7+9oncetqqy+jw5/UcffdRRaDZy+jBVldUzz8OGnD5MVWX1ZfSf2bNn5z7X
Ja0uvvjiMj46lIicHppY/0CC8QOJsnN6kxWb/Ntk4ibLNpU81z3rcycf1y3v
Tl6TptvXmevstH9d3vu5Zvm5QdrnV9Z1aVrXqzefbdo16s359WXcozYP+k+s
qnXixx9/HF111VXRgAEDou985zt933czFn7yk59EhxxySDRx4sQK3i3aVZHV
58npER5y+nBVkdUzz8OGnD5cVWT1ZfSf4447TpzRm+vgwD/k9NDE+gcSjB9I
lJXTm2w8ea2aLGWTvJ9st+vZt+f55r+7nVeevDa9tNJo/z5CO5PXJ3+WYd5j
lefV039irBPDpr1X/cMf7ienR1fk9GHTzuqXLXuMeR5d+Z7TG9zPWo/2+qeM
/vP6669Hhx12WKG93v777x+9+uqrJX1aKBv7L2gi54AE4wcS0pzenCteJJ/P
8txp95NNZlXJa97YrjlfZkbvQ07f7fW6XTtfA/0nxjoRVWT1QBpyelSR1QNp
6pDTQ1cVWX0ZzP1fzXnx++23X/T9738/dW/3pS99Kdpmm22i8847L/M9Z+EO
+y9oIueABOMHEpKc3mT0ade0ad3f1DxX8tzuvBl28mcA5nnbJa95Y16zmzIz
+jzXvdGWvO6+qarOqaf/xFgnwqjy3rJACzk9jCrvLQu0kNPDqPLesmVatmxZ
tHjx4ujFF1+M3nnnHZXXgB72X9BEzgEJxg8kiub0JgdOu+aKLSc38mbYyfvJ
mtdo134M5jrdZb52ES5y+rTfO+j1fSgL/SfGOhEtZPWoGjk9WsjqUTVyerTU
NatHfbH/giZyDkgwfiBRNKdPXjs+63XRi2TYyZ8HtI43ec2b5Ln2Scnr02tc
79lFTm8kX7PXZ1EW+k/Mtk6c/S+nRfd++8zo7u+dZa1HJsyLHnnqdaoBNefx
Z6IJdx9Sav128i+jWXP79e1Vn//TbdHCN+ZSVF8tuuVucf+ZfdE05/9uqHJq
tkL/mXjvgdGsh+P+89zr9B+qrW6aJO8/o+g/TSmN9U9f/5m7I+sfqqOeffSB
aMag06w1a8/Tokc3PJWcHrm8tuQv0cxH/hg99PAfnPdVqp5lxs6sR1+IXn/j
L66HM2qoaE6fzM5NZp5FkQw7+TOBVgadvOZNr9zd3Ie2/evNufplI6cPU1pO
f8MmF0T/tdu10U/3vIGiSqsdDx4TnX35udGISetEh437PkVFl16/N/2HqqR2
O3xMdOFVZ0Ujfud+3FN+1KVjBtF/qMrqvCvOjk67+7vOxz1Vvzr9lm2i8Wec
GM3/x5PJ6ZHqo48+jm4YPz/a+5i7nPc6qlm1+5Hjo6vvmNc3xoAsiuT0addZ
ycKcb1/kccnXa137pv1nBSaD7yV5HXfbPWeLcpHTm/sEcN0bt9pz+qnfGOl8
LqCaXzscdH102LX7O9/3UO6rPaen/1BV1VE3DnQ+9in31Z7T03+oKmrAEWOi
YTfv5nzsU/Ws/751q+ihX5xGTo+VzF/4hvPeRjW/dj18XPTwk6+5Hu6ogSI5
fdEsenTiWvN5Muzk/WST17wZneHc+LSfL5iMu0wucvrk7xWY4j6y1Wrl9Pd9
8wzn/Z8Kq464jqw+9Grl9PQfquo65jdk9aFXK6efQv+hKq6h/KyQEtRD/3Ua
OT36zF9ERk9VW2T16KVITp92/navvNvkxuY+r0Uz7NGJjL/9ucx59VklM+2s
19XPSprT5z2W5Oei9XsC3ZDTx1o5veueT4VX2x04Jjpk7LrO9zuUu2rl9K7H
IhVmHT7e/b8BymH/+d+c3vU4pMIs1+Ofqm/9961bR/M/czI5feDMdUhc9zEq
vDLn1S9f/pHr4Q+PlXV9enO+ezcme07ew7VIhp18zVaZ69dnZd5r8nlM5p/1
OjG9vk6S05ufdZhjM+8ny889ktfxaf3MQuP+uN2Q08dMTn/9phc47/lUmHXo
hWc43+9Q7srk9PQfylUdc9lJzv8NUA77z5hB9B/KWR0+6nTn/wao+taEM04k
pw+cuR696z5GhVnXjH3S9fCHx4rm9GkZscnqzfVoWueEm+cyX9eeiycz8jyS
95NtVd5cenTKOeitc+vN8Zrjbi/z/5nXbp3Db8vQJTl98v2Zz8pcd9+8fnsl
74eb9/o/ZSKnj5mcnnumUa5qh4PHON/rUO7K5PT0H8pV7XL4dc7/DVAO+8+Y
QfQfymm5/jdA1bdG3rItOX3g9h420XkPo8KsPYZOcD384bGiOb3tHHlbhpy8
7kweadfbsZ3Hb2OOpdv5+b3KZOXdSHL6osfTyvTNz0iqRk4fe+Gep533eirs
Ovq2nzvf71Bu6uzLD3U+/qiw6yj6T7B11mWHOx9/VNh1DP2HEtSSxxe43kbC
kdeW/MV5/6LCrj8tfdf1PwN4qmhOb5is3nZud/t56q1z0JPn4We93kxL8rkl
2bR538n707rM6c1js3yeyTI/+6jqvrFJTczpW/8m8tTkq6Y67/NU2HXsjYOc
73UoNzX8wuOdjz8q7Bp2wz7O/x1QjvrP+Sc4H39U2PWrm/dw/u+Aqm/NvX9i
ob0fVf+aNPUJ5/2LCrsmPzDP+b8Dys968skn+6r15xtuuCH1ujK2Mo854IAD
op/85CfRZz/72b4y/7377rv3/V371x533HErPXfy73u9Tvtjv/a1r5XyGTz4
4IN9x9U6/uRrmP/fvL+RI0dG8+bZ/y0V+fzSjse8lvn8zGsnn6/12WY5Hu1a
tGhRX7k8Bh/qgd886LzPU2HXMHL6YOvXlxztfPxRYRc5fbh1Ej8npBzXsb9h
/UMVr7nTfut8H0m5qbvJ6SnHdc80cnoqvZI5vc+VzKxNTu36mEKvJub0Rbzy
5CvO+zwVdg29bWvnex3KTR1/7V7Oxx8VdnHdm3Dr+Gv3dj7+qLDraNY/lKCW
vfZSqb+XjfrgujeU6+K6N+hGkk1WyVzfpj2jN/d0hXv/f3t382JlGYcB+F8K
hHbtiwQXKmlESeDGTEfLQVA3kehWFFGp/AgsaAZTmzQaEj+YHD8QFU0zslqY
grYIW+hMPHkGxE/qxdt43jPvdcG9aCcPN3ecH8M50/F7b55V7Z2X7mbOwI7q
n3Okbmp3ULqbOX5HtvOp3UHpbmYt3lW9/9K/WT80s/bHRyp7bWBv9R2TbmbB
ypHa9afF+uFO3/tu+8d/Y7XGb6byJHf6Bz5avb/63ks3s2LrmuqfdaRuVi7b
XL2H0s0M2p/OZ82yTdV7KN3Mkg3rqvdf+jffjGyo/fGRyj4ePld9x6Sb2fvd
ldr1p8Xafqfv/T5q73doH77R9377lXZwp3/gz9t3ytx5O6tvvnQvtT/nSP0s
+uIl+yNVUrv7Uj/v73mxLJi3o3oXpVuZuWhXWbxnRvX+S39m7fArZfLu3dof
H6nszt3JMmfJnup7Jt0L/Js23+mf9nf0vf9u67+3i9zpH3Xu4MXqmy/dyuDu
+dU/60g7smrTiup9lG7F/sj9rNs4WL2P0q0s3r6weu+lf3Pp9KHaHxtpiRPn
rlXfM+lWrvz6R+3a03JtvNP3/oZ+cHDwkfu877tpJ3f6J10YvVR9+2X6Z/bA
zrLi8znVP+dIu7Jq6+Ly5uv+rlX+/wx+5kYvj2bdxhVlwfzt1bsp0ztTf0fv
Ri/PmLXDL7vR84Txs9fK3CVfVt83mf65fPVW7brTB9p2px8dHX3qfb6Xbdu2
1f7n8Rh3+qebnJgsuz84UN5+49Pq/y+Q6ZeBjWurf86Rdmf1e74vWp5/Zi/d
WQY2fViW7n2heselnVm+Z0ZZs9z+yPPPrHd2lXc3rPddN/JMWT/06tT30U9O
TNT+mEhLTUz8XT4ZPlfmL99Xfe9keuWtlSNl91cXa1ecPtK2O33v3/L4fb73
XTfb3OhbyZ3+v/3+w/VyfPhU+X7oVDkz9nM5c/GGSOMcOn2+7D4wXHYc/LaM
Xz5crtw8JdI4Jw+Pla+37C8jm/eXo/tOVu+z9FcOnT5bho4eL3uP7C8nfjxa
vc/SX+ntz8iWfVP7c2zkdPU+S3/l/v4MHRu7tz9HqvdZ+is/XR0v50+Mlgsn
D5Vb136r/XGQPnP95u0yfuaXMnbqavUtlP5MrzvH73Xoxs2/ateZPtS2O33P
w78b2/vN2Lb9+3jAnb4Z70SijTtN/7A/JPSHhP6Q0B8S+kNCf0joD4k23n96
fzu/cOHCqe/Aod3sTzPeiUQbd5r+YX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxP
M96JhJ0mYX9I6A8J/SGhPyT0h4T+kNAfEu4/JOxPM96JhJ0mYX9I6A8J/SGh
PyT0h4T+kNAfEu4/JKbj/vwDMHpHyA==
     "], {{0, 332.}, {757., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{144, 144}],
    BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVlgdUVMcax+fe7Y22C9JZekc6C0hdqoD0KirL7rLUBZaOXQlGIKKoiIAi
SKgKllAkFsSChSCggD0gQUCJwYIooLy7EmPy3jnvnfed8935zXdnvpk735xz
/8qRiX5RMAAgBY88/FgZDgIBK8tfDOkE8lNieHwux52fyuVxBYxICAlGk5AH
IEWzkpLiYWRUAj9V4OfqSA8JDaPjRgEMxIEYUANyLHZKkoOPj6dw9Nf2n/Z+
CAgTgrv6wlz/+f6/mjiHm8IGAPJBOJGTwk5AuBNhJ3aSIBUAGI2wakZqkpC1
EKYJkA0ivErIvGUWzqVFLjPny5gAPybCmQDgySyWgAcAMQeJ09PZPCQPsRph
Qz4nho/wPYRt2dEsZB6JhrBeQkKikO0R1or8Wx7eP3JG/pWTxeL9xcvf8sUk
mYnxiQK6J9OJzmTFx0QKWKlczv95Nv/TEuLTvq4nrACZyw/0F+4bcXnABIkg
HnEBoANPpOeEtEzAQmIxIBKJskAq4AJOKjczVZiAmZiUJYjhRafSHZAqcunu
fLaBHt3Y0MgCAOGdWF7m4+JyrduLv8V23kBmdwGAUvsW8zMF4LQJADLK32L0
h8i5IreudZKdJkhfjgnLCzCACEQBDcgARaCK7F4fGANzYA3sgTNYDbxBAAgF
6wEbRIMEZN8ZYBPYDnJBPtgLDoJSUAGOgzpwEpwBbeA8uAyug9ugDwyCR2AE
jIOXYAa8BwsQBOEgCkSFZCAlSB3ShYwhBmQLOUOekB8UCkVAPIgPpUGboJ1Q
PlQElUKVUD10GjoHXYZuQv3QA2gUmoLeQPMwCibDNFgB1oBXwgzYAfaAA+B1
MA9OhrPhHHgPXAJXwSfgVvgyfBsehEfgl/AsCqBIKCmUMkofxUAxUd6oMFQU
SoDagspDFaOqUE2oDlQ36i5qBDWN+ojGoqloOlofbY12Qwei2ehk9BZ0AboU
XYduRV9F30WPomfQnzEUjDxGF2OFcceEYHiYDEwuphhTg2nBXMMMYsYx77FY
rBRWE2uBdcOGYmOxG7EF2CPYZmwnth87hp3F4XAyOF2cDc4bx8Kl4nJxh3En
cJdwA7hx3Ac8Ca+EN8a74MPwfPwOfDG+AX8RP4CfwC8QxAjqBCuCN4FDyCIU
EqoJHYQ7hHHCAlGcqEm0IQYQY4nbiSXEJuI14mPiWxKJpEKyJPmSYkjbSCWk
U6QbpFHSR7IEWYfMJIeT08h7yLXkTvID8lsKhaJBsaeEUVIpeyj1lCuUp5QP
IlQRAxF3EY7IVpEykVaRAZFXogRRdVEH0fWi2aLFomdF74hOixHENMSYYiyx
LWJlYufEhsVmxaniRuLe4gniBeIN4jfFJyVwEhoSzhIciRyJ4xJXJMaoKKoq
lUllU3dSq6nXqOM0LE2T5k6LpeXTTtJ6aTOSEpKmkkGSmZJlkhckR6RQUhpS
7lLxUoVSZ6SGpOZXKKxwWMFdsXtF04qBFXPSctL20lzpPOlm6UHpeRm6jLNM
nMw+mTaZJ7JoWR1ZX9kM2aOy12Sn5Why1nJsuTy5M3IP5WF5HXk/+Y3yx+V7
5GcVFBVcFZIUDitcUZhWlFK0V4xVPKB4UXFKiapkqxSjdEDpktILuiTdgR5P
L6Ffpc8oyyu7KacpVyr3Ki+oaKoEquxQaVZ5okpUZahGqR5Q7VKdUVNS81Lb
pNao9lCdoM5Qj1Y/pN6tPqehqRGssUujTWNSU1rTXTNbs1HzsRZFy04rWatK
6542VpuhHad9RLtPB9Yx04nWKdO5owvrmuvG6B7R7dfD6Fnq8fWq9Ib1yfoO
+un6jfqjBlIGngY7DNoMXq1UWxm2ct/K7pWfDc0M4w2rDR8ZSRitNtph1GH0
xljHmG1cZnzPhGLiYrLVpN3ktamuKdf0qOl9M6qZl9kusy6zT+YW5gLzJvMp
CzWLCItyi2EGjeHDKGDcsMRYOlputTxv+dHK3CrV6ozVH9b61nHWDdaTqzRX
cVdVrxqzUbFh2VTajNjSbSNsj9mO2Cnbseyq7J7Zq9pz7GvsJxy0HWIdTji8
cjR0FDi2OM4xrZibmZ1OKCdXpzynXmcJ50DnUuenLiouPJdGlxlXM9eNrp1u
GDcPt31uw+4K7mz3eveZ1RarN6++6kH28Pco9XjmqeMp8Ozwgr1We+33erxG
fQ1/TZs38Hb33u/9xEfTJ9nnZ1+sr49vme9zPyO/TX7d/lT/Df4N/u8DHAMK
Ax4FagWmBXYFiQaFB9UHzQU7BRcFj4SsDNkccjtUNjQmtD0MFxYUVhM2u9Z5
7cG14+Fm4bnhQ+s012Wuu7ledn38+gsbRDewNpyNwEQERzRELLK8WVWs2Uj3
yPLIGTaTfYj9kmPPOcCZ4tpwi7gTUTZRRVGTPBveft5UtF10cfR0DDOmNOZ1
rFtsRexcnHdcbdxSfHB8cwI+ISLhHF+CH8e/mqiYmJnYn6SblJs0kmyVfDB5
RuAhqEmBUtaltKfSkJ9vT5pW2ndpo+m26WXpHzKCMs5mimfyM3uydLJ2Z01k
u2T/uBG9kb2xa5Pypu2bRjc7bK7cAm2J3NK1VXVrztbxba7b6rYTt8dt/2WH
4Y6iHe92Bu/syFHI2ZYz9p3rd425IrmC3OFd1rsqvkd/H/N9726T3Yd3f87j
5N3KN8wvzl8sYBfc+sHoh5IflvZE7ektNC88uhe7l793aJ/dvroi8aLsorH9
XvtbD9AP5B14d3DDwZvFpsUVh4iH0g6NlHiWtB9WO7z38GJpdOlgmWNZc7l8
+e7yuSOcIwNH7Y82VShU5FfMH4s5dr/StbK1SqOq+Dj2ePrx59VB1d0/Mn6s
r5Gtya/5VMuvHanzq7tab1Ff3yDfUNgIN6Y1Tp0IP9F30ulke5N+U2WzVHP+
KXAq7dSL0xGnh854nOk6yzjb9JP6T+Ut1Ja8Vqg1q3WmLbptpD20vf/c6nNd
HdYdLT8b/Fx7Xvl82QXJC4UXiRdzLi5dyr4025nUOX2Zd3msa0PXoyshV+5d
9b3ae83j2o3rLtevdDt0X7phc+P8Taub524xbrXdNr/d2mPW0/KL2S8tvea9
rXcs7rT3WfZ19K/qvzhgN3D5rtPd6/fc790eXDPYPxQ4dH84fHjkPuf+5IP4
B68fpj9ceLTtMeZx3hOxJ8VP5Z9W/ar9a/OI+ciFUafRnmf+zx6Nscde/pby
2+J4znPK8+IJpYn6SePJ81MuU30v1r4Yf5n0cmE693fx38tfab366Q/7P3pm
QmbGXwteL70peCvztvad6buuWZ/Zp+8T3i/M5X2Q+VD3kfGxez54fmIhYxG3
WPJJ+1PHZ4/Pj5cSlpaSWALWFymAQhyOigLgTS0AlFAAqH2IrhJZ1mx/ahzo
b2rnK4PR+G/ccWxZ130xcwBq7RH5uw0Az04AjiKujjAZaYWSMcAewCYmf/mf
lhJlYrxM85lLS4vTAOC4SCsLIKEWhbcgCyP9Ty0A0tBd1opCwyIK+piOkO6s
ktn27zrtX+aSzgg=
       "], "RGB", "XYZ"], Interleaving -> True, 
     MetaInformation -> Association["XMP" -> Association[]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{314.30572916666455`, Automatic},
   ImageSizeRaw->{757., 332.},
   PlotRange->{{0, 757.}, {0, 332.}}]], "Input",ExpressionUUID->
  "f81109be-f686-47c4-ab1d-870adbd70f8e"]
}], "Text",
 CellChangeTimes->{{3.817653995305171*^9, 3.817654012731628*^9}, {
  3.817702032127182*^9, 3.8177020639407597`*^9}, {3.817708223180002*^9, 
  3.81770822920189*^9}, {3.8177187574450407`*^9, 
  3.817718760704892*^9}},ExpressionUUID->"9d8c7921-4609-4605-8d99-\
0fc1d75eca39"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitLayerKagome18", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"i", "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "16", ",", "2"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer0Kagome18", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "5"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer1Kagome18", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "4"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Layer2Kagome18", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "17"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Layer3Kagome18", "=", "InitLayerKagome18"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Arrays", " ", "start", " ", "at", " ", "1"}], "..."}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"InitLayerKagome18", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"InitLayerKagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"InitLayerKagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "InitLayerKagome18", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer0Kagome18", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer0Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer0Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer0Kagome18", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer1Kagome18", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer1Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer1Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer1Kagome18", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer2Kagome18", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Layer2Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", "1"}], ",", 
       RowBox[{
        RowBox[{"Layer2Kagome18", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "Layer2Kagome18", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Layer3Kagome18", "=", "InitLayerKagome18"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ComplGraphKagome18", "=", 
    RowBox[{"Union", "[", 
     RowBox[{
     "Layer0Kagome18", ",", "Layer1Kagome18", ",", "Layer2Kagome18", ",", 
      "Layer3Kagome18"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HamiltonianKagome18", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "ComplGraphKagome18", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"HamiltonianKagome18", "+=", 
    RowBox[{"termat", "[", 
     RowBox[{
      RowBox[{"ComplGraphKagome18", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"ComplGraphKagome18", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "18"}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EnergyKagome18", "[", "state_", "]"}], ":=", 
   RowBox[{"ExpVal", "[", 
    RowBox[{"state", ",", "HamiltonianKagome18"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8176450732690487`*^9, 3.8176450924926357`*^9}, 
   3.81765228003139*^9, {3.817653898685669*^9, 3.817653899938911*^9}, 
   3.817654148883*^9, {3.817654804709056*^9, 3.8176548050477552`*^9}, {
   3.817658643204401*^9, 3.817658648905807*^9}, {3.817659521667327*^9, 
   3.8176595237059717`*^9}, {3.817702074824395*^9, 3.817702162406188*^9}, {
   3.817702292106967*^9, 3.8177023919307127`*^9}, {3.817702428123551*^9, 
   3.817702570395302*^9}, {3.817702600715316*^9, 3.817702601820963*^9}, {
   3.817702635594448*^9, 3.817702847724224*^9}, {3.817702885627825*^9, 
   3.817702900475485*^9}, {3.817702938012816*^9, 3.8177029418985786`*^9}, {
   3.817704044468401*^9, 3.817704045444701*^9}, {3.817704130598421*^9, 
   3.817704156213203*^9}, 3.817704211751828*^9, 3.8177042645999327`*^9, {
   3.817704803672532*^9, 3.8177048037503223`*^9}, 3.817705242229074*^9, {
   3.8177066997801027`*^9, 3.8177067690140247`*^9}, {3.81770683999387*^9, 
   3.81770684037878*^9}, {3.8177068900605*^9, 3.817706942384655*^9}, 
   3.817707405437664*^9, {3.817707519856946*^9, 3.817707519936081*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"748112ef-d125-46c1-9d14-5e57718e1e10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ground state and ground state energy by exact diagonalization (passed)\
\>", "Section",
 CellChangeTimes->{
  3.817652738057847*^9, {3.8176589093690042`*^9, 3.817658975651986*^9}, 
   3.817706954476304*^9},ExpressionUUID->"64e1b48b-0a02-4e8f-9287-\
417dd05b542f"],

Cell[CellGroupData[{

Cell["Periodic chain 6 (passed)", "Subsection",
 CellChangeTimes->{{3.8176589035072803`*^9, 
  3.817658930120308*^9}},ExpressionUUID->"7e9167db-a5e7-42ac-8655-\
c5ab7133291c"],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.817652974219371*^9, 
  3.817652986272253*^9}},ExpressionUUID->"4351e5f9-9d3c-441c-8637-\
239e79144d8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\n\nwith \
open('/Users/Georgi/HVQE/data/chain/periodic/own_graph/ops/energy/6/graph_\
input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\nlayers=layers_input\n\
init_layer=init_layer_input\n\nnodes=[node for edge in complete_graph for \
node in edge]\nnodes=set(nodes)\nn=len(nodes)\ndel nodes\n\n\
gs=qem.ground_state(complete_graph,1,return_state=True)\nprint('GsEnergyChain \
=', gs[0])\nprint('GsChain =',np.around(gs[1][:,0],decimals=6).tolist())\n\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.817652771656703*^9, 3.817652835308811*^9}, {
   3.8177202945930233`*^9, 3.8177202947840776`*^9}, 3.817723230934079*^9, {
   3.817750302383864*^9, 3.81775034914188*^9}, {3.817750483996369*^9, 
   3.817750484847002*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"06675040-e109-4912-9d03-5dd2c181426c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nGsEnergyChain = [-2.80277564]\\nGsChain = [0.0, -0.0, 0.0, \
0.0, -0.0, -0.0, 0.0, 0.062921, 0.0, 0.0, -0.0, -0.207813, 0.0, 0.207813, \
-0.062921, -0.0, -0.0, -0.0, -0.0, 0.207813, 0.0, -0.478546, 0.207813, 0.0, \
0.0, 0.207813, -0.207813, 0.0, 0.062921, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, \
-0.062921, -0.0, 0.207813, -0.207813, 0.0, -0.0, -0.207813, 0.478546, -0.0, \
-0.207813, -0.0, 0.0, 0.0, -0.0, 0.062921, -0.207813, -0.0, 0.207813, 0.0, \
-0.0, -0.0, -0.062921, -0.0, -0.0, -0.0, 0.0, 0.0, 0.0, -0.0]\\n\"\>"}], ",", 
   
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.817652751610965*^9, 3.8176528377898273`*^9}, 
   3.817720302535055*^9, 3.817722167797029*^9, 3.81775023019939*^9, 
   3.8177503586281433`*^9, 3.8177504872929487`*^9, {3.8177505264837017`*^9, 
   3.817750553772571*^9}, {3.8177505846104717`*^9, 3.817750606697646*^9}, 
   3.8177511672025833`*^9, 3.8177531145673122`*^9, 3.817791558218731*^9, 
   3.817794812077839*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"f978197a-4344-43e8-abce-90efd82d05a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.817653049735918*^9, 
  3.817653057464223*^9}},ExpressionUUID->"646ab14e-2292-4dc9-bf3a-\
fe5675568f2f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigSysChain", "=", 
   RowBox[{
    RowBox[{"GroundState", "[", 
     RowBox[{"HamiltonianChain", "[", "6", "]"}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GsEnChain", "=", 
  RowBox[{"EigSysChain", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"GsChainMat", "=", 
  RowBox[{"-", 
   RowBox[{"Chop", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"EigSysChain", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"EigSysChain", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ".", 
       RowBox[{
        RowBox[{"EigSysChain", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.81765262055214*^9, 3.817652689156076*^9}, {
   3.8176528749417257`*^9, 3.817652890681842*^9}, {3.8176529430283403`*^9, 
   3.8176529438609753`*^9}, 3.817653078179079*^9, {3.817727923335425*^9, 
   3.817727926101738*^9}, {3.817727958509328*^9, 3.8177279613060417`*^9}, {
   3.817728127565189*^9, 3.817728128029758*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0a375da9-0ccc-474c-bcff-d0c28053c039"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "2.8027756377319943`"}], "}"}]], "Output",
 CellChangeTimes->{{3.817652669160962*^9, 3.817652689716342*^9}, 
   3.817652891085466*^9, 3.81765307937285*^9, 3.8176541562150583`*^9, 
   3.817722176641523*^9, 3.817727927290946*^9, 3.8177279622349253`*^9, 
   3.817728128534751*^9, 3.817750230298842*^9, 3.81775116727346*^9, 
   3.817753114679406*^9, 3.8177915583056097`*^9, {3.817794819561957*^9, 
   3.8177948213959208`*^9}},
 CellLabel->
  "Out[237]=",ExpressionUUID->"cae12565-d447-4f3f-a829-e9c9156626c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.06292062151870288`", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.20781269586283274`"}], ",", "0", ",", 
   "0.20781269586286172`", ",", 
   RowBox[{"-", "0.06292062151870165`"}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0.20781269586287496`", ",", "0", ",", 
   RowBox[{"-", "0.47854601324453216`"}], ",", "0.20781269586295853`", ",", 
   "0", ",", "0", ",", "0.2078126958628277`", ",", 
   RowBox[{"-", "0.2078126958628768`"}], ",", "0", ",", "0.0629206215187122`",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.06292062151870155`"}], ",", "0", ",", 
   "0.20781269586295023`", ",", 
   RowBox[{"-", "0.2078126958629921`"}], ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.20781269586286255`"}], ",", "0.47854601324452856`", ",", 
   "0", ",", 
   RowBox[{"-", "0.20781269586294926`"}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0.06292062151870888`", ",", 
   RowBox[{"-", "0.2078126958629602`"}], ",", "0", ",", "0.2078126958629889`",
    ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", "0.06292062151870559`"}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.817652669160962*^9, 3.817652689716342*^9}, 
   3.817652891085466*^9, 3.81765307937285*^9, 3.8176541562150583`*^9, 
   3.817722176641523*^9, 3.817727927290946*^9, 3.8177279622349253`*^9, 
   3.817728128534751*^9, 3.817750230298842*^9, 3.81775116727346*^9, 
   3.817753114679406*^9, 3.8177915583056097`*^9, {3.817794819561957*^9, 
   3.817794821400847*^9}},
 CellLabel->
  "Out[238]=",ExpressionUUID->"0447547b-d5f3-4448-8c67-98ddfea7c4d3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kagome 12  (passed)", "Subsection",
 CellChangeTimes->{{3.817707235135388*^9, 3.81770727095207*^9}, {
  3.8177089279356337`*^9, 
  3.817708930719734*^9}},ExpressionUUID->"5f2842eb-11f6-438f-9670-\
17239cd9519a"],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.8177076008353167`*^9, 3.817707621346574*^9}, {
   3.81770767117295*^9, 3.817707672787682*^9}, 3.8177077347104807`*^9, {
   3.817707842009413*^9, 3.817707842744454*^9}, {3.8177080716727257`*^9, 
   3.8177080791133747`*^9}},ExpressionUUID->"e359ca5a-0530-487d-af84-\
d6ff2ced648e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\n\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/graph_\
input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\nlayers=layers_input\n\
init_layer=init_layer_input\n\nnodes=[node for edge in complete_graph for \
node in edge]\nnodes=set(nodes)\nn=len(nodes)\ndel nodes\n\n\
gs=qem.ground_state(complete_graph,1,return_state=True)\nprint('GsEnergyChain \
=', gs[0])\n\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.8177081199747953`*^9, 3.817708120056046*^9}, {
   3.817722196000246*^9, 3.817722196079314*^9}, 3.8177232309359694`*^9, 
   3.8177502910713997`*^9, {3.8177506311537313`*^9, 3.81775063486944*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"497c62e8-564b-478a-9a5a-94266e10620d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nGsEnergyChain = [-5.44487522]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8177089171196527`*^9, {3.8177221911653357`*^9, 3.817722199693551*^9}, 
   3.817750232709895*^9, 3.817750639979432*^9, 3.8177511699011707`*^9, 
   3.817753117416288*^9, 3.8177915620848837`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"710071c5-cd07-4a3b-a825-6726d9f5a385"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.817707240269679*^9, 3.8177072535147123`*^9}, {
  3.8177080821026373`*^9, 
  3.817708088585751*^9}},ExpressionUUID->"f392d678-5935-4b16-b3d1-\
d2659a64a62f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigSysKagome12", "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"HamiltonianKagome12", "-", 
      RowBox[{"9", 
       RowBox[{"MyId", "[", "12", "]"}]}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GsEnKagome12", "=", 
  RowBox[{
   RowBox[{"EigSysKagome12", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "+", "9"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GsKagome12", "=", 
   RowBox[{
    RowBox[{"EigSysKagome12", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Remove", "[", "EigSysKagome12", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.817708133672399*^9, 3.8177081633192053`*^9}, {
  3.817727939365541*^9, 3.8177279452543707`*^9}, {3.8177285251438103`*^9, 
  3.817728525642774*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"6f9c67ce-d45e-46b5-b89c-d037de85eb92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "5.4448752169718215`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.817708195613296*^9, 3.817708920985713*^9, 3.81772683931071*^9, 
   3.817728527768547*^9, 3.8177502331366453`*^9, 3.817751170286278*^9, 
   3.817753117752303*^9, {3.817789237419902*^9, 3.8177892458908463`*^9}, 
   3.817791562568513*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"6c55aebe-5db7-40eb-8a14-e11e52b55959"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kagome 18 (passed)", "Subsection",
 CellChangeTimes->{{3.817653273744561*^9, 3.817653279121031*^9}, {
  3.81765889895168*^9, 3.8176589009251137`*^9}, {3.817658931486676*^9, 
  3.817658933937578*^9}, {3.817706776453794*^9, 
  3.817706777044957*^9}},ExpressionUUID->"6ffe2f33-7678-4ded-9674-\
b7794dd1daf9"],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.817652974219371*^9, 
  3.817652986272253*^9}},ExpressionUUID->"7646dcdf-2708-42e5-a501-\
998391f4f10a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\n\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/3x2/graph_\
input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\nlayers=layers_input\n\
init_layer=init_layer_input\n\nnodes=[node for edge in complete_graph for \
node in edge]\nnodes=set(nodes)\nn=len(nodes)\ndel nodes\n\n\
gs=qem.ground_state(complete_graph,1,return_state=True)\nprint('GsEnergyChain \
=', gs[0])\n\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.817652771656703*^9, 3.817652835308811*^9}, {
   3.8176533373006983`*^9, 3.817653344050074*^9}, {3.81765337457661*^9, 
   3.8176533824600563`*^9}, 3.81765341544764*^9, {3.8176535884440947`*^9, 
   3.8176536205612783`*^9}, {3.817653747156599*^9, 3.817653747704151*^9}, {
   3.817722246161371*^9, 3.817722246239292*^9}, 3.817723230937943*^9, 
   3.817750273489209*^9, {3.817750648633099*^9, 3.817750649785911*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"a506a473-acf1-47d5-9442-a0e5b4ea9b2f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nGsEnergyChain = [-8.04827077]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.817652751610965*^9, 3.8176528377898273`*^9}, 
   3.8176533629635057`*^9, 3.81765341044132*^9, 3.817653443403867*^9, 
   3.81765359596301*^9, 3.817653781271448*^9, 3.817722243494207*^9, 
   3.817722276902367*^9, 3.8177502357761507`*^9, 3.81775067468744*^9, 
   3.8177511951838837`*^9, 3.817753152440555*^9, 3.817791597006797*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"b31b2fce-3e24-46a8-8e4d-4cdf38145c63"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.817654184532199*^9, 
  3.817654196980935*^9}},ExpressionUUID->"ad46a49c-dc05-4a67-8bf6-\
37261a07c832"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EigSysKagome18", "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"HamiltonianKagome18", "-", 
      RowBox[{"9", 
       RowBox[{"MyId", "[", "18", "]"}]}]}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GsEnKagome18", "=", 
  RowBox[{
   RowBox[{"EigSysKagome18", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "+", "9"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GsKagome18", "=", 
   RowBox[{
    RowBox[{"EigSysKagome18", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Remove", "[", "EigSysKagome18", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.81765549493225*^9, 3.817655603982609*^9}, {
  3.817706784454015*^9, 3.8177067956541452`*^9}, {3.817728291122568*^9, 
  3.817728291555969*^9}, {3.817750703901102*^9, 3.817750705129527*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"500803e3-2547-43ab-844b-d96051685be7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "8.04827077354123`"}], "}"}]], "Output",
 CellChangeTimes->{3.8177508082168093`*^9, 3.817751291567565*^9, 
  3.817753262570747*^9, 3.8177917131496477`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"f985bfdd-7748-40e1-b0b7-f1be9aafdd2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Energy and infidelity, and derivatives, given parameters and ansatz \
\>", "Section",
 CellChangeTimes->{{3.8176589892554092`*^9, 3.817659005428694*^9}, {
  3.817726562292153*^9, 3.817726564466712*^9}, {3.8177267563931847`*^9, 
  3.817726763127906*^9}, {3.8177291359997263`*^9, 3.817729138255563*^9}, {
  3.817738617041625*^9, 
  3.81773863505381*^9}},ExpressionUUID->"af3b50d1-d784-4372-87c2-\
dd5263ed4f94"],

Cell[CellGroupData[{

Cell["Chain 6 (passed) ", "Subsection",
 CellChangeTimes->{{3.81765855464191*^9, 3.817658556648244*^9}, {
   3.817659027164295*^9, 3.817659033800886*^9}, {3.817722729813368*^9, 
   3.817722729971415*^9}, 3.817726765050345*^9, {3.8177273448629208`*^9, 
   3.817727348335293*^9}, 3.817738637378057*^9, {3.817744091229452*^9, 
   3.8177440932101517`*^9}},ExpressionUUID->"1a1d0799-9327-4e2d-a283-\
86591ab1289d"],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.81765629102835*^9, 
  3.817656303771755*^9}},ExpressionUUID->"59a1abac-412c-4dbb-bb86-\
0c6cb5727993"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ApplyLayer0", "[", 
   RowBox[{"n_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"n", "/", "2"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"2", "*", "i"}], ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2", "*", "i"}], "+", "1"}], ",", "n"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}], ".", "state"}], 
       "//", "N"}]}], ";"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ApplyLayer1", "[", 
   RowBox[{"n_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"n", "/", "2"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "*", "i"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "i"}], "+", "1", "-", "1"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}], ".", "state"}], 
       "//", "N"}]}], ";"}]}], "\n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EnergyChainFromPars", "[", "pars_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"InitStateChain", "[", "6", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyLayer0", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ";", "\n", 
     RowBox[{"ApplyLayer1", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ApplyLayer0", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"7", ";;", "9"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EnergyChain", "[", 
       RowBox[{"state", ",", "6"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InfidelityChainFromPars", "[", "pars_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{"InitStateChain", "[", "6", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ApplyLayer0", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "3"}], "]"}], "]"}]}], "]"}], ";", "\n", 
     RowBox[{"ApplyLayer1", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"4", ";;", "6"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ApplyLayer0", "[", 
      RowBox[{"6", ",", 
       RowBox[{"pars", "[", 
        RowBox[{"[", 
         RowBox[{"7", ";;", "9"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Infidelity", "[", 
      RowBox[{
       RowBox[{"state", "//", "Flatten"}], ",", "GsChainMat"}], "]"}]}], 
    ")"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numpars", "=", 
    RowBox[{"{", 
     RowBox[{"0.5338210879053804", ",", 
      RowBox[{"-", "4.861452010173478"}], ",", "3.749724997117319", ",", 
      "1.027085088315441", ",", 
      RowBox[{"-", "0.9003289468166109"}], ",", "1.2980981922608912", ",", 
      "4.694974774263656", ",", "3.346625458188054", ",", 
      "2.3291749603764416"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"EnergyChainFromPars", "[", "numpars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"InfidelityChainFromPars", "[", "numpars", "]"}]}], "Input",
 CellChangeTimes->{{3.817639026664796*^9, 3.8176391650644407`*^9}, 
   3.817655707404513*^9, {3.8176557511628513`*^9, 3.817655776414613*^9}, {
   3.817656021614955*^9, 3.817656085988934*^9}, {3.8176561370908127`*^9, 
   3.817656191536728*^9}, {3.817656241925601*^9, 3.8176562489538803`*^9}, {
   3.8176569826724577`*^9, 3.817657013991187*^9}, {3.8176573858811703`*^9, 
   3.8176573939577713`*^9}, {3.817657643336586*^9, 3.817657719567892*^9}, {
   3.817657916992807*^9, 3.817657992680174*^9}, {3.817658067103429*^9, 
   3.817658069065508*^9}, {3.817658115364875*^9, 3.817658117102395*^9}, {
   3.817658507070429*^9, 3.817658535358433*^9}, {3.8177267758173943`*^9, 
   3.817726788714431*^9}, {3.817726854672748*^9, 3.817726881267539*^9}, {
   3.817728254944799*^9, 3.8177282561441793`*^9}, {3.817738731673399*^9, 
   3.817738770821433*^9}, {3.817738804642399*^9, 3.817738903536676*^9}, {
   3.81773896331571*^9, 3.8177390253217707`*^9}, {3.8177390609405003`*^9, 
   3.8177390658572273`*^9}, 3.817739100673706*^9, {3.817739131254067*^9, 
   3.817739162380275*^9}, {3.81773921417769*^9, 3.817739216588995*^9}, {
   3.817739250026597*^9, 3.8177392544655113`*^9}, {3.8177405474943657`*^9, 
   3.817740594112996*^9}, {3.817740858367853*^9, 3.817740870218375*^9}, {
   3.8177425820252733`*^9, 3.81774260064283*^9}, 3.81774263238415*^9, {
   3.8177427220487957`*^9, 3.8177427397129498`*^9}, {3.817742771425218*^9, 
   3.817742816356637*^9}, {3.817750736185585*^9, 3.817750756003474*^9}, 
   3.817750786104282*^9, {3.817750884231125*^9, 3.817750897031478*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"e023704e-02c6-4848-b4c2-33893ae72089"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.5520043320752097`"}], "+", 
  RowBox[{"6.938893903907228`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.8177508086925097`*^9, 3.817751020568812*^9, 3.817751291679624*^9, 
   3.817753262633669*^9, {3.8177812449364653`*^9, 3.8177812681305*^9}, {
   3.817781312085032*^9, 3.817781337620852*^9}, 3.817786884770508*^9, 
   3.817786985621337*^9, 3.817791713237232*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"5152fdc6-1170-49c5-9e8a-8fd53232f430"],

Cell[BoxData["0.5886109100028261`"], "Output",
 CellChangeTimes->{
  3.8177508086925097`*^9, 3.817751020568812*^9, 3.817751291679624*^9, 
   3.817753262633669*^9, {3.8177812449364653`*^9, 3.8177812681305*^9}, {
   3.817781312085032*^9, 3.817781337620852*^9}, 3.817786884770508*^9, 
   3.817786985621337*^9, 3.8177917132812653`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"b0903ace-afc0-4da7-944f-68262adb704d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dif", "[", 
  RowBox[{"EnergyChainFromPars", ",", "3", ",", "numpars"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"dif", "[", 
  RowBox[{"InfidelityChainFromPars", ",", "7", ",", "numpars"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.817750762507909*^9, 3.817750782801951*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"98604eaa-da41-47dd-a707-58a9d906c3f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.1926708783628328`"}], "+", 
  RowBox[{"2.7755575615628914`*^-11", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.817750827865058*^9, 3.817751024180888*^9, 3.8177512928264837`*^9, 
   3.817753263951033*^9, {3.817781255764114*^9, 3.817781278098928*^9}, {
   3.8177813219986353`*^9, 3.817781341651293*^9}, 3.817786889654731*^9, 
   3.81778698661194*^9, 3.817791714285604*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"5c24032d-f7f3-4884-bbe5-b430db97401f"],

Cell[BoxData["0.17266289120687617`"], "Output",
 CellChangeTimes->{
  3.817750827865058*^9, 3.817751024180888*^9, 3.8177512928264837`*^9, 
   3.817753263951033*^9, {3.817781255764114*^9, 3.817781278098928*^9}, {
   3.8177813219986353`*^9, 3.817781341651293*^9}, 3.817786889654731*^9, 
   3.81778698661194*^9, 3.8177917145109158`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"71ba47db-aab7-426f-ab25-e893c3754650"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"grad", "[", 
    RowBox[{"EnergyChainFromPars", ",", "npars"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"grad", "[", 
    RowBox[{"InfidelityChainFromPars", ",", "npars"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8177507435224752`*^9, 3.817750745302471*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"36ac0ed1-263b-4425-bab6-b6e52cfe3191"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<ExitCode\>\"", "\[Rule]", "0"}], ",", 
   RowBox[{
   "\"\<StandardOutput\>\"", "\[Rule]", 
    "\"\<No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.55200433)\\n[-0.05005307 -0.45674392 -0.19267117  \
0.09687651 -0.27705326 -0.13248857\\n  0.28196716  0.05205173 \
-0.56275853]\\nvariable(0.58861091)\\n[ 1.42404631e-02 -1.00988019e-01 \
-1.85871448e-01  1.10099342e-01\\n  3.24262071e-02  3.55959076e-05  \
1.72662807e-01  9.54738481e-02\\n -9.31588180e-02]\\n\>\""}], ",", 
   RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}]}], 
  "\[RightAssociation]"}]], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"e9d3d7f8-ad87-453f-9f63-e4d0c466fd44"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.55200433)\\n[-0.05005307 -0.45674392 -0.19267117  \
0.09687651 -0.27705326 -0.13248857\\n  0.28196716  0.05205173 \
-0.56275853]\\nvariable(0.58861091)\\n[ 1.42404631e-02 -1.00988019e-01 \
-1.85871448e-01  1.10099342e-01\\n  3.24262071e-02  3.55959076e-05  \
1.72662807e-01  9.54738481e-02\\n -9.31588180e-02]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817751293038371*^9, 3.817753264171371*^9, 
  3.817786986844692*^9, 3.817791714584765*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"b652d592-697a-4fd2-bb18-811daa39900c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.817656333347485*^9, 
  3.8176563405515957`*^9}},ExpressionUUID->"12f9fcf2-ac03-49ab-bee2-\
ec1847c8e21d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\nimport pickle\n\n\
import chainer as ch\npar_multiplicity=1\n\
parameters=ch.Variable(np.array([0.5338210879053804, \
-4.861452010173478,3.749724997117319,1.027085088315441,-0.9003289468166109,1.\
2980981922608912,4.694974774263656, 3.346625458188054, 2.3291749603764416]))\n\
\n\nwith open('/Users/Georgi/HVQE/data/chain/periodic/own_graph/ops/energy/6/\
graph_input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\ninit_layer=init_layer_input\nlayers \
=layers_input\ndel complete_graph_input\ndel init_layer_input\ndel \
layers_input\n\nnodes=[node for edge in complete_graph for node in edge]\n\
nodes=set(nodes)\nn=len(nodes)\ndel nodes\n\ngs_reg=qem.Reg(n)\nwith \
open('/Users/Georgi/HVQE/data/chain/periodic/own_graph/ops/energy/6/gs.dat','\
rb') as file:\n    gs_reg.psi.re=np.array(pickle.load(file)).reshape((2,)*n)  \
 \n\ninit_reg=qem.Reg(n)   \nfor edge in init_layer:\n    \
qem.apply_prepare_singlet(edge,init_reg)\n\n\
E=_HVQE.Heisenberg_energy_from_parameters(complete_graph,init_reg,layers,n,\
par_multiplicity,parameters)\n\nprint(E)\nE.backward()\n\
print(parameters.grad)\n\n\
parameters=ch.Variable(np.array([0.5338210879053804, \
-4.861452010173478,3.749724997117319,1.027085088315441,-0.9003289468166109,1.\
2980981922608912,4.694974774263656, 3.346625458188054, 2.3291749603764416]))\n\
\ninf=_HVQE.infidelity_from_parameters(init_reg,layers,n,par_multiplicity,\
parameters,gs_reg)\nprint(inf)\ninf.backward()\nprint(parameters.grad)\n\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.8176563714557*^9, 3.817656373392761*^9}, {
   3.817656404011875*^9, 3.8176564312688026`*^9}, {3.8176565431529083`*^9, 
   3.8176565753569107`*^9}, {3.81765661045115*^9, 3.817656611783388*^9}, {
   3.817656645566329*^9, 3.817656938277525*^9}, {3.817657032509905*^9, 
   3.8176570574837112`*^9}, {3.817657107417466*^9, 3.817657118687174*^9}, {
   3.817657193741891*^9, 3.817657349536162*^9}, {3.817657406607276*^9, 
   3.817657441865327*^9}, {3.817657518478476*^9, 3.817657540717493*^9}, {
   3.817658078025353*^9, 3.817658100834831*^9}, 3.81765833538118*^9, {
   3.8176584058661127`*^9, 3.817658416949696*^9}, 3.8176584556022863`*^9, 
   3.817658491375716*^9, {3.81772232129909*^9, 3.817722322132702*^9}, {
   3.8177223764106216`*^9, 3.8177224628072233`*^9}, {3.817722493991208*^9, 
   3.817722542522793*^9}, 3.817723230940277*^9, {3.8177269847554893`*^9, 
   3.817727027221715*^9}, {3.817727057240316*^9, 3.817727122730084*^9}, {
   3.817727161036051*^9, 3.817727231934108*^9}, {3.817727297903769*^9, 
   3.817727320479063*^9}, {3.8177428504864473`*^9, 3.817742860957445*^9}, {
   3.817742908707739*^9, 3.817742942430031*^9}, {3.817742993404469*^9, 
   3.817743023457473*^9}, {3.817743121488194*^9, 3.8177431220588083`*^9}, 
   3.81774322668495*^9, 3.817746067902108*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"02389321-5a34-4939-a4eb-3f8a80211092"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.55200433)\\n[-0.05005307 -0.45674392 -0.19267117  \
0.09687651 -0.27705326 -0.13248857\\n  0.28196716  0.05205173 \
-0.56275853]\\nvariable(0.58861091)\\n[ 1.42404631e-02 -1.00988019e-01 \
-1.85871448e-01  1.10099342e-01\\n  3.24262071e-02  3.55959076e-05  \
1.72662807e-01  9.54738481e-02\\n -9.31588180e-02]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.817656570305132*^9, 3.817656577753273*^9}, {
   3.817656830908037*^9, 3.817656884084268*^9}, {3.817656920610347*^9, 
   3.817656961955483*^9}, 3.817657059959633*^9, 3.817657111295598*^9, {
   3.817657201196417*^9, 3.8176572295739326`*^9}, 3.81765730978717*^9, {
   3.817657418579791*^9, 3.817657444198078*^9}, 3.817657544106782*^9, 
   3.817657763838818*^9, 3.81765810426801*^9, 3.817658139011808*^9, {
   3.817658409452153*^9, 3.817658445978459*^9}, 3.8176584957582083`*^9, {
   3.817722393631052*^9, 3.817722406312336*^9}, {3.817722533910585*^9, 
   3.817722545224818*^9}, {3.817727208077244*^9, 3.8177272346167107`*^9}, {
   3.8177272910014677`*^9, 3.817727323151841*^9}, 3.817742949975388*^9, 
   3.817743026109305*^9, 3.817743127229113*^9, 3.817751294847327*^9, 
   3.817753266571344*^9, 3.81778699091348*^9, 3.817791717104651*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"9e531e02-26d8-49be-aef3-70ead7350f75"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kagome 12 One Per Gate (passed) ", "Subsection",
 CellChangeTimes->{{3.817655684027491*^9, 3.817655693977008*^9}, 
   3.8176590352070417`*^9, {3.817708959922661*^9, 3.817708989952036*^9}, {
   3.817722651666772*^9, 3.8177226534738283`*^9}, {3.817725995617488*^9, 
   3.817726000577422*^9}, 3.817726766695953*^9, {3.817728566072155*^9, 
   3.8177285679764633`*^9}, 3.817738641047662*^9, {3.817793058336183*^9, 
   3.817793060593027*^9}},ExpressionUUID->"5c3f1b01-8d7b-426d-ae97-\
01937fd2dc94"],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.8176585917788343`*^9, 
  3.817658603920185*^9}},ExpressionUUID->"cf1e9050-f918-40dd-9c93-\
2e64a41f2315"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"InitStateChain", "[", "12", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer0Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Layer0Kagome12", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"pars", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", 
       "state"}]}], ";"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ApplyLayer1Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Layer1Kagome12", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer2Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Layer2Kagome12", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer3Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Layer3Kagome12", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EnergyKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "12"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"13", ";;", "18"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"EnergyKagome12", "[", "state", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "Chop"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfidelityKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "6"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "12"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"13", ";;", "18"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"EnergyKagome12", "[", "state", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "Chop"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Infidelity", "[", 
     RowBox[{
      RowBox[{"state", "//", "Flatten"}], ",", "GsKagome12"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.817702983403447*^9, 3.817702997772585*^9}, {
   3.817703053996069*^9, 3.817703235170381*^9}, {3.817703326455394*^9, 
   3.817703355206723*^9}, {3.817703389464101*^9, 3.817703389877544*^9}, {
   3.817703755872633*^9, 3.817703761133717*^9}, {3.817703871777256*^9, 
   3.817703874274041*^9}, {3.817703930978417*^9, 3.817703943682723*^9}, {
   3.817704028917556*^9, 3.817704078775323*^9}, 3.817704264608457*^9, {
   3.81770446815768*^9, 3.817704490106881*^9}, {3.817704809206815*^9, 
   3.817704809316882*^9}, {3.817704872762879*^9, 3.817704982506384*^9}, 
   3.817705312073762*^9, {3.817708984164798*^9, 3.817709109019253*^9}, {
   3.817709920648541*^9, 3.817709974815385*^9}, {3.8177100082738543`*^9, 
   3.8177100559007807`*^9}, {3.817710208398773*^9, 3.817710380086359*^9}, 
   3.817710421839981*^9, {3.817710461119117*^9, 3.817710462271315*^9}, {
   3.817710538967247*^9, 3.817710597829135*^9}, {3.817710668524296*^9, 
   3.817710670546494*^9}, {3.817710710709278*^9, 3.817710717971842*^9}, {
   3.817710750151053*^9, 3.817710811522625*^9}, {3.817711036418827*^9, 
   3.817711039115621*^9}, {3.817714414344213*^9, 3.817714415418639*^9}, {
   3.8177226889657097`*^9, 3.81772271181429*^9}, {3.817727691033925*^9, 
   3.81772770005055*^9}, {3.817727890694749*^9, 3.817727891589355*^9}, {
   3.817728329604987*^9, 3.8177283308061934`*^9}, 3.817728508634719*^9, {
   3.817728547001965*^9, 3.8177285537406693`*^9}, {3.817744412006917*^9, 
   3.817744633603397*^9}, {3.817744697480072*^9, 3.817744730649149*^9}, {
   3.817744762389123*^9, 3.817744765288625*^9}, {3.8177462507887917`*^9, 
   3.81774626033291*^9}, {3.817746374200281*^9, 3.8177463801550417`*^9}, {
   3.817746482140498*^9, 3.817746482493956*^9}, {3.81774660403157*^9, 
   3.817746613975313*^9}, {3.817752705556829*^9, 3.817752713051878*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"7f25081f-35e0-4f1d-9f80-5c1e8c73124b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numpars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.4590336907024906`"}], ",", "5.1676688121457985`", ",", 
     "2.8216029812864107`", ",", 
     RowBox[{"-", "0.6880805233230696`"}], ",", 
     RowBox[{"-", "0.3164463289812076`"}], ",", 
     RowBox[{"-", "3.7855079246553895`"}], ",", 
     RowBox[{"-", "3.879886900967808`"}], ",", 
     RowBox[{"-", "0.7872929911255397`"}], ",", "3.163342822710785`", ",", 
     RowBox[{"-", "0.13159909503576017`"}], ",", 
     RowBox[{"-", "1.7580940899494735`"}], ",", 
     RowBox[{"-", "5.900346380330523`"}], ",", 
     RowBox[{"-", "0.10797123542461406`"}], ",", "4.86518613798269`", ",", 
     "0.917307768531554`", ",", "1.683462483531322`", ",", 
     RowBox[{"-", "0.17943326392556003`"}], ",", 
     RowBox[{"-", "3.444665304255345`"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EnergyKagome12FromPars", "[", "numpars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], "Input",
 CellChangeTimes->{{3.8177446498389683`*^9, 3.817744685035088*^9}, {
   3.817746031084279*^9, 3.817746031365657*^9}, {3.817746202313401*^9, 
   3.817746207531207*^9}, {3.8177488919921713`*^9, 3.817748901291253*^9}, 
   3.817752729152625*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"85c08833-8032-4524-9aa9-2c1d0d8ddf01"],

Cell[BoxData[
 RowBox[{"-", "0.9284368763745029`"}]], "Output",
 CellChangeTimes->{
  3.817752818849115*^9, 3.8177532937283983`*^9, {3.8177869547327223`*^9, 
   3.817786979063203*^9}, 3.8177870204638853`*^9, 3.817789297802175*^9, 
   3.81779174531787*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"b06543ef-b3bf-4ffb-b82a-db65684588f1"],

Cell[BoxData["0.9902841409219748`"], "Output",
 CellChangeTimes->{
  3.817752818849115*^9, 3.8177532937283983`*^9, {3.8177869547327223`*^9, 
   3.817786979063203*^9}, 3.8177870204638853`*^9, 3.817789297802175*^9, 
   3.817791773490986*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"d3d3c0ad-efa6-4523-9604-d4a8525ce225"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", "18"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.8177906158991423`*^9, 3.81779066888221*^9}, {
   3.817790723487227*^9, 3.817790777126769*^9}, {3.817790866179057*^9, 
   3.817790893683662*^9}, {3.817791101658143*^9, 3.8177911646071177`*^9}, 
   3.8177912868178463`*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"ffa8110c-e2f5-4e80-9726-fce026095a87"],

Cell[BoxData["0.0024697754952285322`"], "Output",
 CellChangeTimes->{3.817791830093734*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"75a34d07-3e5a-43ca-aa64-560af8aeefa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", "18"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.817791179595945*^9, 3.817791190751238*^9}, 
   3.8177912825115*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"184cce56-e419-4da3-943e-55c4100c0c2d"],

Cell[BoxData["0.004704507006181302`"], "Output",
 CellChangeTimes->{3.817791886362742*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"c5be4f10-f4a6-4605-9024-2b2f7e9ed2f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<ExitCode\>\"", "\[Rule]", "0"}], ",", 
   RowBox[{
   "\"\<StandardOutput\>\"", "\[Rule]", 
    "\"\<No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-0.92843688)\\n[ 2.04644322e-01 -1.85569413e-01  \
2.46981435e-03  2.20623413e-01\\n -4.43852995e-01  1.88123420e-01  \
1.54393821e-01 -1.25588736e-01\\n  1.12063086e-01  7.33843670e-02  \
2.54297895e-01  1.12838749e-01\\n -3.32148196e-04  1.29190901e-01 \
-1.10032142e-01  4.47627573e-01\\n  5.18804549e-02 \
-8.73067841e-03]\\nvariable(0.99028414)\\n[-0.00276295  0.00047363 \
-0.00536181  0.00543681 -0.00161217 -0.00590244\\n  0.0047045   0.00695224 \
-0.00433547  0.00531215  0.00109434  0.00244617\\n  0.00066088 -0.0029838   \
0.00281999  0.00252471  0.00731822 -0.00318952]\\n\>\""}], ",", 
   RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}]}], 
  "\[RightAssociation]"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"2dcf8ecd-9302-4f2c-9b94-0a2b0247fda3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-0.92843688)\\n[ 2.04644322e-01 -1.85569413e-01  \
2.46981435e-03  2.20623413e-01\\n -4.43852995e-01  1.88123420e-01  \
1.54393821e-01 -1.25588736e-01\\n  1.12063086e-01  7.33843670e-02  \
2.54297895e-01  1.12838749e-01\\n -3.32148196e-04  1.29190901e-01 \
-1.10032142e-01  4.47627573e-01\\n  5.18804549e-02 \
-8.73067841e-03]\\nvariable(0.99028414)\\n[-0.00276295  0.00047363 \
-0.00536181  0.00543681 -0.00161217 -0.00590244\\n  0.0047045   0.00695224 \
-0.00433547  0.00531215  0.00109434  0.00244617\\n  0.00066088 -0.0029838   \
0.00281999  0.00252471  0.00731822 -0.00318952]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817791886427595*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"a9b359e8-db12-4e0b-a700-f23c3637aef7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.8176590416837797`*^9, 
  3.8176590481505613`*^9}},ExpressionUUID->"d8962f39-5efd-46c8-bc25-\
dd9abafbde53"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\nimport chainer as ch\n\
import pickle\npar_multiplicity=1\n\
parameters=ch.Variable(np.array([-1.4590336907024906, 5.1676688121457985, \
2.8216029812864107, -0.6880805233230696, -0.3164463289812076, \
-3.7855079246553895,-3.879886900967808, \
-0.7872929911255397,3.163342822710785, -0.13159909503576017, \
-1.7580940899494735, -5.900346380330523,-0.10797123542461406, \
4.86518613798269,  0.917307768531554, 1.683462483531322, \
-0.17943326392556003, -3.444665304255345]))\n\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/graph_\
input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\ninit_layer=init_layer_input\nlayers \
=layers_input\ndel complete_graph_input\ndel init_layer_input\ndel \
layers_input\n\nnodes=[node for edge in complete_graph for node in edge]\n\
nodes=set(nodes)\nn=len(nodes)\ndel nodes\n\ngs_reg=qem.Reg(n)\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/gs.dat'\
,'rb') as file:\n    \
gs_reg.psi.re=np.array(pickle.load(file)).reshape((2,)*n)   \n\n\
init_reg=qem.Reg(n)   \nfor edge in init_layer:\n    \
qem.apply_prepare_singlet(edge,init_reg)\n\n\
E=_HVQE.Heisenberg_energy_from_parameters(complete_graph,init_reg,layers,n,\
par_multiplicity,parameters)\n\nprint(E)\nE.backward()\n\
print(parameters.grad)\n\n\
parameters=ch.Variable(np.array([-1.4590336907024906, 5.1676688121457985, \
2.8216029812864107, -0.6880805233230696, -0.3164463289812076, \
-3.7855079246553895,-3.879886900967808, \
-0.7872929911255397,3.163342822710785, -0.13159909503576017, \
-1.7580940899494735, -5.900346380330523,-0.10797123542461406, \
4.86518613798269,  0.917307768531554, 1.683462483531322, \
-0.17943326392556003, -3.444665304255345]))\n\n\
inf=_HVQE.infidelity_from_parameters(init_reg,layers,n,par_multiplicity,\
parameters,gs_reg)\nprint(inf)\ninf.backward()\nprint(parameters.grad)\n\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.817710950604147*^9, 3.817710978414969*^9}, 
   3.817711284590521*^9, {3.817714799744871*^9, 3.817714824274205*^9}, {
   3.817722614999135*^9, 3.8177226323389378`*^9}, {3.8177232309432*^9, 
   3.817723239720598*^9}, {3.81772742697985*^9, 3.817727455894315*^9}, {
   3.81772749912614*^9, 3.817727510052864*^9}, 3.81772754325679*^9, {
   3.817727581608344*^9, 3.8177275823912573`*^9}, {3.817746100920815*^9, 
   3.817746102928035*^9}, {3.817746139579166*^9, 3.8177461529462433`*^9}, {
   3.8177528194810247`*^9, 3.8177528348244677`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"81095710-3ab1-4e0b-8654-96eb0cd81279"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-0.92843688)\\n[ 2.04644322e-01 -1.85569413e-01  \
2.46981435e-03  2.20623413e-01\\n -4.43852995e-01  1.88123420e-01  \
1.54393821e-01 -1.25588736e-01\\n  1.12063086e-01  7.33843670e-02  \
2.54297895e-01  1.12838749e-01\\n -3.32148196e-04  1.29190901e-01 \
-1.10032142e-01  4.47627573e-01\\n  5.18804549e-02 \
-8.73067841e-03]\\nvariable(0.99028414)\\n[-0.00276295  0.00047363 \
-0.00536181  0.00543681 -0.00161217 -0.00590244\\n  0.0047045   0.00695224 \
-0.00433547  0.00531215  0.00109434  0.00244617\\n  0.00066088 -0.0029838   \
0.00281999  0.00252471  0.00731822 -0.00318952]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.817711000797017*^9, 3.8177113632100267`*^9, {3.81771481088596*^9, 
   3.8177148272411413`*^9}, 3.81772258871078*^9, 3.81772263575167*^9, 
   3.81772417869129*^9, 3.817727467539255*^9, 3.817727513890696*^9, {
   3.817727574916827*^9, 3.8177275853510427`*^9}, 3.817727633301876*^9, 
   3.81774617374719*^9, 3.8177528523331547`*^9, 3.817791889167824*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"7e28ae86-5cfd-4f77-b58d-366bfc670dd8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kagome 12 One Per Slice (passed)  ", "Subsection",
 CellChangeTimes->{{3.8177227364707317`*^9, 3.8177227556438637`*^9}, {
   3.817722790775399*^9, 3.817722793367757*^9}, {3.817725964769081*^9, 
   3.817725966576396*^9}, 3.8177267683155727`*^9, {3.817728794816833*^9, 
   3.81772879710358*^9}, 3.817738642888225*^9, {3.8177931695715647`*^9, 
   3.817793171538961*^9}},ExpressionUUID->"07844d20-2808-43f5-9fa8-\
37e8cb3918b6"],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.817722759639859*^9, 
  3.817722773352744*^9}},ExpressionUUID->"74008dbd-7bf2-4313-a676-\
13d053ccca06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ApplyLayer0Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "pars", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer0Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer0Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer0Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer0Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ApplyLayer1Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "pars", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer1Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer2Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "pars", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer2Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer3Kagome12", "[", "pars_", "]"}], ":=", 
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "pars", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"state", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HeisenbergExp", "[", 
         RowBox[{
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"Layer3Kagome12", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "i"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"pars", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "12"}], "]"}], ".", "state"}],
        "//", "N"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EnergyKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "9"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "12"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"13", ";;", "15"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"16", ";;", "18"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "21"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"22", ";;", "24"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"EnergyKagome12", "[", "state", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "Chop"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfidelityKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"4", ";;", "6"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "9"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"10", ";;", "12"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"13", ";;", "15"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"16", ";;", "18"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "21"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", 
       RowBox[{"22", ";;", "24"}], "]"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Infidelity", "[", 
     RowBox[{
      RowBox[{"state", "//", "Flatten"}], ",", "GsKagome12"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.817702983403447*^9, 3.817702997772585*^9}, {
   3.817703053996069*^9, 3.817703235170381*^9}, {3.817703326455394*^9, 
   3.817703355206723*^9}, {3.817703389464101*^9, 3.817703389877544*^9}, {
   3.817703755872633*^9, 3.817703761133717*^9}, {3.817703871777256*^9, 
   3.817703874274041*^9}, {3.817703930978417*^9, 3.817703943682723*^9}, {
   3.817704028917556*^9, 3.817704078775323*^9}, 3.817704264608457*^9, {
   3.81770446815768*^9, 3.817704490106881*^9}, {3.817704809206815*^9, 
   3.817704809316882*^9}, {3.817704872762879*^9, 3.817704982506384*^9}, 
   3.817705312073762*^9, {3.817708984164798*^9, 3.817709109019253*^9}, {
   3.817709920648541*^9, 3.817709974815385*^9}, {3.8177100082738543`*^9, 
   3.8177100559007807`*^9}, {3.817710208398773*^9, 3.817710380086359*^9}, 
   3.817710421839981*^9, {3.817710461119117*^9, 3.817710462271315*^9}, {
   3.817710538967247*^9, 3.817710597829135*^9}, {3.817710668524296*^9, 
   3.817710670546494*^9}, {3.817710710709278*^9, 3.817710717971842*^9}, {
   3.817710750151053*^9, 3.817710811522625*^9}, {3.817711036418827*^9, 
   3.817711039115621*^9}, {3.817714414344213*^9, 3.817714415418639*^9}, {
   3.8177226889657097`*^9, 3.81772271181429*^9}, {3.8177228626823463`*^9, 
   3.817722886748358*^9}, {3.81772293149911*^9, 3.817722953533744*^9}, {
   3.817722985150535*^9, 3.8177229943175917`*^9}, {3.817723400074032*^9, 
   3.817723426074332*^9}, {3.817723462220251*^9, 3.817723504923641*^9}, {
   3.817724073298772*^9, 3.817724076993044*^9}, {3.817724193366229*^9, 
   3.817724241511077*^9}, {3.817724303225531*^9, 3.81772430349718*^9}, {
   3.817724390541462*^9, 3.817724450061054*^9}, {3.8177244855225143`*^9, 
   3.8177244857269783`*^9}, {3.817724753196179*^9, 3.817724845121936*^9}, {
   3.817725478436062*^9, 3.81772560467964*^9}, 3.8177256706655912`*^9, {
   3.817725824961643*^9, 3.8177258264450006`*^9}, {3.817728705982864*^9, 
   3.817728706175418*^9}, {3.8177471955845203`*^9, 3.817747321292802*^9}, {
   3.817747405965852*^9, 3.8177474765531816`*^9}, {3.817748109107834*^9, 
   3.817748122860881*^9}, {3.817748546834548*^9, 3.81774854756205*^9}, {
   3.817748603811384*^9, 3.817748606069457*^9}, 
   3.817793078164036*^9},ExpressionUUID->"e3664bb9-ce5e-42ee-bdd1-\
a219d7d6a4eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numpars", "=", 
   RowBox[{"{", 
    RowBox[{
    "0.049431159925426016", ",", "2.0971826881228175", ",", 
     "1.9558443268702845", ",", 
     RowBox[{"-", "3.879886900967808"}], ",", " ", 
     RowBox[{"-", "0.7872929911255397"}], ",", "3.163342822710785", ",", 
     RowBox[{"-", "0.10797123542461406"}], ",", " ", "4.86518613798269", ",", 
     "  ", "0.917307768531554", ",", 
     RowBox[{"-", "5.5444502641063185"}], ",", " ", "6.266268104834758", ",", 
     " ", "4.7765043994641445", ",", " ", "3.59062779362851", ",", " ", 
     "5.276025913422831", ",", " ", "4.927755050742828", ",", " ", 
     "4.888912700553572", ",", " ", "0.1315880185269016", ",", " ", 
     "2.2552263123593193", ",", " ", 
     RowBox[{"-", "1.306859377781489"}], ",", " ", 
     RowBox[{"-", "0.9743835390864923"}], ",", " ", 
     RowBox[{"-", "2.905148883656384"}], ",", " ", 
     RowBox[{"-", "2.6995002982137706"}], ",", " ", 
     RowBox[{"-", "4.4101684202100255"}], ",", " ", 
     RowBox[{"-", "1.3593739583418731"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EnergyKagome12FromPars", "[", "numpars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], "Input",
 CellChangeTimes->{{3.817747872085832*^9, 3.81774792517868*^9}, {
  3.817748081917638*^9, 3.817748087741892*^9}, {3.8177481309543047`*^9, 
  3.817748131315907*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"34792d99-20ed-4d70-9ac5-a91feb03bb41"],

Cell[BoxData[
 RowBox[{"-", "1.515666241437171`"}]], "Output",
 CellChangeTimes->{3.8177482191813107`*^9, 3.817748696973877*^9, 
  3.817791964543249*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"0ba08597-5943-4333-86e9-13bfda7768a5"],

Cell[BoxData["0.9939133301048977`"], "Output",
 CellChangeTimes->{3.8177482191813107`*^9, 3.817748696973877*^9, 
  3.817792039920978*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"73b95dfc-e4f2-46d3-b35d-ba85227234d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "24"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", 
       RowBox[{"Length", "[", "numpars", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.817791395729739*^9, 3.8177914007698307`*^9}, {
  3.817791446787558*^9, 3.817791448659679*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"5de5258f-2766-4c9c-8e49-5e00faf6b56e"],

Cell[BoxData[
 RowBox[{"-", "0.34357881095736786`"}]], "Output",
 CellChangeTimes->{3.817792190299926*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"b4a8db18-501c-4497-8955-4fb4b90c5a73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", 
       RowBox[{"Length", "[", "numpars", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.817791381513896*^9, 3.81779140723578*^9}, {
  3.8177914564528093`*^9, 3.817791458243411*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"e71e0cdd-76ff-4457-ac7f-029e14dc9fab"],

Cell[BoxData["0.005733388652728877`"], "Output",
 CellChangeTimes->{3.817792340315632*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"b85cfc06-60e1-4687-93dd-c85232fbc159"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<ExitCode\>\"", "\[Rule]", "0"}], ",", 
   RowBox[{
   "\"\<StandardOutput\>\"", "\[Rule]", 
    "\"\<No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.51566624)\\n[-0.34729406  0.36146094  0.55695365  \
0.40899441  0.09194422 -0.00288493\\n  0.34746347 -0.72713794  0.10300112  \
0.99149757  0.13769308  1.0337861\\n  0.42087642  0.39651021 -0.61231673  \
0.44392543 -0.18680237 -0.41457531\\n  0.53099271 -0.176059    0.10454044 \
-0.03501261  0.87023518 -0.34357893]\\nvariable(0.99391333)\\n[ 0.00290636 \
-0.00660732  0.01029193 -0.00503707 -0.00188473  0.00029818\\n -0.0009589  \
-0.00443722  0.00573339 -0.00717827 -0.00533586  0.00209591\\n -0.00158446 \
-0.00212844 -0.00598255 -0.01039361  0.00146131 -0.00012774\\n  0.00447131  \
0.00702376  0.0047238  -0.00742065 -0.01433074 -0.00862076]\\n\>\""}], ",", 
   RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}]}], 
  "\[RightAssociation]"}]], "Input",
 CellLabel->
  "In[131]:=",ExpressionUUID->"efbdcb87-cf24-4071-bb52-1874551c474f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.51566624)\\n[-0.34729406  0.36146094  0.55695365  \
0.40899441  0.09194422 -0.00288493\\n  0.34746347 -0.72713794  0.10300112  \
0.99149757  0.13769308  1.0337861\\n  0.42087642  0.39651021 -0.61231673  \
0.44392543 -0.18680237 -0.41457531\\n  0.53099271 -0.176059    0.10454044 \
-0.03501261  0.87023518 -0.34357893]\\nvariable(0.99391333)\\n[ 0.00290636 \
-0.00660732  0.01029193 -0.00503707 -0.00188473  0.00029818\\n -0.0009589  \
-0.00443722  0.00573339 -0.00717827 -0.00533586  0.00209591\\n -0.00158446 \
-0.00212844 -0.00598255 -0.01039361  0.00146131 -0.00012774\\n  0.00447131  \
0.00702376  0.0047238  -0.00742065 -0.01433074 -0.00862076]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817792340384288*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"eee34590-0d00-42b6-a8a6-4b03f1d2dddc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.817722774935706*^9, 
  3.817722785978958*^9}},ExpressionUUID->"53e6bd7b-1d17-4a1e-8a40-\
22a018eed3c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\nimport chainer as ch\n\
import pickle\npar_multiplicity=2\n\
parameters=ch.Variable(np.array([0.049431159925426016,2.0971826881228175,1.\
9558443268702845,-3.879886900967808, \
-0.7872929911255397,3.163342822710785,-0.10797123542461406, 4.86518613798269, \
 0.917307768531554,-5.5444502641063185, 6.266268104834758, \
4.7765043994641445, 3.59062779362851, 5.276025913422831, 4.927755050742828, \
4.888912700553572, 0.1315880185269016, 2.2552263123593193, \
-1.306859377781489, -0.9743835390864923, -2.905148883656384, \
-2.6995002982137706, -4.4101684202100255, -1.3593739583418731]))\n\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/graph_\
input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\ninit_layer=init_layer_input\nlayers \
=layers_input\ndel complete_graph_input\ndel init_layer_input\ndel \
layers_input\n\nnodes=[node for edge in complete_graph for node in edge]\n\
nodes=set(nodes)\nn=len(nodes)\ndel nodes\n\ngs_reg=qem.Reg(n)\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/gs.dat'\
,'rb') as file:\n    \
gs_reg.psi.re=np.array(pickle.load(file)).reshape((2,)*n)   \n\n\
init_reg=qem.Reg(n)   \nfor edge in init_layer:\n    \
qem.apply_prepare_singlet(edge,init_reg)\n\n\
E=_HVQE.Heisenberg_energy_from_parameters(complete_graph,init_reg,layers,n,\
par_multiplicity,parameters)\n\nprint(E)\nE.backward()\n\
print(parameters.grad)\n\n\
parameters=ch.Variable(np.array([0.049431159925426016,2.0971826881228175,1.\
9558443268702845,-3.879886900967808, \
-0.7872929911255397,3.163342822710785,-0.10797123542461406, 4.86518613798269, \
 0.917307768531554,-5.5444502641063185, 6.266268104834758, \
4.7765043994641445, 3.59062779362851, 5.276025913422831, 4.927755050742828, \
4.888912700553572, 0.1315880185269016, 2.2552263123593193, \
-1.306859377781489, -0.9743835390864923, -2.905148883656384, \
-2.6995002982137706, -4.4101684202100255, -1.3593739583418731]))\n\n\
inf=_HVQE.infidelity_from_parameters(init_reg,layers,n,par_multiplicity,\
parameters,gs_reg)\nprint(inf)\ninf.backward()\nprint(parameters.grad)\n\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.817710950604147*^9, 3.817710978414969*^9}, 
   3.817711284590521*^9, {3.817714799744871*^9, 3.817714824274205*^9}, {
   3.817722614999135*^9, 3.8177226323389378`*^9}, {3.8177230629273453`*^9, 
   3.817723128177599*^9}, {3.817723208756331*^9, 3.8177232089340353`*^9}, {
   3.8177241000795393`*^9, 3.8177241200347*^9}, {3.817724260281371*^9, 
   3.81772426517381*^9}, {3.817724319930176*^9, 3.817724322346272*^9}, {
   3.81772561527169*^9, 3.817725637797605*^9}, {3.817725881215712*^9, 
   3.8177258969267073`*^9}, {3.817728603692115*^9, 3.8177286237716093`*^9}, {
   3.817728662592539*^9, 3.817728679679529*^9}, {3.817746834585647*^9, 
   3.8177468510969687`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"97f29cb8-f056-4fb0-8baa-c9cbb9b99fdc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-1.51566624)\\n[-0.34729406  0.36146094  0.55695365  \
0.40899441  0.09194422 -0.00288493\\n  0.34746347 -0.72713794  0.10300112  \
0.99149757  0.13769308  1.0337861\\n  0.42087642  0.39651021 -0.61231673  \
0.44392543 -0.18680237 -0.41457531\\n  0.53099271 -0.176059    0.10454044 \
-0.03501261  0.87023518 -0.34357893]\\nvariable(0.99391333)\\n[ 0.00290636 \
-0.00660732  0.01029193 -0.00503707 -0.00188473  0.00029818\\n -0.0009589  \
-0.00443722  0.00573339 -0.00717827 -0.00533586  0.00209591\\n -0.00158446 \
-0.00212844 -0.00598255 -0.01039361  0.00146131 -0.00012774\\n  0.00447131  \
0.00702376  0.0047238  -0.00742065 -0.01433074 -0.00862076]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817725953408329*^9, 3.817728626896082*^9, 
  3.817728787097629*^9, 3.8177485695936327`*^9, 3.817792343455092*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"d10dcd43-e925-4ba1-803c-34f875f9e381"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Kagome 12 One Per Layer (passed) ", "Subsection",
 CellChangeTimes->{{3.8177227364707317`*^9, 3.8177227556438637`*^9}, {
   3.817722790775399*^9, 3.817722793367757*^9}, {3.817725964769081*^9, 
   3.81772599350527*^9}, 3.8177260542109013`*^9, {3.817726269080654*^9, 
   3.817726271785344*^9}, {3.81772655377769*^9, 3.8177265560488167`*^9}, 
   3.817726769895236*^9, {3.8177290966395082`*^9, 3.817729100511169*^9}, 
   3.817738644994382*^9, {3.817793207060804*^9, 
   3.817793209429311*^9}},ExpressionUUID->"4c195192-b6fb-4cf8-89e7-\
847cb8fb3c69"],

Cell[CellGroupData[{

Cell["Mathematica", "Subsubsection",
 CellChangeTimes->{{3.817722759639859*^9, 
  3.817722773352744*^9}},ExpressionUUID->"557e6381-26eb-413f-84ab-\
f29729e04372"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"InitStateChain", "[", "12", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer0Kagome12", "[", "par_", "]"}], ":=", 
  RowBox[{"(", "\n", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer0Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";"}], "\n", ")"}]}], "\n", 
 RowBox[{
  RowBox[{"ApplyLayer1Kagome12", "[", "par_", "]"}], ":=", 
  RowBox[{"(", "\n", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer1Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";"}], "\n", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer2Kagome12", "[", "par_", "]"}], ":=", 
  RowBox[{"(", "\n", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer2Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";"}], "\n", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApplyLayer3Kagome12", "[", "par_", "]"}], ":=", 
  RowBox[{"(", "\n", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"HeisenbergExp", "[", 
        RowBox[{
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Layer3Kagome12", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", "2"}], "]"}], "]"}], ",", "par", ",", "12"}], 
        "]"}], ".", "state"}], "//", "N"}]}], ";"}], "\n", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EnergyKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"EnergyKagome12", "[", "state", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "//", "Chop"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InfidelityKagome12FromPars", "[", "pars_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"state", "=", 
     RowBox[{"InitStateChain", "[", "12", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer2Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer3Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "4", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer0Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ApplyLayer1Kagome12", "[", 
     RowBox[{"pars", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Infidelity", "[", 
     RowBox[{
      RowBox[{"state", "//", "Flatten"}], ",", "GsKagome12"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.817702983403447*^9, 3.817702997772585*^9}, {
   3.817703053996069*^9, 3.817703235170381*^9}, {3.817703326455394*^9, 
   3.817703355206723*^9}, {3.817703389464101*^9, 3.817703389877544*^9}, {
   3.817703755872633*^9, 3.817703761133717*^9}, {3.817703871777256*^9, 
   3.817703874274041*^9}, {3.817703930978417*^9, 3.817703943682723*^9}, {
   3.817704028917556*^9, 3.817704078775323*^9}, 3.817704264608457*^9, {
   3.81770446815768*^9, 3.817704490106881*^9}, {3.817704809206815*^9, 
   3.817704809316882*^9}, {3.817704872762879*^9, 3.817704982506384*^9}, 
   3.817705312073762*^9, {3.817708984164798*^9, 3.817709109019253*^9}, {
   3.817709920648541*^9, 3.817709974815385*^9}, {3.8177100082738543`*^9, 
   3.8177100559007807`*^9}, {3.817710208398773*^9, 3.817710380086359*^9}, 
   3.817710421839981*^9, {3.817710461119117*^9, 3.817710462271315*^9}, {
   3.817710538967247*^9, 3.817710597829135*^9}, {3.817710668524296*^9, 
   3.817710670546494*^9}, {3.817710710709278*^9, 3.817710717971842*^9}, {
   3.817710750151053*^9, 3.817710811522625*^9}, {3.817711036418827*^9, 
   3.817711039115621*^9}, {3.817714414344213*^9, 3.817714415418639*^9}, {
   3.8177226889657097`*^9, 3.81772271181429*^9}, {3.8177228626823463`*^9, 
   3.817722886748358*^9}, {3.81772293149911*^9, 3.817722953533744*^9}, {
   3.817722985150535*^9, 3.8177229943175917`*^9}, {3.817723400074032*^9, 
   3.817723426074332*^9}, {3.817723462220251*^9, 3.817723504923641*^9}, {
   3.817724073298772*^9, 3.817724076993044*^9}, {3.817724193366229*^9, 
   3.817724241511077*^9}, {3.817724303225531*^9, 3.81772430349718*^9}, {
   3.817724390541462*^9, 3.817724450061054*^9}, {3.8177244855225143`*^9, 
   3.8177244857269783`*^9}, {3.817724753196179*^9, 3.817724845121936*^9}, {
   3.817725478436062*^9, 3.81772560467964*^9}, 3.8177256706655912`*^9, {
   3.817725824961643*^9, 3.8177258264450006`*^9}, {3.8177260213006077`*^9, 
   3.817726088357045*^9}, {3.81772613743071*^9, 3.817726255881507*^9}, {
   3.8177262909430323`*^9, 3.817726407824251*^9}, {3.817728873315716*^9, 
   3.817728873475193*^9}, {3.817749181806932*^9, 3.817749182140026*^9}, {
   3.8177492215965014`*^9, 3.817749275806097*^9}, {3.817749344014027*^9, 
   3.81774938289323*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"c5401f84-aaf5-4511-9676-b0d2d2bc7270"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numpars", "=", 
   RowBox[{"{", 
    RowBox[{"6.097430185765912", ",", "0.5166558411077276", ",", 
     RowBox[{"-", "1.5384999770341423"}], ",", 
     RowBox[{"-", "1.9514345193067513"}], ",", 
     RowBox[{"-", "1.9078261812912594"}], ",", 
     RowBox[{"-", "2.7691045498263342"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EnergyKagome12FromPars", "[", "numpars", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], "Input",
 CellChangeTimes->{{3.8177493480991163`*^9, 3.817749354002158*^9}, {
  3.817749384909081*^9, 3.8177494067666817`*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"5c18a052-a1fa-4391-b2bc-a48d1f437d36"],

Cell[BoxData[
 RowBox[{"-", "2.3458108589327495`"}]], "Output",
 CellChangeTimes->{3.81779240053969*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"9e5cbe72-1a3f-4932-8fc5-c918e146f97a"],

Cell[BoxData["0.9907951241716821`"], "Output",
 CellChangeTimes->{3.817792456731309*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"90a84bdf-0de9-4d18-8101-9db90e887511"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", 
       RowBox[{"Length", "[", "numpars", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"EnergyKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.817791395729739*^9, 3.8177914007698307`*^9}, {
  3.817791446787558*^9, 3.817791448659679*^9}, {3.8177914982158957`*^9, 
  3.8177914986767387`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"9820cc89-590a-49f7-90e1-dacbf569d444"],

Cell[BoxData[
 RowBox[{"-", "0.4144697207664194`"}]], "Output",
 CellChangeTimes->{3.817792563058384*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"27408e98-a509-4bdb-a2d2-42215bff40de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"VarIndex", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", 
    RowBox[{"numpars", "+", 
     RowBox[{"DeltaAt", "[", 
      RowBox[{"VarIndex", ",", 
       RowBox[{"Length", "[", "numpars", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"InfidelityKagome12FromPars", "[", "numpars", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"a", "-", "b"}], ")"}], "/", "\[Delta]"}]}], "Input",
 CellChangeTimes->{{3.817791381513896*^9, 3.81779140723578*^9}, {
  3.8177914564528093`*^9, 3.817791458243411*^9}, {3.817791503910358*^9, 
  3.817791503988638*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"58232455-8d3c-4f8e-98fb-10fb4b08c65c"],

Cell[BoxData[
 RowBox[{"-", "0.015897867577940872`"}]], "Output",
 CellChangeTimes->{3.817792665315261*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"23d1d169-ef65-49b0-be6d-5442058b29b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\"\<ExitCode\>\"", "\[Rule]", "0"}], ",", 
   RowBox[{
   "\"\<StandardOutput\>\"", "\[Rule]", 
    "\"\<No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-2.34581086)\\n[-0.41446951  0.079979    0.81810719  \
0.20887126  0.80076491 -0.28956556]\\nvariable(0.99079512)\\n[-0.01020546 \
-0.00552987 -0.00329207  0.02484425 -0.01589784  0.01016548]\\n\>\""}], ",", 
   RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}]}], 
  "\[RightAssociation]"}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"12e8d044-1020-4d71-855c-4bf03fa8cccc"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-2.34581086)\\n[-0.41446951  0.079979    0.81810719  \
0.20887126  0.80076491 -0.28956556]\\nvariable(0.99079512)\\n[-0.01020546 \
-0.00552987 -0.00329207  0.02484425 -0.01589784  0.01016548]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817792665355994*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"a5e15f35-06c0-408e-9a23-b95be8cce7e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Python", "Subsubsection",
 CellChangeTimes->{{3.817722774935706*^9, 
  3.817722785978958*^9}},ExpressionUUID->"59e49eb4-813b-4389-a25e-\
c941679f1ee3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "script", "=", 
   "\"\<\nimport qem\nimport _HVQE\nimport numpy as np\nimport chainer as ch\n\
import pickle\npar_multiplicity=6\n\
parameters=ch.Variable(np.array([6.097430185765912,0.5166558411077276,-1.\
5384999770341423,-1.9514345193067513,-1.9078261812912594,-2.7691045498263342])\
)\nwith open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/\
2x2/graph_input.txt', 'r') as file:\n    exec(file.read())\n\n\
complete_graph=complete_graph_input\ninit_layer=init_layer_input\nlayers \
=layers_input\ndel complete_graph_input\ndel init_layer_input\ndel \
layers_input\n\nnodes=[node for edge in complete_graph for node in edge]\n\
nodes=set(nodes)\nn=len(nodes)\ndel nodes\n\ngs_reg=qem.Reg(n)\nwith \
open('/Users/Georgi/HVQE/data/kagome/periodic/own_graph/ops/energy/2x2/gs.dat'\
,'rb') as file:\n    \
gs_reg.psi.re=np.array(pickle.load(file)).reshape((2,)*n)   \n\n\
init_reg=qem.Reg(n)   \nfor edge in init_layer:\n    \
qem.apply_prepare_singlet(edge,init_reg)\n\n\
E=_HVQE.Heisenberg_energy_from_parameters(complete_graph,init_reg,layers,n,\
par_multiplicity,parameters)\n\nprint(E)\nE.backward()\n\
print(parameters.grad)\n\n\
parameters=ch.Variable(np.array([6.097430185765912,0.5166558411077276,-1.\
5384999770341423,-1.9514345193067513,-1.9078261812912594,-2.7691045498263342])\
)\n\ninf=_HVQE.infidelity_from_parameters(init_reg,layers,n,par_multiplicity,\
parameters,gs_reg)\nprint(inf)\ninf.backward()\nprint(parameters.grad)\n\
\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<~/HVQE/tmp.txt\>\"", ",", "script"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<python3\>\"", ",", " ", "\"\</Users/Georgi/HVQE/tmp.txt\>\""}], "}"}],
   " ", "]"}]}], "Input",
 CellChangeTimes->{{3.817710950604147*^9, 3.817710978414969*^9}, 
   3.817711284590521*^9, {3.817714799744871*^9, 3.817714824274205*^9}, {
   3.817722614999135*^9, 3.8177226323389378`*^9}, {3.8177230629273453`*^9, 
   3.817723128177599*^9}, {3.817723208756331*^9, 3.8177232089340353`*^9}, {
   3.8177241000795393`*^9, 3.8177241200347*^9}, {3.817724260281371*^9, 
   3.81772426517381*^9}, {3.817724319930176*^9, 3.817724322346272*^9}, {
   3.81772561527169*^9, 3.817725637797605*^9}, {3.817725881215712*^9, 
   3.8177258969267073`*^9}, {3.8177264176336718`*^9, 
   3.8177264268813257`*^9}, {3.817726522723377*^9, 3.817726542562562*^9}, {
   3.817728823443611*^9, 3.817728833267885*^9}, {3.817746870603088*^9, 
   3.817746911195149*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"4c942eb3-bd3a-421f-9807-eb8654f14139"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", 
    "\[Rule]", "\<\"No CuPy installation found, continuing without GPU \
acceleration.\\nvariable(-2.34581086)\\n[-0.41446951  0.079979    0.81810719  \
0.20887126  0.80076491 -0.28956556]\\nvariable(0.99079512)\\n[-0.01020546 \
-0.00552987 -0.00329207  0.02484425 -0.01589784  0.01016548]\\n\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.817725953408329*^9, 3.8177264872169933`*^9, 
  3.817726545464136*^9, 3.817728931297991*^9, 3.817750056939096*^9, 
  3.8177926680418997`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"76532c1e-066e-4bd8-9e82-5276b005e906"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here I test the computation of the correlation functions (still to be tested)\
\
\>", "Section",
 CellChangeTimes->{{3.817793253029476*^9, 
  3.817793264918941*^9}},ExpressionUUID->"86c5dd26-0ca8-48e7-8d42-\
e311c203a1ca"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "10"}], ";", "\n", 
    RowBox[{"ket0", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "0", "}"}]}], "}"}]}], ";", "\n", 
    RowBox[{"ket1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], ";", "\n", 
    RowBox[{"id", "=", 
     RowBox[{"PauliMatrix", "[", "0", "]"}]}], ";", "\n", 
    RowBox[{"X", "=", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], ";", "\n", 
    RowBox[{"Y", "=", 
     RowBox[{"PauliMatrix", "[", "2", "]"}]}], ";", "\n", 
    RowBox[{"Z", "=", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], ";", "\n", 
    RowBox[{"K", "=", "KroneckerProduct"}], ";", "\n", 
    RowBox[{
     RowBox[{"MyId", "[", "n_", "]"}], ":=", " ", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"d", "==", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
         RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"termat", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "X", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"j", "-", "i", "-", "1"}], ")"}]}], "]"}], ",", "X", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"n", "-", "j"}], ")"}]}], "]"}]}], "]"}], "+", "\n", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "Y", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"j", "-", "i", "-", "1"}], ")"}]}], "]"}], ",", "Y", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"n", "-", "j"}], ")"}]}], "]"}]}], "]"}], "+", "\n", 
      RowBox[{"K", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "Z", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"j", "-", "i", "-", "1"}], ")"}]}], "]"}], ",", "Z", ",", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{"n", "-", "j"}], ")"}]}], "]"}]}], "]"}]}]}], ";", "\n", 
    RowBox[{"Hamiltonian", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "4"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"termat", "[", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "+", 
         RowBox[{"termat", "[", 
          RowBox[{"1", ",", "n"}], "]"}]}], ")"}]}], "//", "N"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"HeisenbergExp", "[", 
      RowBox[{"i_", ",", "j_", ",", "angle_"}], "]"}], ":=", 
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "angle", " ", 
       RowBox[{"termat", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"energy", "[", "state_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"ConjugateTranspose", "[", "state", "]"}], ".", "Hamiltonian", 
       ".", "state"}], "//", "FullSimplify"}]}], ";", "\n", 
    RowBox[{"singlet", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"K", "[", 
         RowBox[{"ket0", ",", "ket1"}], "]"}], "-", 
        RowBox[{"K", "[", 
         RowBox[{"ket1", ",", "ket0"}], "]"}]}], ")"}], "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";", "\n", 
    RowBox[{
     RowBox[{"Xat", "[", "i_", "]"}], ":=", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "X", ",", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"n", "-", "i"}], ")"}]}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"Yat", "[", "i_", "]"}], ":=", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "Y", ",", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"n", "-", "i"}], ")"}]}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"Zat", "[", "i_", "]"}], ":=", 
     RowBox[{"K", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], "]"}], ",", "Z", ",", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"n", "-", "i"}], ")"}]}], "]"}]}], "]"}]}], ";", "\n", 
    RowBox[{"gst", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Eigenvectors", "[", "Hamiltonian", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ";", "\n", 
    RowBox[{"gs", "=", 
     RowBox[{"gst", "//", "Transpose"}]}], ";", "\n", 
    RowBox[{
     RowBox[{"correlator", "[", 
      RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"gst", ".", 
          RowBox[{"Xat", "[", "i", "]"}], ".", 
          RowBox[{"Xat", "[", "j", "]"}], ".", "gs"}], "+", 
         RowBox[{"gst", ".", 
          RowBox[{"Yat", "[", "i", "]"}], ".", 
          RowBox[{"Yat", "[", "j", "]"}], ".", "gs"}], "+", 
         RowBox[{"gst", ".", 
          RowBox[{"Zat", "[", "i", "]"}], ".", 
          RowBox[{"Zat", "[", "j", "]"}], ".", "gs"}], " ", "-", " ", 
         RowBox[{
          RowBox[{"gst", ".", 
           RowBox[{"Xat", "[", "i", "]"}], ".", "gs"}], "  ", 
          RowBox[{"gst", ".", 
           RowBox[{"Xat", "[", "j", "]"}], ".", "gs"}]}], "   ", "-", " ", 
         RowBox[{
          RowBox[{"gst", ".", 
           RowBox[{"Yat", "[", "i", "]"}], ".", "gs"}], "  ", 
          RowBox[{"gst", ".", 
           RowBox[{"Yat", "[", "j", "]"}], ".", "gs"}]}], "  ", "-", " ", 
         RowBox[{
          RowBox[{"gst", ".", 
           RowBox[{"Zat", "[", "i", "]"}], ".", "gs"}], "  ", 
          RowBox[{"gst", ".", 
           RowBox[{"Zat", "[", "j", "]"}], ".", "gs"}]}]}], "  ", ")"}], "/", 
       "4"}], "\n", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"correlator", "[", 
            RowBox[{"1", ",", "i"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.817793247993896*^9, {3.8177932857056923`*^9, 
   3.81779329454012*^9}},ExpressionUUID->"81fd0f3b-ee4a-4de6-b9a1-\
f8697a92e66c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The matrix of HeisenbergExp and Heisenberg (passed)", "Section",
 CellChangeTimes->{{3.817793272950046*^9, 
  3.8177932750310802`*^9}},ExpressionUUID->"7284ea0a-8d87-4b89-b1a1-\
1885ed60cd89"],

Cell["\<\
In my implementation of the gate 'Heisenberg' and the gate 'HeisenbergExp', I \
use that
(XX+YY+ZZ)/4=SWAP/2-Id/4
e^(-i \[Theta]/4) * e^(-i (XX+YY+ZZ)/4)=cos(\[Theta]/2)Id-i \
sin(\[Theta]/2)SWAP\
\>", "Text",ExpressionUUID->"1cac97ef-84fd-4f3a-bc52-24a2b7d3c4cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[192]:=",ExpressionUUID->"f190fc29-14bd-4039-b119-3e73511851ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"K", "[", 
      RowBox[{"X", ",", "X"}], "]"}], "+", 
     RowBox[{"K", "[", 
      RowBox[{"Y", ",", "Y"}], "]"}], "+", 
     RowBox[{"K", "[", 
      RowBox[{"Z", ",", "Z"}], "]"}]}], ")"}], "/", "4"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[193]:=",ExpressionUUID->"06d6ccc4-d38b-409f-8ec0-a83f11c5da6b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "4"], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "2"], "0"},
     {"0", 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], "0"},
     {"0", "0", "0", 
      FractionBox["1", "4"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8177926729899807`*^9},
 CellLabel->
  "Out[193]//MatrixForm=",ExpressionUUID->"ea3a7612-d5c4-42e0-a8c6-\
1a07546558d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SWAP", "/", "2"}], "-", " ", 
   RowBox[{
    RowBox[{"K", "[", 
     RowBox[{"id", ",", "id"}], "]"}], "/", "4"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[194]:=",ExpressionUUID->"d86d8211-c398-4b53-875e-def588d4c34e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "4"], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "4"]}], 
      FractionBox["1", "2"], "0"},
     {"0", 
      FractionBox["1", "2"], 
      RowBox[{"-", 
       FractionBox["1", "4"]}], "0"},
     {"0", "0", "0", 
      FractionBox["1", "4"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8177926730322247`*^9},
 CellLabel->
  "Out[194]//MatrixForm=",ExpressionUUID->"454f91db-aebc-4209-ac7a-\
a19417d47815"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", " ", "I"}], " ", "\[Theta]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"K", "[", 
          RowBox[{"X", ",", "X"}], "]"}], "+", 
         RowBox[{"K", "[", 
          RowBox[{"Y", ",", "Y"}], "]"}], "+", 
         RowBox[{"K", "[", 
          RowBox[{"Z", ",", "Z"}], "]"}]}], ")"}], "/", "4"}]}], "]"}], 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", "I"}], " ", 
       RowBox[{"\[Theta]", "/", "4"}]}], ")"}]}]}], "//", "FullSimplify"}], "//",
   "MatrixForm"}]], "Input",
 CellLabel->
  "In[195]:=",ExpressionUUID->"99eea051-ba9b-4fce-8d36-413b10bb8d16"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]", "2"], "]"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]", "2"], "]"}]}], 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8177926731048403`*^9},
 CellLabel->
  "Out[195]//MatrixForm=",ExpressionUUID->"7d051841-407c-4ca5-8abc-\
d5e5e1cd6eae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}], 
      RowBox[{"K", "[", 
       RowBox[{"id", ",", "id"}], "]"}]}], "-", 
     RowBox[{"I", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}], " ", "SWAP"}]}], " ", ")"}], "//",
    "FullSimplify"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[196]:=",ExpressionUUID->"4e5b0d32-0459-4406-9497-74a6ba88a2e9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]], "0", "0", "0"},
     {"0", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]", "2"], "]"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]", "2"], "]"}]}], 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], "0"},
     {"0", "0", "0", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.817792673157757*^9},
 CellLabel->
  "Out[196]//MatrixForm=",ExpressionUUID->"277eb6b1-b4a5-4a70-996e-\
6652d98292b1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellLabel->
  "In[197]:=",ExpressionUUID->"dc226199-9a2b-4851-ad20-8e86c2532d85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyId", "[", 
  RowBox[{"2", "^", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.817646238964568*^9, 3.817646319532147*^9}, {
  3.817646634762063*^9, 3.817646639039806*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"f5a0e09a-1fdf-4333-981a-fec4d734c849"],

Cell[BoxData[
 TemplateBox[{
  "Piecewise", "pairs", 
   "\"The first argument \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}], \\\",\\\", RowBox[{\\\"d\\\
\", \\\"\[Equal]\\\", \\\"1\\\"}]}], \\\"}\\\"}]\\) of Piecewise is not a \
list of pairs.\"", 2, 198, 7, 28997182830261922240, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.817792673254932*^9},
 CellLabel->
  "During evaluation of \
In[198]:=",ExpressionUUID->"99cb4c3c-ca95-4a25-a39b-d84c30f94e93"],

Cell[BoxData[
 RowBox[{"Piecewise", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
     RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.817646249702013*^9, 3.817646319924221*^9}, 
   3.817792673256363*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"321e97f8-ff29-4d9d-a051-913333d5407a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"K", "[", 
  RowBox[{
   RowBox[{"K", "[", 
    RowBox[{
     RowBox[{"MyId", "[", 
      RowBox[{"2", "^", "0"}], "]"}], ",", "X", ",", 
     RowBox[{"MyId", "[", 
      RowBox[{"2", "^", "0"}], "]"}], ",", "X"}], "]"}], ",", 
   RowBox[{"MyId", "[", 
    SuperscriptBox["2", "16"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.817646357962749*^9, 3.8176464827970343`*^9}, {
  3.817646576179674*^9, 3.817646587326253*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"573c124e-2821-4429-b159-eaf2dfb70b46"],

Cell[BoxData[
 RowBox[{"KroneckerProduct", "[", 
  RowBox[{
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
         RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
         RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
       RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], "]"}]], "Output",\

 CellChangeTimes->{{3.817646369270132*^9, 3.8176464114572067`*^9}, {
   3.8176464460420237`*^9, 3.817646483148431*^9}, 3.817792673287135*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"7ec3d082-cd3d-4b65-83e3-f7cede09d078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{"X", ",", "X", ",", 
    RowBox[{"K", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MyId", "[", "2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}]}]}], "]"}], "+", 
  RowBox[{"K", "[", 
   RowBox[{"Y", ",", "Y", ",", 
    RowBox[{"K", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MyId", "[", "2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}]}]}], "]"}], "+", 
  RowBox[{"K", "[", 
   RowBox[{"Z", ",", "Z", ",", 
    RowBox[{"K", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MyId", "[", "2", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "18"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.817646663011862*^9, 3.817646756106248*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"300108d4-1d1c-4668-9eb1-c701de3d1e02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}], "+", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}], "+", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
          RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{
  3.817646678338108*^9, {3.817646712012782*^9, 3.817646756763661*^9}, 
   3.817792673347521*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"0ae37a8f-7417-419e-b726-55f06b270191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"K", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"MyId", "[", "0", "]"}], "}"}], ",", "id"}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.8176476155760612`*^9, 3.8176476307892027`*^9}, {
  3.817652237939192*^9, 3.817652254029179*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"4d2240aa-1998-4cd8-baae-1acb70dd13a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
         RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}], ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Piecewise", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"d", "\[Equal]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "d", "]"}], ",", 
         RowBox[{"d", "\[NotEqual]", "1"}]}], "}"}]}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.817647618519024*^9, 3.817647631282217*^9}, 
   3.817652033176474*^9, 3.817652064315496*^9, {3.817652241997898*^9, 
   3.8176522544921618`*^9}, 3.81779267337595*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"5abb062f-0d9c-4a7c-a623-f2cfd379c1cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", "id"}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.817652462551297*^9, 3.817652486738435*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"d3390a26-a02e-482e-af8c-a0b8069dc59e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8176524711204433`*^9, 3.8176524869673977`*^9}, 
   3.8177926734292173`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"4df63a41-ed59-4b22-b23a-2d01c1bfd42f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1287, 755},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"25fc849a-3676-41d0-bc4b-d7f74587fedd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 81, 0, 146, "Title",ExpressionUUID->"58e55096-6657-497b-9455-ec14abde8f10"],
Cell[664, 24, 523, 9, 157, "Text",ExpressionUUID->"8bb99ae1-3151-4242-9362-a39a768271a7"],
Cell[CellGroupData[{
Cell[1212, 37, 82, 0, 101, "Section",ExpressionUUID->"d78061e7-5d77-4a9f-8446-aff52997570a"],
Cell[CellGroupData[{
Cell[1319, 41, 15399, 426, 1640, "Input",ExpressionUUID->"90edd53f-3a25-4678-b9ca-143f70faf01e"],
Cell[16721, 469, 988, 28, 142, "Output",ExpressionUUID->"8df5a4f3-532a-4cbd-8ae1-4c3b5996054a"]
}, Open  ]],
Cell[17724, 500, 1108, 34, 109, "Input",ExpressionUUID->"e1be947e-081c-476d-9f22-9bf118e0d9e8"],
Cell[CellGroupData[{
Cell[18857, 538, 168, 3, 81, "Subsection",ExpressionUUID->"155e0df4-4e3a-4b54-ad74-d3790e372023"],
Cell[CellGroupData[{
Cell[19050, 545, 96444, 1586, 213, "Input",ExpressionUUID->"c57b9c28-1967-4ed8-a4d9-28ff2f630a12"],
Cell[115497, 2133, 96495, 1587, 219, "Output",ExpressionUUID->"292fe082-5088-4c73-8fa5-50419f2e0732"]
}, Open  ]],
Cell[212007, 3723, 5720, 175, 698, "Input",ExpressionUUID->"029af117-5709-4ebb-b753-8769781238bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217764, 3903, 166, 3, 81, "Subsection",ExpressionUUID->"5cddc79d-753c-48a7-a181-7543eb6d997a"],
Cell[217933, 3908, 76307, 1259, 260, "Text",ExpressionUUID->"9d8c7921-4609-4605-8d99-0fc1d75eca39"],
Cell[294243, 5169, 7282, 206, 698, "Input",ExpressionUUID->"748112ef-d125-46c1-9d14-5e57718e1e10"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301574, 5381, 273, 6, 158, "Section",ExpressionUUID->"64e1b48b-0a02-4e8f-9287-417dd05b542f"],
Cell[CellGroupData[{
Cell[301872, 5391, 175, 3, 81, "Subsection",ExpressionUUID->"7e9167db-a5e7-42ac-8655-c5ab7133291c"],
Cell[CellGroupData[{
Cell[302072, 5398, 157, 3, 67, "Subsubsection",ExpressionUUID->"4351e5f9-9d3c-441c-8637-239e79144d8c"],
Cell[CellGroupData[{
Cell[302254, 5405, 1259, 27, 760, "Input",ExpressionUUID->"06675040-e109-4912-9d03-5dd2c181426c"],
Cell[303516, 5434, 1343, 23, 363, "Output",ExpressionUUID->"f978197a-4344-43e8-abce-90efd82d05a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[304908, 5463, 162, 3, 67, "Subsubsection",ExpressionUUID->"646ab14e-2292-4dc9-bf3a-fe5675568f2f"],
Cell[CellGroupData[{
Cell[305095, 5470, 1337, 34, 109, "Input",ExpressionUUID->"0a375da9-0ccc-474c-bcff-d0c28053c039"],
Cell[306435, 5506, 549, 10, 52, "Output",ExpressionUUID->"cae12565-d447-4f3f-a829-e9c9156626c8"],
Cell[306987, 5518, 1761, 31, 146, "Output",ExpressionUUID->"0447547b-d5f3-4448-8c67-98ddfea7c4d3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[308809, 5556, 217, 4, 81, "Subsection",ExpressionUUID->"5f2842eb-11f6-438f-9670-17239cd9519a"],
Cell[CellGroupData[{
Cell[309051, 5564, 333, 5, 67, "Subsubsection",ExpressionUUID->"e359ca5a-0530-487d-af84-d6ff2ced648e"],
Cell[CellGroupData[{
Cell[309409, 5573, 1170, 24, 760, "Input",ExpressionUUID->"497c62e8-564b-478a-9a5a-94266e10620d"],
Cell[310582, 5599, 683, 13, 146, "Output",ExpressionUUID->"710071c5-cd07-4a3b-a825-6726d9f5a385"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311314, 5618, 215, 4, 67, "Subsubsection",ExpressionUUID->"f392d678-5935-4b16-b3d1-d2659a64a62f"],
Cell[CellGroupData[{
Cell[311554, 5626, 943, 24, 140, "Input",ExpressionUUID->"6f9c67ce-d45e-46b5-b89c-d037de85eb92"],
Cell[312500, 5652, 425, 8, 52, "Output",ExpressionUUID->"6c55aebe-5db7-40eb-8a14-e11e52b55959"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[312986, 5667, 311, 5, 81, "Subsection",ExpressionUUID->"6ffe2f33-7678-4ded-9674-b7794dd1daf9"],
Cell[CellGroupData[{
Cell[313322, 5676, 157, 3, 67, "Subsubsection",ExpressionUUID->"7646dcdf-2708-42e5-a501-998391f4f10a"],
Cell[CellGroupData[{
Cell[313504, 5683, 1387, 27, 729, "Input",ExpressionUUID->"a506a473-acf1-47d5-9442-a0e5b4ea9b2f"],
Cell[314894, 5712, 817, 14, 146, "Output",ExpressionUUID->"b31b2fce-3e24-46a8-8e4d-4cdf38145c63"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315760, 5732, 162, 3, 67, "Subsubsection",ExpressionUUID->"ad46a49c-dc05-4a67-8bf6-37261a07c832"],
Cell[CellGroupData[{
Cell[315947, 5739, 984, 24, 140, "Input",ExpressionUUID->"500803e3-2547-43ab-844b-d96051685be7"],
Cell[316934, 5765, 278, 5, 52, "Output",ExpressionUUID->"f985bfdd-7748-40e1-b0b7-f1be9aafdd2e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317285, 5778, 419, 8, 78, "Section",ExpressionUUID->"af3b50d1-d784-4372-87c2-dd5263ed4f94"],
Cell[CellGroupData[{
Cell[317729, 5790, 409, 6, 81, "Subsection",ExpressionUUID->"1a1d0799-9327-4e2d-a283-86591ab1289d"],
Cell[CellGroupData[{
Cell[318163, 5800, 161, 3, 67, "Subsubsection",ExpressionUUID->"59a1abac-412c-4dbb-bb86-0c6cb5727993"],
Cell[CellGroupData[{
Cell[318349, 5807, 5811, 139, 822, "Input",ExpressionUUID->"e023704e-02c6-4848-b4c2-33893ae72089"],
Cell[324163, 5948, 505, 9, 52, "Output",ExpressionUUID->"5152fdc6-1170-49c5-9e8a-8fd53232f430"],
Cell[324671, 5959, 410, 6, 52, "Output",ExpressionUUID->"b0903ace-afc0-4da7-944f-68262adb704d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325118, 5970, 384, 8, 78, "Input",ExpressionUUID->"98604eaa-da41-47dd-a707-58a9d906c3f6"],
Cell[325505, 5980, 507, 9, 52, "Output",ExpressionUUID->"5c24032d-f7f3-4884-bbe5-b430db97401f"],
Cell[326015, 5991, 412, 6, 52, "Output",ExpressionUUID->"71ba47db-aab7-426f-ab25-e893c3754650"]
}, Open  ]],
Cell[326442, 6000, 408, 10, 78, "Input",ExpressionUUID->"36ac0ed1-263b-4425-bab6-b6e52cfe3191"],
Cell[CellGroupData[{
Cell[326875, 6014, 761, 14, 264, "Input",ExpressionUUID->"e9d3d7f8-ad87-453f-9f63-e4d0c466fd44"],
Cell[327639, 6030, 869, 15, 332, "Output",ExpressionUUID->"b652d592-697a-4fd2-bb18-811daa39900c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328557, 6051, 159, 3, 67, "Subsubsection",ExpressionUUID->"12f9fcf2-ac03-49ab-bee2-ec1847c8e21d"],
Cell[CellGroupData[{
Cell[328741, 6058, 3314, 55, 1752, "Input",ExpressionUUID->"02389321-5a34-4939-a4eb-3f8a80211092"],
Cell[332058, 6115, 1617, 25, 332, "Output",ExpressionUUID->"9e531e02-26d8-49be-aef3-70ead7350f75"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[333736, 6147, 499, 7, 55, "Subsection",ExpressionUUID->"5c3f1b01-8d7b-426d-ae97-01937fd2dc94"],
Cell[CellGroupData[{
Cell[334260, 6158, 164, 3, 67, "Subsubsection",ExpressionUUID->"cf1e9050-f918-40dd-9c93-2e64a41f2315"],
Cell[334427, 6163, 7513, 181, 977, "Input",ExpressionUUID->"7f25081f-35e0-4f1d-9f80-5c1e8c73124b"],
Cell[CellGroupData[{
Cell[341965, 6348, 1362, 27, 233, "Input",ExpressionUUID->"85c08833-8032-4524-9aa9-2c1d0d8ddf01"],
Cell[343330, 6377, 334, 6, 52, "Output",ExpressionUUID->"b06543ef-b3bf-4ffb-b82a-db65684588f1"],
Cell[343667, 6385, 322, 6, 52, "Output",ExpressionUUID->"d3d3c0ad-efa6-4523-9604-d4a8525ce225"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344026, 6396, 857, 22, 140, "Input",ExpressionUUID->"ffa8110c-e2f5-4e80-9726-fce026095a87"],
Cell[344886, 6420, 174, 3, 52, "Output",ExpressionUUID->"75a34d07-3e5a-43ca-aa64-560af8aeefa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345097, 6428, 712, 20, 140, "Input",ExpressionUUID->"184cce56-e419-4da3-943e-55c4100c0c2d"],
Cell[345812, 6450, 173, 3, 52, "Output",ExpressionUUID->"c5be4f10-f4a6-4605-9024-2b2f7e9ed2f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346022, 6458, 1034, 19, 357, "Input",ExpressionUUID->"2dcf8ecd-9302-4f2c-9b94-0a2b0247fda3"],
Cell[347059, 6479, 1073, 19, 425, "Output",ExpressionUUID->"a9b359e8-db12-4e0b-a700-f23c3637aef7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348181, 6504, 161, 3, 67, "Subsubsection",ExpressionUUID->"d8962f39-5efd-46c8-bc25-dd9abafbde53"],
Cell[CellGroupData[{
Cell[348367, 6511, 2987, 55, 1876, "Input",ExpressionUUID->"81095710-3ab1-4e0b-8654-96eb0cd81279"],
Cell[351357, 6568, 1407, 24, 425, "Output",ExpressionUUID->"7e28ae86-5cfd-4f77-b58d-366bfc670dd8"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[352825, 6599, 430, 6, 55, "Subsection",ExpressionUUID->"07844d20-2808-43f5-9fa8-37e8cb3918b6"],
Cell[CellGroupData[{
Cell[353280, 6609, 162, 3, 67, "Subsubsection",ExpressionUUID->"74008dbd-7bf2-4313-a676-13d053ccca06"],
Cell[353445, 6614, 12174, 309, 1504, "Input",ExpressionUUID->"e3664bb9-ce5e-42ee-bdd1-a219d7d6a4eb"],
Cell[CellGroupData[{
Cell[365644, 6927, 1501, 30, 295, "Input",ExpressionUUID->"34792d99-20ed-4d70-9ac5-a91feb03bb41"],
Cell[367148, 6959, 236, 5, 52, "Output",ExpressionUUID->"0ba08597-5943-4333-86e9-13bfda7768a5"],
Cell[367387, 6966, 220, 4, 52, "Output",ExpressionUUID->"73b95dfc-e4f2-46d3-b35d-ba85227234d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367644, 6975, 775, 21, 140, "Input",ExpressionUUID->"5de5258f-2766-4c9c-8e49-5e00faf6b56e"],
Cell[368422, 6998, 189, 4, 52, "Output",ExpressionUUID->"b4a8db18-501c-4497-8955-4fb4b90c5a73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368648, 7007, 781, 21, 140, "Input",ExpressionUUID->"e71e0cdd-76ff-4457-ac7f-029e14dc9fab"],
Cell[369432, 7030, 173, 3, 52, "Output",ExpressionUUID->"b85cfc06-60e1-4687-93dd-c85232fbc159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369642, 7038, 1105, 19, 388, "Input",ExpressionUUID->"efbdcb87-cf24-4071-bb52-1874551c474f"],
Cell[370750, 7059, 1144, 19, 425, "Output",ExpressionUUID->"eee34590-0d00-42b6-a8a6-4b03f1d2dddc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[371943, 7084, 157, 3, 67, "Subsubsection",ExpressionUUID->"53e6bd7b-1d17-4a1e-8a40-22a018eed3c6"],
Cell[CellGroupData[{
Cell[372125, 7091, 3340, 59, 1938, "Input",ExpressionUUID->"97f29cb8-f056-4fb0-8baa-c9cbb9b99fdc"],
Cell[375468, 7152, 1237, 20, 425, "Output",ExpressionUUID->"d10dcd43-e925-4ba1-803c-34f875f9e381"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[376766, 7179, 552, 8, 55, "Subsection",ExpressionUUID->"4c195192-b6fb-4cf8-89e7-847cb8fb3c69"],
Cell[CellGroupData[{
Cell[377343, 7191, 162, 3, 67, "Subsubsection",ExpressionUUID->"557e6381-26eb-413f-84ab-f29729e04372"],
Cell[377508, 7196, 16233, 401, 1659, "Input",ExpressionUUID->"c5401f84-aaf5-4511-9676-b0d2d2bc7270"],
Cell[CellGroupData[{
Cell[393766, 7601, 725, 16, 140, "Input",ExpressionUUID->"5c18a052-a1fa-4391-b2bc-a48d1f437d36"],
Cell[394494, 7619, 187, 4, 52, "Output",ExpressionUUID->"9e5cbe72-1a3f-4932-8fc5-c918e146f97a"],
Cell[394684, 7625, 171, 3, 52, "Output",ExpressionUUID->"90a84bdf-0de9-4d18-8101-9db90e887511"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394892, 7633, 827, 22, 140, "Input",ExpressionUUID->"9820cc89-590a-49f7-90e1-dacbf569d444"],
Cell[395722, 7657, 188, 4, 52, "Output",ExpressionUUID->"27408e98-a509-4bdb-a2d2-42215bff40de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395947, 7666, 830, 22, 140, "Input",ExpressionUUID->"58232455-8d3c-4f8e-98fb-10fb4b08c65c"],
Cell[396780, 7690, 190, 4, 52, "Output",ExpressionUUID->"23d1d169-ef65-49b0-be6d-5442058b29b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397007, 7699, 644, 13, 233, "Input",ExpressionUUID->"12e8d044-1020-4d71-855c-4bf03fa8cccc"],
Cell[397654, 7714, 683, 13, 239, "Output",ExpressionUUID->"a5e15f35-06c0-408e-9a23-b95be8cce7e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[398386, 7733, 157, 3, 67, "Subsubsection",ExpressionUUID->"59e49eb4-813b-4389-a25e-c941679f1ee3"],
Cell[CellGroupData[{
Cell[398568, 7740, 2650, 48, 1628, "Input",ExpressionUUID->"4c942eb3-bd3a-421f-9807-eb8654f14139"],
Cell[401221, 7790, 803, 15, 239, "Output",ExpressionUUID->"76532c1e-066e-4bd8-9e82-5276b005e906"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[402097, 7813, 232, 6, 158, "Section",ExpressionUUID->"86c5dd26-0ca8-48e7-8d42-e311c203a1ca"],
Cell[402332, 7821, 7691, 211, 946, "Input",ExpressionUUID->"81fd0f3b-ee4a-4de6-b9a1-f8697a92e66c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410060, 8037, 198, 3, 101, "Section",ExpressionUUID->"7284ea0a-8d87-4b89-b1a1-1885ed60cd89"],
Cell[410261, 8042, 274, 6, 122, "Text",ExpressionUUID->"1cac97ef-84fd-4f3a-bc52-24a2b7d3c4cd"],
Cell[410538, 8050, 517, 15, 46, "Input",ExpressionUUID->"f190fc29-14bd-4039-b119-3e73511851ca"],
Cell[CellGroupData[{
Cell[411080, 8069, 401, 13, 46, "Input",ExpressionUUID->"06d6ccc4-d38b-409f-8ec0-a83f11c5da6b"],
Cell[411484, 8084, 893, 29, 182, "Output",ExpressionUUID->"ea3a7612-d5c4-42e0-a8c6-1a07546558d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412414, 8118, 282, 9, 46, "Input",ExpressionUUID->"d86d8211-c398-4b53-875e-def588d4c34e"],
Cell[412699, 8129, 893, 29, 182, "Output",ExpressionUUID->"454f91db-aebc-4209-ac7a-a19417d47815"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413629, 8163, 740, 23, 46, "Input",ExpressionUUID->"99eea051-ba9b-4fce-8d36-413b10bb8d16"],
Cell[414372, 8188, 1375, 41, 190, "Output",ExpressionUUID->"7d051841-407c-4ca5-8abc-d5e5e1cd6eae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415784, 8234, 495, 15, 46, "Input",ExpressionUUID->"4e5b0d32-0459-4406-9497-74a6ba88a2e9"],
Cell[416282, 8251, 1373, 41, 190, "Output",ExpressionUUID->"277eb6b1-b4a5-4a70-996e-6652d98292b1"]
}, Open  ]],
Cell[417670, 8295, 109, 2, 46, "Input",ExpressionUUID->"dc226199-9a2b-4851-ad20-8e86c2532d85"],
Cell[CellGroupData[{
Cell[417804, 8301, 279, 6, 45, "Input",ExpressionUUID->"f5a0e09a-1fdf-4333-981a-fec4d734c849"],
Cell[418086, 8309, 514, 11, 70, "Message",ExpressionUUID->"99cb4c3c-ca95-4a25-a39b-d84c30f94e93"],
Cell[418603, 8322, 498, 14, 70, "Output",ExpressionUUID->"321e97f8-ff29-4d9d-a051-913333d5407a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419138, 8341, 532, 14, 49, "Input",ExpressionUUID->"573c124e-2821-4429-b159-eaf2dfb70b46"],
Cell[419673, 8357, 1728, 51, 70, "Output",ExpressionUUID->"7ec3d082-cd3d-4b65-83e3-f7cede09d078"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421438, 8413, 974, 29, 78, "Input",ExpressionUUID->"300108d4-1d1c-4668-9eb1-c701de3d1e02"],
Cell[422415, 8444, 20936, 601, 70, "Output",ExpressionUUID->"0ae37a8f-7417-419e-b726-55f06b270191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443388, 9050, 372, 10, 45, "Input",ExpressionUUID->"4d2240aa-1998-4cd8-baae-1acb70dd13a4"],
Cell[443763, 9062, 1119, 33, 70, "Output",ExpressionUUID->"5abb062f-0d9c-4a7c-a623-f2cfd379c1cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444919, 9100, 228, 5, 46, "Input",ExpressionUUID->"d3390a26-a02e-482e-af8c-a0b8069dc59e"],
Cell[445150, 9107, 352, 10, 52, "Output",ExpressionUUID->"4df63a41-ed59-4b22-b23a-2d01c1bfd42f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

