/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:32.306304 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 4, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:32.306304', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:35.037897 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 8, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:35.037897', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:37.685495 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 12, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:37.685495', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:40.376256 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 16, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:40.376256', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:43.038736 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 20, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:43.038736', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:45.653476 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 24, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:45.653476', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:48.284590 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 28, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:48.284590', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:50.898520 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 32, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:50.898520', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:53.609286 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 36, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:53.609286', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:56.249678 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 40, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:56.249678', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:51:58.883504 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 44, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:51:58.883504', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:01.521432 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 48, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:01.521432', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:04.134187 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 52, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:04.134187', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:06.794111 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 56, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:06.794111', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:09.482199 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 60, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:09.482199', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:12.086515 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 64, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:12.086515', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:14.691846 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 68, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:14.691846', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:17.296814 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 72, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:17.296814', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:20.027319 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 76, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:20.027319', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 9, 10, 11} available.
Started basinhopping at 2020-12-25 06:52:22.699313 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/kagome/periodic/own_graph/opl/infidelity/3x2', 'n_par': 80, 'par_multiplicity': 9, 'n_iter': 0, 'cost_fn': 'infidelity', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2020-12-25 06:52:22.699313', 'complete_graph': [(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5), (1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4), (1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)], 'layers': [[(0, 6), (2, 8), (4, 10), (12, 9), (14, 11), (16, 7), (15, 1), (17, 3), (13, 5)], [(1, 6), (3, 8), (5, 10), (7, 12), (9, 14), (11, 16), (13, 0), (15, 2), (17, 4)], [(1, 2), (3, 4), (5, 0), (8, 12), (10, 14), (6, 16), (7, 13), (9, 15), (11, 17)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17)]], 'n': 18}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 160, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 104, in calc_cost
    cost=infidelity_from_parameters(init_reg,run_args.layers,run_args,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 74, in infidelity_from_parameters
    for i in range(len(parameters)):
TypeError: object of type 'int' has no len()
