/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 20:01:49.707762 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 0, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 20:01:49.707762', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
 
==========================================================================================
Finished basinhopping of  /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22 at 2021-01-16 20:01:50.475356 UTC, with
 
{'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 0, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
init_par = []
 
RESULTS:
--------
E_VQE = -8.249999999999993
inf_VQE = 0.8389825318259914
n_fn_calls = 0
Wall-clock time 8.518848154279922e-05 hours
 
For more output, see /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22/output.txt
Plots of output saved in /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22
End of HVQE.py
==========================================================================================
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 20:01:55.659508 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 2, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 20:01:55.659508', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
.........................../home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
 
==========================================================================================
Finished basinhopping of  /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22 at 2021-01-16 20:04:43.948288 UTC, with
 
{'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 2, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
init_par = [-0.0004388708719005504, 0.0003939932615882283]
 
RESULTS:
--------
E_VQE = -9.40520309626058
inf_VQE = 0.5756415190549664
n_fn_calls = 27
Wall-clock time 0.046598628560702 hours
 
For more output, see /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22/output.txt
Plots of output saved in /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22
End of HVQE.py
==========================================================================================
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 20:04:51.426346 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 4, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 20:04:51.426346', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
......................................../home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
 
==========================================================================================
Finished basinhopping of  /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22 at 2021-01-16 20:12:54.920710 UTC, with
 
{'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 4, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
init_par = [-0.00030679040496052544, -0.00018336235220817588, 0.0004105776811503944, -0.00047834158682904485]
 
RESULTS:
--------
E_VQE = -9.596803766002198
inf_VQE = 0.432192467797636
n_fn_calls = 40
Wall-clock time 0.1341426608959834 hours
 
For more output, see /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22/output.txt
Plots of output saved in /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22
End of HVQE.py
==========================================================================================
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 20:13:02.507390 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 6, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 20:13:02.507390', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
...................................................................../home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
 
==========================================================================================
Finished basinhopping of  /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22 at 2021-01-16 20:33:41.439067 UTC, with
 
{'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 6, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
init_par = [0.00035344340491674504, -0.00038826783976783174, -3.772670070878426e-05, -0.0002149032358190343, 0.0003840616978240918, -0.00038221478174442025]
 
RESULTS:
--------
E_VQE = -9.656551467197541
inf_VQE = 0.34160678004069456
n_fn_calls = 69
Wall-clock time 0.3439950908554925 hours
 
For more output, see /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22/output.txt
Plots of output saved in /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22
End of HVQE.py
==========================================================================================
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 20:33:48.917268 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 8, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 20:33:48.917268', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
................................................................................................../home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
 
==========================================================================================
Finished basinhopping of  /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22 at 2021-01-16 21:12:42.350596 UTC, with
 
{'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 8, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
init_par = [6.939234500383641e-05, 2.9894649836560358e-05, 0.0004683593550571316, -0.0002440942738401335, -0.00020964078578854982, -0.00048437514700931715, -0.00019601695920428976, 0.0004145067982705366]
 
RESULTS:
--------
E_VQE = -9.65817551630524
inf_VQE = 0.34602639128148605
n_fn_calls = 98
Wall-clock time 0.6480130596293344 hours
 
For more output, see /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22/output.txt
Plots of output saved in /home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22
End of HVQE.py
==========================================================================================
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 21:12:50.135330 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 10, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 21:12:50.135330', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg,gs_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 163, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 110, in calc_cost
    cost.backward()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/variable.py", line 1438, in backward
    _backprop_to_all([(node, grad_var)], retain_grad, loss_scale)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/variable.py", line 1653, in _backprop_to_all
    _backprop_utils.backprop_step(
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_backprop_utils.py", line 140, in backprop_step
    _reraise_with_stack(func, e)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_backprop_utils.py", line 137, in backprop_step
    gxs = func.backward(
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 381, in backward
    return self.value * g,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 391, in mul
    return MulConstant(rhs).apply((self,))[0]
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/function_node.py", line 321, in apply
    outputs = self.forward(in_data)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 377, in forward
    return utils.force_array(value * x[0]),
  File "cupy/core/core.pyx", line 1426, in cupy.core.core.ndarray.__array_ufunc__
  File "cupy/core/_kernel.pyx", line 1063, in cupy.core._kernel.ufunc.__call__
  File "cupy/core/_kernel.pyx", line 565, in cupy.core._kernel._get_out_args
  File "cupy/core/core.pyx", line 3018, in cupy.core.core._ndarray_init
  File "cupy/core/core.pyx", line 223, in cupy.core.core.ndarray._init_fast
  File "cupy/cuda/memory.pyx", line 574, in cupy.cuda.memory.alloc
  File "cupy/cuda/memory.pyx", line 1246, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 1267, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 935, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 955, in cupy.cuda.memory.SingleDeviceMemoryPool._malloc
  File "cupy/cuda/memory.pyx", line 1206, in cupy.cuda.memory.SingleDeviceMemoryPool._try_malloc
cupy.cuda.memory.OutOfMemoryError: Out of memory allocating 33,554,432 bytes (allocated so far: 11,475,623,424 bytes).
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 21:12:53.678626 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 12, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 21:12:53.678626', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg,gs_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 163, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 110, in calc_cost
    cost.backward()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/variable.py", line 1438, in backward
    _backprop_to_all([(node, grad_var)], retain_grad, loss_scale)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/variable.py", line 1653, in _backprop_to_all
    _backprop_utils.backprop_step(
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_backprop_utils.py", line 212, in backprop_step
    _reduce(gx)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_backprop_utils.py", line 15, in _reduce
    grad_list[:] = [chainer.functions.add(*grad_list)]
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 250, in add
    return Add().apply((lhs, rhs))[0]
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/function_node.py", line 321, in apply
    outputs = self.forward(in_data)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 172, in forward
    y = utils.force_array(x[0] + x[1])
  File "cupy/core/core.pyx", line 1072, in cupy.core.core.ndarray.__add__
  File "cupy/core/_kernel.pyx", line 1063, in cupy.core._kernel.ufunc.__call__
  File "cupy/core/_kernel.pyx", line 565, in cupy.core._kernel._get_out_args
  File "cupy/core/core.pyx", line 3018, in cupy.core.core._ndarray_init
  File "cupy/core/core.pyx", line 223, in cupy.core.core.ndarray._init_fast
  File "cupy/cuda/memory.pyx", line 574, in cupy.cuda.memory.alloc
  File "cupy/cuda/memory.pyx", line 1246, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 1267, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 935, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 955, in cupy.cuda.memory.SingleDeviceMemoryPool._malloc
  File "cupy/cuda/memory.pyx", line 1206, in cupy.cuda.memory.SingleDeviceMemoryPool._try_malloc
cupy.cuda.memory.OutOfMemoryError: Out of memory allocating 33,554,432 bytes (allocated so far: 11,475,623,424 bytes).
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/backends/cuda.py:142: UserWarning: cuDNN is not enabled.
Please reinstall CuPy after you install cudnn
(see https://docs-cupy.chainer.org/en/stable/install.html#install-cudnn).
  warnings.warn(
/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/_environment_check.py:70: UserWarning: 
--------------------------------------------------------------------------------
CuPy (cupy) version 8.0.0 may not be compatible with this version of Chainer.
Please consider installing the supported version by running:
  $ pip install 'cupy>=6.3.0,<7.0.0'

See the following page for more details:
  https://docs-cupy.chainer.org/en/latest/install.html
--------------------------------------------------------------------------------

  warnings.warn(msg.format(
CuPy installation found, continuing using GPU acceleration.
having the CPUs {8, 10, 6} available.
Started basinhopping at 2021-01-16 21:12:57.199606 UTC, with
command line arguments = {'path': '/home/jkgpu/HVQE/data/chain/periodic/own_graph/ops/energy/22', 'n_par': 14, 'par_multiplicity': 11, 'n_iter': 0, 'cost_fn': 'energy', 'temperature': 1.0, 'stepsize': 1.0, 'init_par': None, 'dump_interval': None}
runtime variables =  {'GPU': True, 'date_start': '2021-01-16 21:12:57.199606', 'complete_graph': [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0), (0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'init_layer': [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)], 'layers': [[(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20), (21, 0)], [(0, 1), (2, 3), (4, 5), (6, 7), (8, 9), (10, 11), (12, 13), (14, 15), (16, 17), (18, 19), (20, 21)]], 'n': 22}
Traceback (most recent call last):
  File "/home/jkgpu/HVQE/HVQE.py", line 78, in <module>
    vqe_out=_HVQE.run_VQE(cmd_args,run_args,init_reg,gs_reg)
  File "/home/jkgpu/HVQE/_HVQE.py", line 163, in run_VQE
    sol=scipy.optimize.basinhopping(calc_cost,vqe_out.init_par,stepsize=cmd_args.stepsize,minimizer_kwargs={'jac':True, 'options':{'gtol':0.5e-05}},niter=cmd_args.n_iter,interval=25,callback=callback,T=cmd_args.temperature)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 678, in basinhopping
    bh = BasinHoppingRunner(x0, wrapped_minimizer, take_step_wrapped,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 72, in __init__
    minres = minimizer(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_basinhopping.py", line 284, in __call__
    return self.minimizer(self.func, x0, **self.kwargs)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_minimize.py", line 612, in minimize
    return _minimize_bfgs(fun, x0, args, jac, callback, **options)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 1101, in _minimize_bfgs
    sf = _prepare_scalar_function(fun, x0, jac, args=args, epsilon=eps,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 261, in _prepare_scalar_function
    sf = ScalarFunction(fun, x0, args, grad, hess,
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 76, in __init__
    self._update_fun()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 166, in _update_fun
    self._update_fun_impl()
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 73, in update_fun
    self.f = fun_wrapped(self.x)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/_differentiable_functions.py", line 70, in fun_wrapped
    return fun(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 74, in __call__
    self._compute_if_needed(x, *args)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/scipy/optimize/optimize.py", line 68, in _compute_if_needed
    fg = self.fun(x, *args)
  File "/home/jkgpu/HVQE/_HVQE.py", line 105, in calc_cost
    cost=Heisenberg_energy_from_parameters(run_args.complete_graph,init_reg,run_args.layers,run_args.n,cmd_args.par_multiplicity,parameters)
  File "/home/jkgpu/HVQE/_HVQE.py", line 68, in Heisenberg_energy_from_parameters
    E=qem.Heisenberg_energy(complete_graph,reg)
  File "/home/jkgpu/HVQE/qem.py", line 645, in Heisenberg_energy
    apply_action(action,reg_prime)
  File "/home/jkgpu/HVQE/qem.py", line 434, in apply_action
    reg.psi=reg_id.psi+reg_SWAP.psi
  File "/home/jkgpu/HVQE/qem.py", line 53, in __add__
    return Array(self.re+other.re,self.im+other.im)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 250, in add
    return Add().apply((lhs, rhs))[0]
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/function_node.py", line 321, in apply
    outputs = self.forward(in_data)
  File "/home/jkgpu/miniconda3/lib/python3.8/site-packages/chainer/functions/math/basic_math.py", line 172, in forward
    y = utils.force_array(x[0] + x[1])
  File "cupy/core/core.pyx", line 1072, in cupy.core.core.ndarray.__add__
  File "cupy/core/_kernel.pyx", line 1063, in cupy.core._kernel.ufunc.__call__
  File "cupy/core/_kernel.pyx", line 565, in cupy.core._kernel._get_out_args
  File "cupy/core/core.pyx", line 3018, in cupy.core.core._ndarray_init
  File "cupy/core/core.pyx", line 223, in cupy.core.core.ndarray._init_fast
  File "cupy/cuda/memory.pyx", line 574, in cupy.cuda.memory.alloc
  File "cupy/cuda/memory.pyx", line 1246, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 1267, in cupy.cuda.memory.MemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 935, in cupy.cuda.memory.SingleDeviceMemoryPool.malloc
  File "cupy/cuda/memory.pyx", line 955, in cupy.cuda.memory.SingleDeviceMemoryPool._malloc
  File "cupy/cuda/memory.pyx", line 1206, in cupy.cuda.memory.SingleDeviceMemoryPool._try_malloc
cupy.cuda.memory.OutOfMemoryError: Out of memory allocating 33,554,432 bytes (allocated so far: 11,475,623,424 bytes).
